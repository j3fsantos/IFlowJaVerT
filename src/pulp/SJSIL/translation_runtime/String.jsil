(* ****************** *) 
(* THE STRING LIBRARY *)
(* ****************** *) 

(* *** CALL *** *)

proc String_call (s) {
			goto [s = $$empty] emp to_str
	
	emp:	xret := "";
			goto rlab;
	
	to_str:	xret := "i__toString" (s);
			
	rlab:	skip;
}
with
{
	ret: xret, rlab;
};

(* *** CONSTRUCT *** *)

proc String_construct (s) {
	norm:	xret := new ();
			[xret, "@proto"] := $lsp;
			[xret, "@class"] := "String";
			[xret, "@extensible"] := $$t;
			
			[xret, "@getOwnProperty"]    := "o__getOwnProperty";
			[xret, "@getProp"]           := "o__getProperty";
			[xret, "@get"]               := "o__get";
			[xret, "@canPut"]            := "o__canPut";
			[xret, "@put"]               := "o__put";
			[xret, "@hasProperty"]       := "o__hasProperty";
			[xret, "@deleteProperty"]    := "o__deleteProperty";
			[xret, "@defaultValue"]      := "o__defaultValue";
			[xret, "@defineOwnProperty"] := "o__defineOwnProperty";
			
			[xret, "@primitiveValue"]   := $$empty;
			[xret, "@construct"]        := $$empty;
			[xret, "@call"]             := $$empty;
			[xret, "@hasInstance"]      := $$empty;
			[xret, "@scope"]            := $$empty;
			[xret, "@formalParameters"] := $$empty;
			[xret, "@body"]             := $$empty;
			[xret, "@targetFunction"]   := $$empty;
			[xret, "@boundThis"]        := $$empty;
			[xret, "@boundArguments"]   := $$empty;
			[xret, "@match"]            := $$empty;
			[xret, "@parameterMap"]     := $$empty;
			
	rlab:	skip
}
with
{
	ret: xret, rlab;
}