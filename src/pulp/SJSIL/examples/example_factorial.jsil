pred factorial (n, r) : (n == 0) * (r == 1),
						(!(n <# 1)) * factorial(n - 1, #n1) * (r == n * #n1);

spec factorial (n)
	[[ types(n : $$int_type) * (!(n <# 0)) ]]
	[[ types(n : $$int_type, ret : $$int_type) * (!(n <# 0)) * factorial(n, ret) ]]
	normal
proc factorial (n) {
	xret := 1;
pos:
	goto [n = 0] rlab rec;
rec:
	xret := "factorial" (n - 1);
	xret := n * xret;
	[* fold factorial(n, xret) *]
rlab:
	skip
} with {
	ret: xret, rlab;
};
