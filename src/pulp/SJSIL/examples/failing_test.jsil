pred ObjectProp (l, prop, v) :
	types(l : $$object_type, prop : $$string_type) * ((l, prop) -> v);

pred CommonMethods (l) :
	((l, "@getProperty") -> "o__getProperty") * ((l, "@getOwnProperty") -> "o__getOwnProperty");

pred ProtoLookup (l, prop, d) :
	ObjectProp (l, prop, d),
	ObjectProp (l, prop, None) * ((l, "@proto") -> $$null) * d == $$undefined,
	ObjectProp (l, prop, None) * ((l, "@proto") -> #lp) * (!(#lp == $$null)) * CommonMethods(#lp) * ProtoLookup(#lp, prop, d);

spec o__getProperty (l, prop)
	[[ ProtoLookup (l, prop, #d) ]]
	[[ ProtoLookup (l, prop, #d) * ret == #d ]]
	normal
proc o__getProperty (l, prop) {
			[* unfold (ProtoLookup (l, prop, #d)) *]
			gop := [l, "@getOwnProperty"];
			xret := gop (l, prop) with elab;
			goto [xret = $$undefined] next rlab;
			
	next:	proto := [l, "@proto"];
			goto [proto = $$null] rlab call;
			
	call:	gp := [proto, "@getProperty"];
			xret := gp (proto, prop) with elab;
	
    rlab:   skip;
    elab:	skip
}
with 
{
    ret: 	xret, rlab;
    err:	xret, elab;
};