
*********** Starting bi-abduction symbolic execution. ***********

----------------------------------
----------------------------------
Symbolic execution of Array_isArray
----------------------------------
--0--
TIME: 0.023243
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 0.023291
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(array) = $$object_type)] 2 5
----------------------------------
I found the model: 

(define-fun _lvar_0 () Extended_JSIL_Literal
  (Set (_ as-array k!2)))
(define-fun k!2 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_0 () Extended_JSIL_Literal
  (Elem (Loc 0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--1--
TIME: 0.056567
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(array) = $$object_type)] 2 5
----------------------------------
----------------------------------
--2--
TIME: 0.056609
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 CMD: class := [array, "@class"]
----------------------------------
----------------------------------
--3--
TIME: 0.056717
 ---- STATE: ---- 
Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: _lvar_1)
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (_lvar_1 == None))
Gamma: 	
	(xret: $$boolean_type)
	(array: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
	(_$l_0 == _lvar_0)
	(! (_lvar_1 == None))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(class = "Array")] 4 5
----------------------------------
I found the model: 

(define-fun _$l_0 () Extended_JSIL_Literal
  (Elem (Loc 5)))
(define-fun _lvar_1 () Extended_JSIL_Literal
  (Set (_ as-array k!12)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 0.0) (= x!1 4.0)) 1.0
  (ite (and (= x!0 0.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 0.0) (= x!1 0.0)) 4.0
    3.0))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!12 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 0.0) 5.0
    0.0))
I found the model: 

(define-fun _$l_0 () Extended_JSIL_Literal
  (Elem (Loc 5)))
(define-fun _lvar_1 () Extended_JSIL_Literal
  (Elem (String 0)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 0.0) (= x!1 4.0)) 1.0
  (ite (and (= x!0 0.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 0.0) (= x!1 0.0)) 4.0
    3.0))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 0.0) 5.0
    0.0))
I could not determine the branch.
----------------------------------
--3--
TIME: 0.099101
 ---- STATE: ---- 
Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: _lvar_1)
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (_lvar_1 == None))
	(_lvar_1 == \"Array\")
Gamma: 	
	(xret: $$boolean_type)
	(array: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
	(_$l_0 == _lvar_0)
	(! (_lvar_1 == None))
	(_lvar_1 == \"Array\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(class = "Array")] 4 5
----------------------------------
----------------------------------
--4--
TIME: 0.099174
 ---- STATE: ---- 
Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: \"Array\")
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(class: $$list_type)
	(array: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
	(_$l_0 == _lvar_0)
	(! (_lvar_1 == None))
	(_lvar_1 == \"Array\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--5--
TIME: 0.099209
 ---- STATE: ---- 
Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(class: \"Array\")
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(class: $$list_type)
	(array: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
	(_$l_0 == _lvar_0)
	(! (_lvar_1 == None))
	(_lvar_1 == \"Array\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(class: \"Array\")
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(class: $$list_type)
	(array: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(class: \"Array\")
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(class: $$list_type)
	(array: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
	(_$l_0 == _lvar_0)
	(! (_lvar_1 == None))
	(_lvar_1 == \"Array\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(class: \"Array\")
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(class: $$list_type)
	(array: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
	(_$l_0 == _lvar_0)
	(! (_lvar_1 == None))
	(_lvar_1 == \"Array\")
Gamma: 	
Preds: 

----------------------------------
--3--
TIME: 0.116072
 ---- STATE: ---- 
Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: _lvar_1)
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (_lvar_1 == None))
	(! (_lvar_1 == \"Array\"))
Gamma: 	
	(xret: $$boolean_type)
	(array: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
	(_$l_0 == _lvar_0)
	(! (_lvar_1 == None))
	(! (_lvar_1 == \"Array\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(class = "Array")] 4 5
----------------------------------
----------------------------------
--5--
TIME: 0.116209
 ---- STATE: ---- 
Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: _lvar_1)
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (_lvar_1 == None))
	(! (_lvar_1 == \"Array\"))
Gamma: 	
	(xret: $$boolean_type)
	(array: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
	(_$l_0 == _lvar_0)
	(! (_lvar_1 == None))
	(! (_lvar_1 == \"Array\"))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: _lvar_1)
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (_lvar_1 == None))
	(! (_lvar_1 == \"Array\"))
Gamma: 	
	(xret: $$boolean_type)
	(array: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: _lvar_1)
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (_lvar_1 == None))
	(! (_lvar_1 == \"Array\"))
Gamma: 	
	(xret: $$boolean_type)
	(array: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
	(_$l_0 == _lvar_0)
	(! (_lvar_1 == None))
	(! (_lvar_1 == \"Array\"))
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: _lvar_1)
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (_lvar_1 == None))
	(! (_lvar_1 == \"Array\"))
Gamma: 	
	(xret: $$boolean_type)
	(array: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_0 |-> [(\"@class\": _lvar_1), (default: $$unknown)]
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(typeOf(_lvar_0) == $$object_type)
	(_$l_0 == _lvar_0)
	(! (_lvar_1 == None))
	(! (_lvar_1 == \"Array\"))
Gamma: 	
Preds: 

----------------------------------
--1--
TIME: 0.129019
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(array: _lvar_0)
Pure Formulae: 	
	(! (typeOf(_lvar_0) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(! (typeOf(_lvar_0) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(array) = $$object_type)] 2 5
----------------------------------
----------------------------------
--5--
TIME: 0.129065
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(array: _lvar_0)
Pure Formulae: 	
	(! (typeOf(_lvar_0) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(! (typeOf(_lvar_0) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(array: _lvar_0)
Pure Formulae: 	
	(! (typeOf(_lvar_0) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(array: _lvar_0)
Pure Formulae: 	
	(! (typeOf(_lvar_0) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(! (typeOf(_lvar_0) == $$object_type))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(array: _lvar_0)
Pure Formulae: 	
	(! (typeOf(_lvar_0) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(array: _lvar_0)
Pure Formulae: 	
	(! (typeOf(_lvar_0) == $$object_type))
Gamma: 	
Preds: 

Spec Var: #s_0
Spec Var: #s_1
Spec Var: #s_2
Spec Var: #s_3
Spec Var: #s_3
Spec Var: #s_4
Spec Var: #s_4
----------------------------------
----------------------------------
Symbolic execution of i__typeOf
----------------------------------
--0--
TIME: 0.156601
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$undefined)] 1 3
----------------------------------
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Set (_ as-array k!30)))
(define-fun k!30 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Elem Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--0--
TIME: 0.181164
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(_lvar_2 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(_lvar_2 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$undefined)] 1 3
----------------------------------
----------------------------------
--1--
TIME: 0.181243
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(_lvar_2 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "undefined"
----------------------------------
----------------------------------
--2--
TIME: 0.181331
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"undefined\")
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(_lvar_2 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 0.181413
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"undefined\")
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(_lvar_2 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: \"undefined\")
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(v: $$undefined_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: \"undefined\")
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(_lvar_2 == $$undefined)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: \"undefined\")
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(_lvar_2 == $$undefined)
Gamma: 	
Preds: 

----------------------------------
--0--
TIME: 0.191317
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$undefined)] 1 3
----------------------------------
----------------------------------
--3--
TIME: 0.191358
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$null)] 4 6
----------------------------------
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Set (_ as-array k!42)))
(define-fun k!42 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Elem Null))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--3--
TIME: 0.212897
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(_lvar_2 == $$null)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(_lvar_2 == $$null)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$null)] 4 6
----------------------------------
----------------------------------
--4--
TIME: 0.212980
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(_lvar_2 == $$null)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "object"
----------------------------------
----------------------------------
--5--
TIME: 0.213068
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"object\")
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(v: $$null_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(_lvar_2 == $$null)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 0.213175
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"object\")
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(v: $$null_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(_lvar_2 == $$null)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: \"object\")
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(v: $$null_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: \"object\")
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(v: $$null_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(_lvar_2 == $$null)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: \"object\")
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(v: $$null_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(_lvar_2 == $$null)
Gamma: 	
Preds: 

----------------------------------
--3--
TIME: 0.213381
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$null)] 4 6
----------------------------------
----------------------------------
--6--
TIME: 0.213408
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Set (_ as-array k!53)))
(define-fun k!53 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--6--
TIME: 0.240288
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
----------------------------------
--7--
TIME: 0.240329
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "boolean"
----------------------------------
----------------------------------
--8--
TIME: 0.240361
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"boolean\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 0.240389
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"boolean\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: \"boolean\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
	(xret: $$string_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: \"boolean\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
	(xret: $$string_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: \"boolean\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
	(xret: $$string_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(typeOf(_lvar_2) == $$boolean_type)
Gamma: 	
Preds: 

----------------------------------
--6--
TIME: 0.269170
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
----------------------------------
--9--
TIME: 0.269230
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$number_type)] 10 12
----------------------------------
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Set (_ as-array k!66)))
(define-fun k!66 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--9--
TIME: 0.299289
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$number_type)] 10 12
----------------------------------
----------------------------------
--10--
TIME: 0.299335
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "number"
----------------------------------
----------------------------------
--11--
TIME: 0.299372
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"number\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 0.299403
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"number\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: \"number\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
	(xret: $$string_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: \"number\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
	(xret: $$string_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: \"number\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
	(xret: $$string_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(typeOf(_lvar_2) == $$number_type)
Gamma: 	
Preds: 

----------------------------------
--9--
TIME: 0.311573
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$number_type)] 10 12
----------------------------------
----------------------------------
--12--
TIME: 0.311639
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$string_type)] 13 15
----------------------------------
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Set (_ as-array k!79)))
(define-fun k!79 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Elem (String 0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--12--
TIME: 0.348553
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$string_type)] 13 15
----------------------------------
----------------------------------
--13--
TIME: 0.349259
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "string"
----------------------------------
----------------------------------
--14--
TIME: 0.349303
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"string\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 0.349354
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"string\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: \"string\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
	(xret: $$string_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: \"string\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
	(xret: $$string_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: \"string\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
	(xret: $$string_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(typeOf(_lvar_2) == $$string_type)
Gamma: 	
Preds: 

----------------------------------
--12--
TIME: 0.364562
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$string_type)] 13 15
----------------------------------
----------------------------------
--15--
TIME: 0.364654
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$object_type)] 16 22
----------------------------------
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Set (_ as-array k!92)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!92 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_2 () Extended_JSIL_Literal
  (Elem (Loc 0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--15--
TIME: 0.407076
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$object_type)] 16 22
----------------------------------
----------------------------------
--16--
TIME: 0.407134
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := hasField(v,"@call")
----------------------------------
----------------------------------
--17--
TIME: 0.407204
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(xret: (not (_lvar_3 = None)))
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [xret] 20 18
----------------------------------
I found the model: 

(define-fun _$l_1 () Extended_JSIL_Literal
  (Elem (Loc 0)))
(define-fun _lvar_3 () Extended_JSIL_Literal
  (Elem None))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _$l_1 () Extended_JSIL_Literal
  (Elem (Loc 0)))
(define-fun _lvar_3 () Extended_JSIL_Literal
  (Set (_ as-array k!106)))
(define-fun k!106 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--17--
TIME: 0.463390
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(xret: (not (_lvar_3 = None)))
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (_lvar_3 == None))
Gamma: 	
	(xret: $$boolean_type)
	(v: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(! (_lvar_3 == None))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [xret] 20 18
----------------------------------
----------------------------------
--20--
TIME: 0.463479
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(xret: (not (_lvar_3 = None)))
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (_lvar_3 == None))
Gamma: 	
	(xret: $$boolean_type)
	(v: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(! (_lvar_3 == None))
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "function"
----------------------------------
----------------------------------
--21--
TIME: 0.463538
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(xret: \"function\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (_lvar_3 == None))
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(! (_lvar_3 == None))
Gamma: 	
Preds: 
 -------- 
 CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 0.463590
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(xret: \"function\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (_lvar_3 == None))
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(! (_lvar_3 == None))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(xret: \"function\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (_lvar_3 == None))
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(xret: \"function\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (_lvar_3 == None))
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(! (_lvar_3 == None))
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(xret: \"function\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (_lvar_3 == None))
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(! (_lvar_3 == None))
Gamma: 	
Preds: 

----------------------------------
--17--
TIME: 0.479131
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(xret: (not (_lvar_3 = None)))
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(_lvar_3 == None)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(_lvar_3 == None)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [xret] 20 18
----------------------------------
typing the jsil equality. t1: $$none_type. t2: $$none_type.
----------------------------------
--18--
TIME: 0.479216
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: (not (None = None)))
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(_lvar_3 == None)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "object"
----------------------------------
----------------------------------
--19--
TIME: 0.479401
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: \"object\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(_lvar_3 == None)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 0.479441
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: \"object\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(_lvar_3 == None)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: \"object\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: \"object\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(_lvar_3 == None)
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: \"object\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_1 |-> [(\"@call\": _lvar_3), (default: $$unknown)]
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(typeOf(_lvar_2) == $$object_type)
	(_$l_1 == _lvar_2)
	(_lvar_3 == None)
Gamma: 	
Preds: 

----------------------------------
--15--
TIME: 0.494016
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$object_type)] 16 22
----------------------------------
----------------------------------
--22--
TIME: 0.494076
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "typeOf: This should not happen."
----------------------------------
----------------------------------
--23--
TIME: 0.494136
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"typeOf: This should not happen.\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto 25
----------------------------------
----------------------------------
--25--
TIME: 0.494177
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"typeOf: This should not happen.\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: \"typeOf: This should not happen.\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: \"typeOf: This should not happen.\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: \"typeOf: This should not happen.\")
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_2)
Pure Formulae: 	
	(! (_lvar_2 == $$undefined))
	(! (_lvar_2 == $$null))
	(! (typeOf(_lvar_2) == $$boolean_type))
	(! (typeOf(_lvar_2) == $$number_type))
	(! (typeOf(_lvar_2) == $$string_type))
	(! (typeOf(_lvar_2) == $$object_type))
Gamma: 	
Preds: 

Spec Var: #s_5
Spec Var: v
Spec Var: #s_6
Spec Var: v
Spec Var: #s_7
Spec Var: #s_7
Spec Var: #s_8
Spec Var: #s_8
Spec Var: #s_9
Spec Var: #s_9
Spec Var: #s_10
Spec Var: #s_11
Spec Var: #s_11
Spec Var: #s_12
Spec Var: #s_13
Spec Var: #s_14
Spec Var: #s_14
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 0.517812
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 0.517848
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
Gamma: 	
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
I found the model: 

(define-fun _lvar_4 () Extended_JSIL_Literal
  (Set (_ as-array k!119)))
(define-fun k!119 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_4 () Extended_JSIL_Literal
  (Elem Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--1--
TIME: 0.542485
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
----------------------------------
--2--
TIME: 0.542552
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--3--
TIME: 0.542639
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto 5
----------------------------------
----------------------------------
--5--
TIME: 0.542685
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
	(((((_lvar_4 == $$undefined) \/ (_lvar_4 == $$null)) \/ (typeOf(_lvar_4) == $$boolean_type)) \/ (typeOf(_lvar_4) == $$number_type)) \/ (typeOf(_lvar_4) == $$string_type))
Gamma: 	
Preds: 

----------------------------------
--1--
TIME: 0.553537
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(((((! (_lvar_4 == $$undefined)) /\ (! (_lvar_4 == $$null))) /\ (! (typeOf(_lvar_4) == $$boolean_type))) /\ (! (typeOf(_lvar_4) == $$number_type))) /\ (! (typeOf(_lvar_4) == $$string_type)))
Gamma: 	
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
	(((((! (_lvar_4 == $$undefined)) /\ (! (_lvar_4 == $$null))) /\ (! (typeOf(_lvar_4) == $$boolean_type))) /\ (! (typeOf(_lvar_4) == $$number_type))) /\ (! (typeOf(_lvar_4) == $$string_type)))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
----------------------------------
--4--
TIME: 0.553597
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(! (_lvar_4 == $$undefined))
	(! (typeOf(_lvar_4) == $$string_type))
	(! (typeOf(_lvar_4) == $$number_type))
	(! (typeOf(_lvar_4) == $$boolean_type))
	(! (_lvar_4 == $$null))
Gamma: 	
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
	(((((! (_lvar_4 == $$undefined)) /\ (! (_lvar_4 == $$null))) /\ (! (typeOf(_lvar_4) == $$boolean_type))) /\ (! (typeOf(_lvar_4) == $$number_type))) /\ (! (typeOf(_lvar_4) == $$string_type)))
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--5--
TIME: 0.553637
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(! (_lvar_4 == $$undefined))
	(! (typeOf(_lvar_4) == $$string_type))
	(! (typeOf(_lvar_4) == $$number_type))
	(! (typeOf(_lvar_4) == $$boolean_type))
	(! (_lvar_4 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
	(((((! (_lvar_4 == $$undefined)) /\ (! (_lvar_4 == $$null))) /\ (! (typeOf(_lvar_4) == $$boolean_type))) /\ (! (typeOf(_lvar_4) == $$number_type))) /\ (! (typeOf(_lvar_4) == $$string_type)))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(! (_lvar_4 == $$undefined))
	(! (typeOf(_lvar_4) == $$string_type))
	(! (typeOf(_lvar_4) == $$number_type))
	(! (typeOf(_lvar_4) == $$boolean_type))
	(! (_lvar_4 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(! (_lvar_4 == $$undefined))
	(! (typeOf(_lvar_4) == $$string_type))
	(! (typeOf(_lvar_4) == $$number_type))
	(! (typeOf(_lvar_4) == $$boolean_type))
	(! (_lvar_4 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
	(((((! (_lvar_4 == $$undefined)) /\ (! (_lvar_4 == $$null))) /\ (! (typeOf(_lvar_4) == $$boolean_type))) /\ (! (typeOf(_lvar_4) == $$number_type))) /\ (! (typeOf(_lvar_4) == $$string_type)))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(_lvar_4))
	(v: _lvar_4)
Pure Formulae: 	
	(! (_lvar_4 == $$undefined))
	(! (typeOf(_lvar_4) == $$string_type))
	(! (typeOf(_lvar_4) == $$number_type))
	(! (typeOf(_lvar_4) == $$boolean_type))
	(! (_lvar_4 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_4)
Pure Formulae: 	
	(((((! (_lvar_4 == $$undefined)) /\ (! (_lvar_4 == $$null))) /\ (! (typeOf(_lvar_4) == $$boolean_type))) /\ (! (typeOf(_lvar_4) == $$number_type))) /\ (! (typeOf(_lvar_4) == $$string_type)))
Gamma: 	
Preds: 

Spec Var: #s_15
Spec Var: #s_15
Spec Var: #s_16
Spec Var: #s_16
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 0.567260
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 0.567291
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "break")] 43 2
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!133)))
(define-fun k!133 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 2.0)) 7.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
    6.0)))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
    0.0))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 5)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 2.0)) 7.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
    6.0)))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
    0.0))
I could not determine the branch.
----------------------------------
--1--
TIME: 0.610705
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(_lvar_5 == \"break\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(_lvar_5 == \"break\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "break")] 43 2
----------------------------------
----------------------------------
--43--
TIME: 0.610786
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"break\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(_lvar_5 == \"break\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 0.610811
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"break\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(_lvar_5 == \"break\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"break\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"break\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(_lvar_5 == \"break\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"break\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(_lvar_5 == \"break\")
Gamma: 	
Preds: 

----------------------------------
--1--
TIME: 0.610961
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "break")] 43 2
----------------------------------
----------------------------------
--2--
TIME: 0.610990
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "case")] 43 3
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!143)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
    7.0))))))))
(define-fun k!143 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
    0.0)))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 9)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
    7.0))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
    0.0)))
I could not determine the branch.
----------------------------------
--2--
TIME: 0.649360
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(_lvar_5 == \"case\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(_lvar_5 == \"case\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "case")] 43 3
----------------------------------
----------------------------------
--43--
TIME: 0.649421
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"case\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(_lvar_5 == \"case\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 0.649445
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"case\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(_lvar_5 == \"case\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"case\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"case\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(_lvar_5 == \"case\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"case\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(_lvar_5 == \"case\")
Gamma: 	
Preds: 

----------------------------------
--2--
TIME: 0.649597
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "case")] 43 3
----------------------------------
----------------------------------
--3--
TIME: 0.649631
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "catch")] 43 4
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!154)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 2.0)) 7.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 3.0)) 7.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
    2.0))))))))))))
(define-fun k!154 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
    0.0))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 12)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 2.0)) 7.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 3.0)) 7.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
    2.0))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
    0.0))))
I could not determine the branch.
----------------------------------
--3--
TIME: 0.695623
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(_lvar_5 == \"catch\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(_lvar_5 == \"catch\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "catch")] 43 4
----------------------------------
----------------------------------
--43--
TIME: 0.695671
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"catch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(_lvar_5 == \"catch\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 0.695696
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"catch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(_lvar_5 == \"catch\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"catch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"catch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(_lvar_5 == \"catch\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"catch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(_lvar_5 == \"catch\")
Gamma: 	
Preds: 

----------------------------------
--3--
TIME: 0.695847
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "catch")] 43 4
----------------------------------
----------------------------------
--4--
TIME: 0.695999
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "continue")] 43 5
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!165)))
(define-fun k!165 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 2.0)) 7.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 3.0)) 7.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 15.0) (= x!1 7.0)) 7.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
    11.0)))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
    0.0)))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 15)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 2.0)) 7.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 3.0)) 7.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 15.0) (= x!1 7.0)) 7.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
    11.0)))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
    0.0)))))
I could not determine the branch.
----------------------------------
--4--
TIME: 0.754234
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(_lvar_5 == \"continue\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(_lvar_5 == \"continue\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "continue")] 43 5
----------------------------------
----------------------------------
--43--
TIME: 0.754300
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"continue\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(_lvar_5 == \"continue\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 0.754329
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"continue\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(_lvar_5 == \"continue\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"continue\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"continue\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(_lvar_5 == \"continue\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"continue\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(_lvar_5 == \"continue\")
Gamma: 	
Preds: 

----------------------------------
--4--
TIME: 0.754490
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "continue")] 43 5
----------------------------------
----------------------------------
--5--
TIME: 0.754563
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "debugger")] 43 6
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!176)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
    7.0))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!176 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
    0.0))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 20)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
    7.0))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
    0.0))))))
I could not determine the branch.
----------------------------------
--5--
TIME: 0.831740
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(_lvar_5 == \"debugger\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(_lvar_5 == \"debugger\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "debugger")] 43 6
----------------------------------
----------------------------------
--43--
TIME: 0.831791
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"debugger\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(_lvar_5 == \"debugger\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 0.849385
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"debugger\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(_lvar_5 == \"debugger\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"debugger\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"debugger\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(_lvar_5 == \"debugger\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"debugger\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(_lvar_5 == \"debugger\")
Gamma: 	
Preds: 

----------------------------------
--5--
TIME: 0.849563
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "debugger")] 43 6
----------------------------------
----------------------------------
--6--
TIME: 0.849636
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "default")] 43 7
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!187)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
    7.0))))))))))))))))))))))))))))))))
(define-fun k!187 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
    0.0)))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 23)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
    7.0))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
    0.0)))))))
I could not determine the branch.
----------------------------------
--6--
TIME: 0.943036
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(_lvar_5 == \"default\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(_lvar_5 == \"default\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "default")] 43 7
----------------------------------
----------------------------------
--43--
TIME: 0.943096
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"default\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(_lvar_5 == \"default\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 0.943125
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"default\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(_lvar_5 == \"default\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"default\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"default\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(_lvar_5 == \"default\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"default\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(_lvar_5 == \"default\")
Gamma: 	
Preds: 

----------------------------------
--6--
TIME: 0.943290
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "default")] 43 7
----------------------------------
----------------------------------
--7--
TIME: 0.943627
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "delete")] 43 8
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!198)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
    7.0)))))))))))))))))))))))))))))))))))
(define-fun k!198 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
    0.0))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 26)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
    7.0)))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
    0.0))))))))
I could not determine the branch.
----------------------------------
--7--
TIME: 1.075532
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(_lvar_5 == \"delete\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(_lvar_5 == \"delete\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "delete")] 43 8
----------------------------------
----------------------------------
--43--
TIME: 1.075608
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"delete\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(_lvar_5 == \"delete\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 1.075690
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"delete\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(_lvar_5 == \"delete\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"delete\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"delete\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(_lvar_5 == \"delete\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"delete\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(_lvar_5 == \"delete\")
Gamma: 	
Preds: 

----------------------------------
--7--
TIME: 1.075885
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "delete")] 43 8
----------------------------------
----------------------------------
--8--
TIME: 1.075954
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "do")] 43 9
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!209)))
(define-fun k!209 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
    7.0)))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
    0.0)))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 27)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
    7.0)))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
    0.0)))))))))
I could not determine the branch.
----------------------------------
--8--
TIME: 1.192060
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(_lvar_5 == \"do\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(_lvar_5 == \"do\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "do")] 43 9
----------------------------------
----------------------------------
--43--
TIME: 1.192195
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"do\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(_lvar_5 == \"do\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 1.192268
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"do\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(_lvar_5 == \"do\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"do\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"do\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(_lvar_5 == \"do\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"do\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(_lvar_5 == \"do\")
Gamma: 	
Preds: 

----------------------------------
--8--
TIME: 1.192628
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "do")] 43 9
----------------------------------
----------------------------------
--9--
TIME: 1.192778
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "else")] 43 10
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!220)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
    7.0)))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!220 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
    0.0))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 28)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
    7.0)))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
    0.0))))))))))
I could not determine the branch.
----------------------------------
--9--
TIME: 1.332025
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(_lvar_5 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(_lvar_5 == \"else\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "else")] 43 10
----------------------------------
----------------------------------
--43--
TIME: 1.332087
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"else\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(_lvar_5 == \"else\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 1.332118
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"else\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(_lvar_5 == \"else\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"else\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"else\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(_lvar_5 == \"else\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"else\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(_lvar_5 == \"else\")
Gamma: 	
Preds: 

----------------------------------
--9--
TIME: 1.332289
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "else")] 43 10
----------------------------------
----------------------------------
--10--
TIME: 1.332369
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "finally")] 43 11
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!231)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!231 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
    0.0)))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 29)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
    0.0)))))))))))
I could not determine the branch.
----------------------------------
--10--
TIME: 1.472724
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(_lvar_5 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(_lvar_5 == \"finally\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "finally")] 43 11
----------------------------------
----------------------------------
--43--
TIME: 1.472886
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"finally\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(_lvar_5 == \"finally\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 1.472931
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"finally\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(_lvar_5 == \"finally\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"finally\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"finally\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(_lvar_5 == \"finally\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"finally\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(_lvar_5 == \"finally\")
Gamma: 	
Preds: 

----------------------------------
--10--
TIME: 1.473123
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "finally")] 43 11
----------------------------------
----------------------------------
--11--
TIME: 1.473214
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "for")] 43 12
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!242)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!242 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
    0.0))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 30)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
    0.0))))))))))))
I could not determine the branch.
----------------------------------
--11--
TIME: 1.616272
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(_lvar_5 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(_lvar_5 == \"for\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "for")] 43 12
----------------------------------
----------------------------------
--43--
TIME: 1.616346
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"for\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(_lvar_5 == \"for\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 1.616383
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"for\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(_lvar_5 == \"for\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"for\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"for\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(_lvar_5 == \"for\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"for\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(_lvar_5 == \"for\")
Gamma: 	
Preds: 

----------------------------------
--11--
TIME: 1.616588
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "for")] 43 12
----------------------------------
----------------------------------
--12--
TIME: 1.616687
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "function")] 43 13
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!253)))
(define-fun k!253 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
    0.0)))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 31)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
    0.0)))))))))))))
I could not determine the branch.
----------------------------------
--12--
TIME: 1.763360
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(_lvar_5 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(_lvar_5 == \"function\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "function")] 43 13
----------------------------------
----------------------------------
--43--
TIME: 1.763436
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"function\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(_lvar_5 == \"function\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 1.763474
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"function\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(_lvar_5 == \"function\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"function\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"function\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(_lvar_5 == \"function\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"function\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(_lvar_5 == \"function\")
Gamma: 	
Preds: 

----------------------------------
--12--
TIME: 1.763662
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "function")] 43 13
----------------------------------
----------------------------------
--13--
TIME: 1.763769
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "if")] 43 14
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!264)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!264 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
    0.0))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 32)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
    0.0))))))))))))))
I could not determine the branch.
----------------------------------
--13--
TIME: 1.920517
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(_lvar_5 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(_lvar_5 == \"if\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "if")] 43 14
----------------------------------
----------------------------------
--43--
TIME: 1.920588
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"if\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(_lvar_5 == \"if\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 1.920622
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"if\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(_lvar_5 == \"if\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"if\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"if\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(_lvar_5 == \"if\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"if\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(_lvar_5 == \"if\")
Gamma: 	
Preds: 

----------------------------------
--13--
TIME: 1.920817
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "if")] 43 14
----------------------------------
----------------------------------
--14--
TIME: 1.920920
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "in")] 43 15
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!275)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!275 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
    0.0)))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 33)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
    0.0)))))))))))))))
I could not determine the branch.
----------------------------------
--14--
TIME: 2.081404
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(_lvar_5 == \"in\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(_lvar_5 == \"in\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "in")] 43 15
----------------------------------
----------------------------------
--43--
TIME: 2.081493
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"in\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(_lvar_5 == \"in\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 2.081532
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"in\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(_lvar_5 == \"in\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"in\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"in\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(_lvar_5 == \"in\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"in\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(_lvar_5 == \"in\")
Gamma: 	
Preds: 

----------------------------------
--14--
TIME: 2.081764
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "in")] 43 15
----------------------------------
----------------------------------
--15--
TIME: 2.081879
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "instanceof")] 43 16
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!286)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!286 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
    0.0))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 34)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
    0.0))))))))))))))))
I could not determine the branch.
----------------------------------
--15--
TIME: 2.274204
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(_lvar_5 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(_lvar_5 == \"instanceof\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "instanceof")] 43 16
----------------------------------
----------------------------------
--43--
TIME: 2.274302
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"instanceof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(_lvar_5 == \"instanceof\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 2.274341
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"instanceof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(_lvar_5 == \"instanceof\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"instanceof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"instanceof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(_lvar_5 == \"instanceof\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"instanceof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(_lvar_5 == \"instanceof\")
Gamma: 	
Preds: 

----------------------------------
--15--
TIME: 2.274523
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "instanceof")] 43 16
----------------------------------
----------------------------------
--16--
TIME: 2.274646
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "new")] 43 17
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!297)))
(define-fun k!297 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
    0.0)))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 35)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
    0.0)))))))))))))))))
I could not determine the branch.
----------------------------------
--16--
TIME: 2.463651
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(_lvar_5 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(_lvar_5 == \"new\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "new")] 43 17
----------------------------------
----------------------------------
--43--
TIME: 2.463731
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"new\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(_lvar_5 == \"new\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 2.463775
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"new\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(_lvar_5 == \"new\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"new\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"new\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(_lvar_5 == \"new\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"new\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(_lvar_5 == \"new\")
Gamma: 	
Preds: 

----------------------------------
--16--
TIME: 2.463961
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "new")] 43 17
----------------------------------
----------------------------------
--17--
TIME: 2.464082
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "return")] 43 18
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!308)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!308 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
    0.0))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 37)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
    0.0))))))))))))))))))
I could not determine the branch.
----------------------------------
--17--
TIME: 2.663665
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(_lvar_5 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(_lvar_5 == \"return\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "return")] 43 18
----------------------------------
----------------------------------
--43--
TIME: 2.663746
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"return\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(_lvar_5 == \"return\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 2.663784
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"return\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(_lvar_5 == \"return\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"return\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"return\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(_lvar_5 == \"return\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"return\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(_lvar_5 == \"return\")
Gamma: 	
Preds: 

----------------------------------
--17--
TIME: 2.663971
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "return")] 43 18
----------------------------------
----------------------------------
--18--
TIME: 2.664106
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "switch")] 43 19
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!319)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!319 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
    0.0)))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 38)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
    0.0)))))))))))))))))))
I could not determine the branch.
----------------------------------
--18--
TIME: 2.898165
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(_lvar_5 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(_lvar_5 == \"switch\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "switch")] 43 19
----------------------------------
----------------------------------
--43--
TIME: 2.898295
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"switch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(_lvar_5 == \"switch\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 2.898361
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"switch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(_lvar_5 == \"switch\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"switch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"switch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(_lvar_5 == \"switch\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"switch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(_lvar_5 == \"switch\")
Gamma: 	
Preds: 

----------------------------------
--18--
TIME: 2.898618
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "switch")] 43 19
----------------------------------
----------------------------------
--19--
TIME: 2.898812
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "this")] 43 20
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!330)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!330 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
    0.0))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 39)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
    0.0))))))))))))))))))))
I could not determine the branch.
----------------------------------
--19--
TIME: 3.128888
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(_lvar_5 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(_lvar_5 == \"this\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "this")] 43 20
----------------------------------
----------------------------------
--43--
TIME: 3.129037
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"this\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(_lvar_5 == \"this\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 3.129105
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"this\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(_lvar_5 == \"this\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"this\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"this\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(_lvar_5 == \"this\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"this\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(_lvar_5 == \"this\")
Gamma: 	
Preds: 

----------------------------------
--19--
TIME: 3.129336
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "this")] 43 20
----------------------------------
----------------------------------
--20--
TIME: 3.129589
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "throw")] 43 21
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!341)))
(define-fun k!341 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
    0.0)))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 40)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
    0.0)))))))))))))))))))))
I could not determine the branch.
----------------------------------
--20--
TIME: 3.390655
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(_lvar_5 == \"throw\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(_lvar_5 == \"throw\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "throw")] 43 21
----------------------------------
----------------------------------
--43--
TIME: 3.390756
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"throw\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(_lvar_5 == \"throw\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 3.390806
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"throw\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(_lvar_5 == \"throw\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"throw\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"throw\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(_lvar_5 == \"throw\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"throw\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(_lvar_5 == \"throw\")
Gamma: 	
Preds: 

----------------------------------
--20--
TIME: 3.391021
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "throw")] 43 21
----------------------------------
----------------------------------
--21--
TIME: 3.391190
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "try")] 43 22
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!352)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!352 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
    0.0))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 41)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
    0.0))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--21--
TIME: 3.645106
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(_lvar_5 == \"try\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(_lvar_5 == \"try\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "try")] 43 22
----------------------------------
----------------------------------
--43--
TIME: 3.645205
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"try\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(_lvar_5 == \"try\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 3.645253
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"try\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(_lvar_5 == \"try\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"try\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"try\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(_lvar_5 == \"try\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"try\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(_lvar_5 == \"try\")
Gamma: 	
Preds: 

----------------------------------
--21--
TIME: 3.645462
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "try")] 43 22
----------------------------------
----------------------------------
--22--
TIME: 3.645629
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "typeof")] 43 23
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!363)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!363 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
    0.0)))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 42)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
    0.0)))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--22--
TIME: 3.891051
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(_lvar_5 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(_lvar_5 == \"typeof\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "typeof")] 43 23
----------------------------------
----------------------------------
--43--
TIME: 3.891147
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"typeof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(_lvar_5 == \"typeof\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 3.891195
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"typeof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(_lvar_5 == \"typeof\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"typeof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"typeof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(_lvar_5 == \"typeof\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"typeof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(_lvar_5 == \"typeof\")
Gamma: 	
Preds: 

----------------------------------
--22--
TIME: 3.891406
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "typeof")] 43 23
----------------------------------
----------------------------------
--23--
TIME: 3.891579
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "var")] 43 24
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!374)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!374 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
    0.0))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 44)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
    0.0))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--23--
TIME: 4.169740
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(_lvar_5 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(_lvar_5 == \"var\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "var")] 43 24
----------------------------------
----------------------------------
--43--
TIME: 4.169846
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"var\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(_lvar_5 == \"var\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 4.169890
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"var\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(_lvar_5 == \"var\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"var\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"var\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(_lvar_5 == \"var\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"var\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(_lvar_5 == \"var\")
Gamma: 	
Preds: 

----------------------------------
--23--
TIME: 4.170111
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "var")] 43 24
----------------------------------
----------------------------------
--24--
TIME: 4.170366
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "void")] 43 25
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!385)))
(define-fun k!385 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
    0.0)))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 46)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
    0.0)))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--24--
TIME: 4.445352
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(_lvar_5 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(_lvar_5 == \"void\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "void")] 43 25
----------------------------------
----------------------------------
--43--
TIME: 4.445457
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"void\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(_lvar_5 == \"void\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 4.445502
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"void\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(_lvar_5 == \"void\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"void\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"void\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(_lvar_5 == \"void\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"void\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(_lvar_5 == \"void\")
Gamma: 	
Preds: 

----------------------------------
--24--
TIME: 4.445726
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "void")] 43 25
----------------------------------
----------------------------------
--25--
TIME: 4.445913
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "while")] 43 26
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!396)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!396 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
    0.0))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 47)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
    0.0))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--25--
TIME: 4.754233
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(_lvar_5 == \"while\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(_lvar_5 == \"while\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "while")] 43 26
----------------------------------
----------------------------------
--43--
TIME: 4.754389
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"while\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(_lvar_5 == \"while\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 4.754467
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"while\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(_lvar_5 == \"while\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"while\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"while\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(_lvar_5 == \"while\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"while\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(_lvar_5 == \"while\")
Gamma: 	
Preds: 

----------------------------------
--25--
TIME: 4.754791
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "while")] 43 26
----------------------------------
----------------------------------
--26--
TIME: 4.755018
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "with")] 43 27
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!407)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!407 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
    0.0)))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 48)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
    0.0)))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--26--
TIME: 5.045816
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(_lvar_5 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(_lvar_5 == \"with\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "with")] 43 27
----------------------------------
----------------------------------
--43--
TIME: 5.045941
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"with\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(_lvar_5 == \"with\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 5.046006
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"with\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(_lvar_5 == \"with\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"with\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"with\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(_lvar_5 == \"with\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"with\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(_lvar_5 == \"with\")
Gamma: 	
Preds: 

----------------------------------
--26--
TIME: 5.046271
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "with")] 43 27
----------------------------------
----------------------------------
--27--
TIME: 5.047629
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "class")] 43 28
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!418)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!418 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
    0.0))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 49)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
    0.0))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--27--
TIME: 5.345499
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(_lvar_5 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(_lvar_5 == \"class\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "class")] 43 28
----------------------------------
----------------------------------
--43--
TIME: 5.345631
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"class\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(_lvar_5 == \"class\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 5.345686
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"class\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(_lvar_5 == \"class\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"class\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"class\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(_lvar_5 == \"class\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"class\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(_lvar_5 == \"class\")
Gamma: 	
Preds: 

----------------------------------
--27--
TIME: 5.345940
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "class")] 43 28
----------------------------------
----------------------------------
--28--
TIME: 5.346187
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "const")] 43 29
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!429)))
(define-fun k!429 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
    0.0)))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 50)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
    0.0)))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--28--
TIME: 5.658095
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(_lvar_5 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(_lvar_5 == \"const\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "const")] 43 29
----------------------------------
----------------------------------
--43--
TIME: 5.658252
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"const\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(_lvar_5 == \"const\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 5.658326
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"const\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(_lvar_5 == \"const\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"const\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"const\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(_lvar_5 == \"const\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"const\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(_lvar_5 == \"const\")
Gamma: 	
Preds: 

----------------------------------
--28--
TIME: 5.658629
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "const")] 43 29
----------------------------------
----------------------------------
--29--
TIME: 5.658907
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "enum")] 43 30
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!440)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!440 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
    0.0))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 51)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
    0.0))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--29--
TIME: 5.989565
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(_lvar_5 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(_lvar_5 == \"enum\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "enum")] 43 30
----------------------------------
----------------------------------
--43--
TIME: 5.989805
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"enum\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(_lvar_5 == \"enum\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 5.989925
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"enum\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(_lvar_5 == \"enum\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"enum\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"enum\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(_lvar_5 == \"enum\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"enum\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(_lvar_5 == \"enum\")
Gamma: 	
Preds: 

----------------------------------
--29--
TIME: 5.990405
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "enum")] 43 30
----------------------------------
----------------------------------
--30--
TIME: 5.990659
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "export")] 43 31
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!451)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!451 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
    0.0)))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 53)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
    0.0)))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--30--
TIME: 6.340653
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(_lvar_5 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(_lvar_5 == \"export\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "export")] 43 31
----------------------------------
----------------------------------
--43--
TIME: 6.340779
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"export\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(_lvar_5 == \"export\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 6.340831
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"export\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(_lvar_5 == \"export\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"export\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"export\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(_lvar_5 == \"export\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"export\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(_lvar_5 == \"export\")
Gamma: 	
Preds: 

----------------------------------
--30--
TIME: 6.341082
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "export")] 43 31
----------------------------------
----------------------------------
--31--
TIME: 6.341328
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "extends")] 43 32
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!462)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!462 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
    0.0))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 55)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
    0.0))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--31--
TIME: 6.684410
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(_lvar_5 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(_lvar_5 == \"extends\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "extends")] 43 32
----------------------------------
----------------------------------
--43--
TIME: 6.684540
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"extends\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(_lvar_5 == \"extends\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 6.684597
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"extends\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(_lvar_5 == \"extends\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"extends\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"extends\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(_lvar_5 == \"extends\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"extends\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(_lvar_5 == \"extends\")
Gamma: 	
Preds: 

----------------------------------
--31--
TIME: 6.684850
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "extends")] 43 32
----------------------------------
----------------------------------
--32--
TIME: 6.686115
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "import")] 43 33
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!473)))
(define-fun k!473 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
    0.0)))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 56)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
    0.0)))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--32--
TIME: 7.047902
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(_lvar_5 == \"import\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(_lvar_5 == \"import\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "import")] 43 33
----------------------------------
----------------------------------
--43--
TIME: 7.048041
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"import\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(_lvar_5 == \"import\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 7.048106
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"import\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(_lvar_5 == \"import\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"import\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"import\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(_lvar_5 == \"import\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"import\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(_lvar_5 == \"import\")
Gamma: 	
Preds: 

----------------------------------
--32--
TIME: 7.048367
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "import")] 43 33
----------------------------------
----------------------------------
--33--
TIME: 7.049710
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "super")] 43 34
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!484)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!484 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
    0.0))))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 57)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
    0.0))))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--33--
TIME: 7.475902
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(_lvar_5 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(_lvar_5 == \"super\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "super")] 43 34
----------------------------------
----------------------------------
--43--
TIME: 7.476045
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"super\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(_lvar_5 == \"super\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 7.476105
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"super\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(_lvar_5 == \"super\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"super\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"super\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(_lvar_5 == \"super\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"super\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(_lvar_5 == \"super\")
Gamma: 	
Preds: 

----------------------------------
--33--
TIME: 7.476368
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "super")] 43 34
----------------------------------
----------------------------------
--34--
TIME: 7.476649
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "implements")] 43 35
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!495)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!495 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
    0.0)))))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 58)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
    0.0)))))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--34--
TIME: 7.857884
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(_lvar_5 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(_lvar_5 == \"implements\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "implements")] 43 35
----------------------------------
----------------------------------
--43--
TIME: 7.858056
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"implements\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(_lvar_5 == \"implements\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 7.858119
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"implements\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(_lvar_5 == \"implements\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"implements\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"implements\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(_lvar_5 == \"implements\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"implements\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(_lvar_5 == \"implements\")
Gamma: 	
Preds: 

----------------------------------
--34--
TIME: 7.858425
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "implements")] 43 35
----------------------------------
----------------------------------
--35--
TIME: 7.858758
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "interface")] 43 36
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!506)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!506 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
    0.0))))))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 59)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
    0.0))))))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--35--
TIME: 8.274008
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(_lvar_5 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(_lvar_5 == \"interface\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "interface")] 43 36
----------------------------------
----------------------------------
--43--
TIME: 8.274159
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"interface\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(_lvar_5 == \"interface\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 8.274216
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"interface\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(_lvar_5 == \"interface\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"interface\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"interface\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(_lvar_5 == \"interface\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"interface\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(_lvar_5 == \"interface\")
Gamma: 	
Preds: 

----------------------------------
--35--
TIME: 8.274495
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "interface")] 43 36
----------------------------------
----------------------------------
--36--
TIME: 8.274803
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "let")] 43 37
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!517)))
(define-fun k!517 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
    0.0)))))))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 60)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
    0.0)))))))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--36--
TIME: 8.699714
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(_lvar_5 == \"let\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(_lvar_5 == \"let\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "let")] 43 37
----------------------------------
----------------------------------
--43--
TIME: 8.699910
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"let\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(_lvar_5 == \"let\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 8.699996
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"let\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(_lvar_5 == \"let\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"let\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"let\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(_lvar_5 == \"let\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"let\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(_lvar_5 == \"let\")
Gamma: 	
Preds: 

----------------------------------
--36--
TIME: 8.700351
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "let")] 43 37
----------------------------------
----------------------------------
--37--
TIME: 8.700723
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "package")] 43 38
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!528)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!528 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
    0.0))))))))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 61)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
    0.0))))))))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--37--
TIME: 9.145704
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(_lvar_5 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(_lvar_5 == \"package\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "package")] 43 38
----------------------------------
----------------------------------
--43--
TIME: 9.145863
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"package\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(_lvar_5 == \"package\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 9.145926
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"package\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(_lvar_5 == \"package\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"package\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"package\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(_lvar_5 == \"package\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"package\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(_lvar_5 == \"package\")
Gamma: 	
Preds: 

----------------------------------
--37--
TIME: 9.146214
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "package")] 43 38
----------------------------------
----------------------------------
--38--
TIME: 9.146546
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "private")] 43 39
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!539)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 62.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 62.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 62.0) (= x!1 3.0)) 45.0
  (ite (and (= x!0 62.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 62.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 62.0) (= x!1 0.0)) 43.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!539 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
  (ite (= x!0 62.0) 7.0
    0.0)))))))))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 62)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 62.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 62.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 62.0) (= x!1 3.0)) 45.0
  (ite (and (= x!0 62.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 62.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 62.0) (= x!1 0.0)) 43.0
    7.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
  (ite (= x!0 62.0) 7.0
    0.0)))))))))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--38--
TIME: 9.579741
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(_lvar_5 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(_lvar_5 == \"private\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "private")] 43 39
----------------------------------
----------------------------------
--43--
TIME: 9.579902
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"private\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(_lvar_5 == \"private\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 9.579963
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"private\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(_lvar_5 == \"private\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"private\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"private\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(_lvar_5 == \"private\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"private\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(_lvar_5 == \"private\")
Gamma: 	
Preds: 

----------------------------------
--38--
TIME: 9.580265
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "private")] 43 39
----------------------------------
----------------------------------
--39--
TIME: 9.580612
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "protected")] 43 40
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!550)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 62.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 62.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 62.0) (= x!1 3.0)) 45.0
  (ite (and (= x!0 62.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 62.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 62.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 63.0) (= x!1 8.0)) 22.0
  (ite (and (= x!0 63.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 63.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 2.0)) 19.0
  (ite (and (= x!0 63.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 63.0) (= x!1 0.0)) 43.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!550 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
  (ite (= x!0 62.0) 7.0
  (ite (= x!0 63.0) 9.0
    0.0))))))))))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 63)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 62.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 62.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 62.0) (= x!1 3.0)) 45.0
  (ite (and (= x!0 62.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 62.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 62.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 63.0) (= x!1 8.0)) 22.0
  (ite (and (= x!0 63.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 63.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 2.0)) 19.0
  (ite (and (= x!0 63.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 63.0) (= x!1 0.0)) 43.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
  (ite (= x!0 62.0) 7.0
  (ite (= x!0 63.0) 9.0
    0.0))))))))))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--39--
TIME: 10.056830
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(_lvar_5 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(_lvar_5 == \"protected\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "protected")] 43 40
----------------------------------
----------------------------------
--43--
TIME: 10.057000
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"protected\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(_lvar_5 == \"protected\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 10.057063
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"protected\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(_lvar_5 == \"protected\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"protected\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"protected\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(_lvar_5 == \"protected\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"protected\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(_lvar_5 == \"protected\")
Gamma: 	
Preds: 

----------------------------------
--39--
TIME: 10.057409
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "protected")] 43 40
----------------------------------
----------------------------------
--40--
TIME: 10.057769
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "public")] 43 41
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!561)))
(define-fun k!561 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 62.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 62.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 62.0) (= x!1 3.0)) 45.0
  (ite (and (= x!0 62.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 62.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 62.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 63.0) (= x!1 8.0)) 22.0
  (ite (and (= x!0 63.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 63.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 2.0)) 19.0
  (ite (and (= x!0 63.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 63.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 64.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 64.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 64.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 64.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 64.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 64.0) (= x!1 0.0)) 43.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
  (ite (= x!0 62.0) 7.0
  (ite (= x!0 63.0) 9.0
  (ite (= x!0 64.0) 6.0
    0.0)))))))))))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 64)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 62.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 62.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 62.0) (= x!1 3.0)) 45.0
  (ite (and (= x!0 62.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 62.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 62.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 63.0) (= x!1 8.0)) 22.0
  (ite (and (= x!0 63.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 63.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 2.0)) 19.0
  (ite (and (= x!0 63.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 63.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 64.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 64.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 64.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 64.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 64.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 64.0) (= x!1 0.0)) 43.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
  (ite (= x!0 62.0) 7.0
  (ite (= x!0 63.0) 9.0
  (ite (= x!0 64.0) 6.0
    0.0)))))))))))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--40--
TIME: 10.561670
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(_lvar_5 == \"public\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(_lvar_5 == \"public\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "public")] 43 41
----------------------------------
----------------------------------
--43--
TIME: 10.561848
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"public\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(_lvar_5 == \"public\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 10.561911
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"public\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(_lvar_5 == \"public\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"public\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"public\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(_lvar_5 == \"public\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"public\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(_lvar_5 == \"public\")
Gamma: 	
Preds: 

----------------------------------
--40--
TIME: 10.563650
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "public")] 43 41
----------------------------------
----------------------------------
--41--
TIME: 10.564056
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "static")] 43 42
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!572)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 62.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 62.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 62.0) (= x!1 3.0)) 45.0
  (ite (and (= x!0 62.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 62.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 62.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 63.0) (= x!1 8.0)) 22.0
  (ite (and (= x!0 63.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 63.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 2.0)) 19.0
  (ite (and (= x!0 63.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 63.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 64.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 64.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 64.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 64.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 64.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 64.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 65.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 65.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 65.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 65.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 65.0) (= x!1 1.0)) 14.0
  (ite (and (= x!0 65.0) (= x!1 0.0)) 10.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!572 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
  (ite (= x!0 62.0) 7.0
  (ite (= x!0 63.0) 9.0
  (ite (= x!0 64.0) 6.0
  (ite (= x!0 65.0) 6.0
    0.0))))))))))))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 65)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 62.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 62.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 62.0) (= x!1 3.0)) 45.0
  (ite (and (= x!0 62.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 62.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 62.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 63.0) (= x!1 8.0)) 22.0
  (ite (and (= x!0 63.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 63.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 2.0)) 19.0
  (ite (and (= x!0 63.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 63.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 64.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 64.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 64.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 64.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 64.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 64.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 65.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 65.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 65.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 65.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 65.0) (= x!1 1.0)) 14.0
  (ite (and (= x!0 65.0) (= x!1 0.0)) 10.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
  (ite (= x!0 62.0) 7.0
  (ite (= x!0 63.0) 9.0
  (ite (= x!0 64.0) 6.0
  (ite (= x!0 65.0) 6.0
    0.0))))))))))))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--41--
TIME: 11.093901
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(_lvar_5 == \"static\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(_lvar_5 == \"static\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "static")] 43 42
----------------------------------
----------------------------------
--43--
TIME: 11.094084
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"static\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(_lvar_5 == \"static\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.094159
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"static\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(_lvar_5 == \"static\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"static\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"static\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(_lvar_5 == \"static\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"static\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(_lvar_5 == \"static\")
Gamma: 	
Preds: 

----------------------------------
--41--
TIME: 11.094505
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "static")] 43 42
----------------------------------
----------------------------------
--42--
TIME: 11.094903
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "yield")] 43 44
----------------------------------
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Set (_ as-array k!583)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 62.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 62.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 62.0) (= x!1 3.0)) 45.0
  (ite (and (= x!0 62.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 62.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 62.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 63.0) (= x!1 8.0)) 22.0
  (ite (and (= x!0 63.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 63.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 2.0)) 19.0
  (ite (and (= x!0 63.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 63.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 64.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 64.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 64.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 64.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 64.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 64.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 65.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 65.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 65.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 65.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 65.0) (= x!1 1.0)) 14.0
  (ite (and (= x!0 65.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 66.0) (= x!1 4.0)) 22.0
  (ite (and (= x!0 66.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 66.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 66.0) (= x!1 0.0)) 1.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun k!583 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
  (ite (= x!0 62.0) 7.0
  (ite (= x!0 63.0) 9.0
  (ite (= x!0 64.0) 6.0
  (ite (= x!0 65.0) 6.0
  (ite (= x!0 66.0) 5.0
    0.0)))))))))))))))))))))))))))))))))))))))))))
I found the model: 

(define-fun _lvar_5 () Extended_JSIL_Literal
  (Elem (String 66)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 6.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 5.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 8.0
  (ite (and (= x!0 9.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 4.0)) 13.0
  (ite (and (= x!0 12.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 12.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 12.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 12.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 15.0) (= x!1 6.0)) 16.0
  (ite (and (= x!0 15.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 15.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 15.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 15.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 15.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 20.0) (= x!1 7.0)) 3.0
  (ite (and (= x!0 20.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 4.0)) 21.0
  (ite (and (= x!0 20.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 20.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 20.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 23.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 23.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 23.0) (= x!1 4.0)) 16.0
  (ite (and (= x!0 23.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 23.0) (= x!1 2.0)) 25.0
  (ite (and (= x!0 23.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 26.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 26.0) (= x!1 2.0)) 24.0
  (ite (and (= x!0 26.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 27.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 27.0) (= x!1 0.0)) 22.0
  (ite (and (= x!0 28.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 28.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 6.0)) 1.0
  (ite (and (= x!0 29.0) (= x!1 5.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 29.0) (= x!1 3.0)) 2.0
  (ite (and (= x!0 29.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 29.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 29.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 30.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 30.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 30.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 31.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 6.0)) 19.0
  (ite (and (= x!0 31.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 31.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 31.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 31.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 31.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 31.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 1.0)) 25.0
  (ite (and (= x!0 32.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 33.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 33.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 34.0) (= x!1 9.0)) 25.0
  (ite (and (= x!0 34.0) (= x!1 8.0)) 19.0
  (ite (and (= x!0 34.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 34.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 34.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 34.0) (= x!1 2.0)) 10.0
  (ite (and (= x!0 34.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 34.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 35.0) (= x!1 2.0)) 36.0
  (ite (and (= x!0 35.0) (= x!1 0.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 5.0)) 17.0
  (ite (and (= x!0 37.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 37.0) (= x!1 3.0)) 16.0
  (ite (and (= x!0 37.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 37.0) (= x!1 0.0)) 3.0
  (ite (and (= x!0 38.0) (= x!1 5.0)) 13.0
  (ite (and (= x!0 38.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 38.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 38.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 38.0) (= x!1 1.0)) 36.0
  (ite (and (= x!0 38.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 39.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 39.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 39.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 40.0) (= x!1 4.0)) 36.0
  (ite (and (= x!0 40.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 40.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 40.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 40.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 41.0) (= x!1 2.0)) 1.0
  (ite (and (= x!0 41.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 41.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 42.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 42.0) (= x!1 4.0)) 19.0
  (ite (and (= x!0 42.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 42.0) (= x!1 1.0)) 1.0
  (ite (and (= x!0 42.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 44.0) (= x!1 2.0)) 3.0
  (ite (and (= x!0 44.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 44.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 46.0) (= x!1 3.0)) 22.0
  (ite (and (= x!0 46.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 46.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 46.0) (= x!1 0.0)) 45.0
  (ite (and (= x!0 47.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 47.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 47.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 47.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 48.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 48.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 48.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 48.0) (= x!1 0.0)) 36.0
  (ite (and (= x!0 49.0) (= x!1 4.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 49.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 49.0) (= x!1 1.0)) 24.0
  (ite (and (= x!0 49.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 50.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 50.0) (= x!1 3.0)) 10.0
  (ite (and (= x!0 50.0) (= x!1 2.0)) 17.0
  (ite (and (= x!0 50.0) (= x!1 1.0)) 19.0
  (ite (and (= x!0 50.0) (= x!1 0.0)) 11.0
  (ite (and (= x!0 51.0) (= x!1 3.0)) 52.0
  (ite (and (= x!0 51.0) (= x!1 2.0)) 16.0
  (ite (and (= x!0 51.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 53.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 53.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 53.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 53.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 53.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 55.0) (= x!1 6.0)) 10.0
  (ite (and (= x!0 55.0) (= x!1 5.0)) 22.0
  (ite (and (= x!0 55.0) (= x!1 4.0)) 17.0
  (ite (and (= x!0 55.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 55.0) (= x!1 1.0)) 54.0
  (ite (and (= x!0 56.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 56.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 56.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 56.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 56.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 56.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 57.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 57.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 57.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 57.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 9.0)) 10.0
  (ite (and (= x!0 58.0) (= x!1 8.0)) 14.0
  (ite (and (= x!0 58.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 58.0) (= x!1 5.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 58.0) (= x!1 2.0)) 43.0
  (ite (and (= x!0 58.0) (= x!1 1.0)) 52.0
  (ite (and (= x!0 58.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 59.0) (= x!1 7.0)) 11.0
  (ite (and (= x!0 59.0) (= x!1 6.0)) 2.0
  (ite (and (= x!0 59.0) (= x!1 5.0)) 25.0
  (ite (and (= x!0 59.0) (= x!1 4.0)) 3.0
  (ite (and (= x!0 59.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 59.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 59.0) (= x!1 0.0)) 18.0
  (ite (and (= x!0 60.0) (= x!1 2.0)) 14.0
  (ite (and (= x!0 60.0) (= x!1 0.0)) 24.0
  (ite (and (= x!0 61.0) (= x!1 5.0)) 21.0
  (ite (and (= x!0 61.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 3.0)) 6.0
  (ite (and (= x!0 61.0) (= x!1 2.0)) 11.0
  (ite (and (= x!0 61.0) (= x!1 1.0)) 2.0
  (ite (and (= x!0 61.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 62.0) (= x!1 5.0)) 14.0
  (ite (and (= x!0 62.0) (= x!1 4.0)) 2.0
  (ite (and (= x!0 62.0) (= x!1 3.0)) 45.0
  (ite (and (= x!0 62.0) (= x!1 2.0)) 18.0
  (ite (and (= x!0 62.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 62.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 63.0) (= x!1 8.0)) 22.0
  (ite (and (= x!0 63.0) (= x!1 6.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 63.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 63.0) (= x!1 2.0)) 19.0
  (ite (and (= x!0 63.0) (= x!1 1.0)) 3.0
  (ite (and (= x!0 63.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 64.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 64.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 64.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 64.0) (= x!1 2.0)) 8.0
  (ite (and (= x!0 64.0) (= x!1 1.0)) 16.0
  (ite (and (= x!0 64.0) (= x!1 0.0)) 43.0
  (ite (and (= x!0 65.0) (= x!1 5.0)) 11.0
  (ite (and (= x!0 65.0) (= x!1 4.0)) 18.0
  (ite (and (= x!0 65.0) (= x!1 3.0)) 14.0
  (ite (and (= x!0 65.0) (= x!1 2.0)) 2.0
  (ite (and (= x!0 65.0) (= x!1 1.0)) 14.0
  (ite (and (= x!0 65.0) (= x!1 0.0)) 10.0
  (ite (and (= x!0 66.0) (= x!1 4.0)) 22.0
  (ite (and (= x!0 66.0) (= x!1 3.0)) 24.0
  (ite (and (= x!0 66.0) (= x!1 1.0)) 18.0
  (ite (and (= x!0 66.0) (= x!1 0.0)) 1.0
    7.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 9.0) 4.0
  (ite (= x!0 12.0) 5.0
  (ite (= x!0 15.0) 8.0
  (ite (= x!0 20.0) 8.0
  (ite (= x!0 23.0) 7.0
  (ite (= x!0 26.0) 6.0
  (ite (= x!0 27.0) 2.0
  (ite (= x!0 28.0) 4.0
  (ite (= x!0 29.0) 7.0
  (ite (= x!0 30.0) 3.0
  (ite (= x!0 31.0) 8.0
  (ite (= x!0 32.0) 2.0
  (ite (= x!0 33.0) 2.0
  (ite (= x!0 34.0) 10.0
  (ite (= x!0 35.0) 3.0
  (ite (= x!0 37.0) 6.0
  (ite (= x!0 38.0) 6.0
  (ite (= x!0 39.0) 4.0
  (ite (= x!0 40.0) 5.0
  (ite (= x!0 41.0) 3.0
  (ite (= x!0 42.0) 6.0
  (ite (= x!0 44.0) 3.0
  (ite (= x!0 46.0) 4.0
  (ite (= x!0 47.0) 5.0
  (ite (= x!0 48.0) 4.0
  (ite (= x!0 49.0) 5.0
  (ite (= x!0 50.0) 5.0
  (ite (= x!0 51.0) 4.0
  (ite (= x!0 53.0) 6.0
  (ite (= x!0 55.0) 7.0
  (ite (= x!0 56.0) 6.0
  (ite (= x!0 57.0) 5.0
  (ite (= x!0 58.0) 10.0
  (ite (= x!0 59.0) 9.0
  (ite (= x!0 60.0) 3.0
  (ite (= x!0 61.0) 7.0
  (ite (= x!0 62.0) 7.0
  (ite (= x!0 63.0) 9.0
  (ite (= x!0 64.0) 6.0
  (ite (= x!0 65.0) 6.0
  (ite (= x!0 66.0) 5.0
    0.0)))))))))))))))))))))))))))))))))))))))))))
I could not determine the branch.
----------------------------------
--42--
TIME: 11.634199
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(_lvar_5 == \"yield\")
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(_lvar_5 == \"yield\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "yield")] 43 44
----------------------------------
----------------------------------
--43--
TIME: 11.634396
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"yield\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(_lvar_5 == \"yield\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.634464
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"yield\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(_lvar_5 == \"yield\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"yield\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"yield\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(_lvar_5 == \"yield\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"yield\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(_lvar_5 == \"yield\")
Gamma: 	
Preds: 

----------------------------------
--42--
TIME: 11.634789
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(! (_lvar_5 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(! (_lvar_5 == \"yield\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "yield")] 43 44
----------------------------------
----------------------------------
--44--
TIME: 11.635186
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(! (_lvar_5 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(! (_lvar_5 == \"yield\"))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(! (_lvar_5 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(! (_lvar_5 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(! (_lvar_5 == \"yield\"))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(! (_lvar_5 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_5)
Pure Formulae: 	
	(! (_lvar_5 == \"break\"))
	(! (_lvar_5 == \"case\"))
	(! (_lvar_5 == \"catch\"))
	(! (_lvar_5 == \"continue\"))
	(! (_lvar_5 == \"debugger\"))
	(! (_lvar_5 == \"default\"))
	(! (_lvar_5 == \"delete\"))
	(! (_lvar_5 == \"do\"))
	(! (_lvar_5 == \"else\"))
	(! (_lvar_5 == \"finally\"))
	(! (_lvar_5 == \"for\"))
	(! (_lvar_5 == \"function\"))
	(! (_lvar_5 == \"if\"))
	(! (_lvar_5 == \"in\"))
	(! (_lvar_5 == \"instanceof\"))
	(! (_lvar_5 == \"new\"))
	(! (_lvar_5 == \"return\"))
	(! (_lvar_5 == \"switch\"))
	(! (_lvar_5 == \"this\"))
	(! (_lvar_5 == \"throw\"))
	(! (_lvar_5 == \"try\"))
	(! (_lvar_5 == \"typeof\"))
	(! (_lvar_5 == \"var\"))
	(! (_lvar_5 == \"void\"))
	(! (_lvar_5 == \"while\"))
	(! (_lvar_5 == \"with\"))
	(! (_lvar_5 == \"class\"))
	(! (_lvar_5 == \"const\"))
	(! (_lvar_5 == \"enum\"))
	(! (_lvar_5 == \"export\"))
	(! (_lvar_5 == \"extends\"))
	(! (_lvar_5 == \"import\"))
	(! (_lvar_5 == \"super\"))
	(! (_lvar_5 == \"implements\"))
	(! (_lvar_5 == \"interface\"))
	(! (_lvar_5 == \"let\"))
	(! (_lvar_5 == \"package\"))
	(! (_lvar_5 == \"private\"))
	(! (_lvar_5 == \"protected\"))
	(! (_lvar_5 == \"public\"))
	(! (_lvar_5 == \"static\"))
	(! (_lvar_5 == \"yield\"))
Gamma: 	
Preds: 

Spec Var: #s_17
Spec Var: #s_18
Spec Var: #s_19
Spec Var: #s_20
Spec Var: #s_21
Spec Var: #s_22
Spec Var: #s_23
Spec Var: #s_24
Spec Var: #s_25
Spec Var: #s_26
Spec Var: #s_27
Spec Var: #s_28
Spec Var: #s_29
Spec Var: #s_30
Spec Var: #s_31
Spec Var: #s_32
Spec Var: #s_33
Spec Var: #s_34
Spec Var: #s_35
Spec Var: #s_36
Spec Var: #s_37
Spec Var: #s_38
Spec Var: #s_39
Spec Var: #s_40
Spec Var: #s_41
Spec Var: #s_42
Spec Var: #s_43
Spec Var: #s_44
Spec Var: #s_45
Spec Var: #s_46
Spec Var: #s_47
Spec Var: #s_48
Spec Var: #s_49
Spec Var: #s_50
Spec Var: #s_51
Spec Var: #s_52
Spec Var: #s_53
Spec Var: #s_54
Spec Var: #s_55
Spec Var: #s_56
Spec Var: #s_57
Spec Var: #s_58
Spec Var: #s_59
Spec Var: #s_59

********** Finished bi-abduction symbolic execution. **********


**********    Starting normal symbolic execution.    **********

----------------------------------
----------------------------------
Symbolic execution of Array_isArray
----------------------------------
--0--
TIME: 11.672152
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(array: #s_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(#s_1 == \"Array\")
	(#s_0 == _$l_0)
Gamma: 	
	(#s_1: $$string_type)
	(#s_0: $$object_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.672251
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(array: #s_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(#s_1 == \"Array\")
	(#s_0 == _$l_0)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$string_type)
	(#s_0: $$object_type)
Preds: 
CMD: goto [(typeOf(array) = $$object_type)] 2 5
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 11.672434
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(array: #s_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(#s_1 == \"Array\")
	(#s_0 == _$l_0)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$string_type)
	(#s_0: $$object_type)
Preds: 
CMD: class := [array, "@class"]
----------------------------------
----------------------------------
--3--
TIME: 11.672591
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: \"Array\")
	(array: #s_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(#s_1 == \"Array\")
	(#s_0 == _$l_0)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$string_type)
	(class: $$string_type)
	(#s_0: $$object_type)
Preds: 
CMD: goto [(class = "Array")] 4 5
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 11.673623
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: \"Array\")
	(array: #s_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(#s_1 == \"Array\")
	(#s_0 == _$l_0)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$string_type)
	(class: $$string_type)
	(#s_0: $$object_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--5--
TIME: 11.673714
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(class: \"Array\")
	(array: #s_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(#s_1 == \"Array\")
	(#s_0 == _$l_0)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$string_type)
	(class: $$string_type)
	(#s_0: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc Array_isArray
----------------------------------
----------------------------------
Symbolic execution of Array_isArray
----------------------------------
--0--
TIME: 11.674004
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": #s_3), (default: $$unknown)]
Store: 	
	(array: #s_2)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (#s_3 == None))
	(! (#s_3 == \"Array\"))
	(#s_2 == _$l_0)
Gamma: 	
	(#s_2: $$object_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.674086
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": #s_3), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(array: #s_2)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (#s_3 == None))
	(! (#s_3 == \"Array\"))
	(#s_2 == _$l_0)
Gamma: 	
	(xret: $$boolean_type)
	(#s_2: $$object_type)
Preds: 
CMD: goto [(typeOf(array) = $$object_type)] 2 5
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 11.688281
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": #s_3), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(array: #s_2)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (#s_3 == None))
	(! (#s_3 == \"Array\"))
	(#s_2 == _$l_0)
Gamma: 	
	(xret: $$boolean_type)
	(#s_2: $$object_type)
Preds: 
CMD: class := [array, "@class"]
----------------------------------
----------------------------------
--3--
TIME: 11.688375
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": #s_3), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: #s_3)
	(array: #s_2)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (#s_3 == None))
	(! (#s_3 == \"Array\"))
	(#s_2 == _$l_0)
Gamma: 	
	(xret: $$boolean_type)
	(#s_2: $$object_type)
Preds: 
CMD: goto [(class = "Array")] 4 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.688526
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": #s_3), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: #s_3)
	(array: #s_2)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (#s_3 == None))
	(! (#s_3 == \"Array\"))
	(#s_2 == _$l_0)
Gamma: 	
	(xret: $$boolean_type)
	(#s_2: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc Array_isArray
----------------------------------
----------------------------------
Symbolic execution of Array_isArray
----------------------------------
--0--
TIME: 11.690072
STATE:
Heap: 
	
Store: 	
	(array: #s_4)
Pure Formulae: 	
	(! (typeOf(#s_4) == $$object_type))
Gamma: 	
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.690130
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(array: #s_4)
Pure Formulae: 	
	(! (typeOf(#s_4) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(typeOf(array) = $$object_type)] 2 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.705056
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(array: #s_4)
Pure Formulae: 	
	(! (typeOf(#s_4) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc Array_isArray
----------------------------------
----------------------------------
Symbolic execution of i__typeOf
----------------------------------
--0--
TIME: 11.705289
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
	(#s_5 == $$undefined)
Gamma: 	
	(#s_5: $$undefined_type)
	(v: $$undefined_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 11.705393
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
	(#s_5 == $$undefined)
Gamma: 	
	(#s_5: $$undefined_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := "undefined"
----------------------------------
----------------------------------
--2--
TIME: 11.705469
STATE:
Heap: 
	
Store: 	
	(xret: \"undefined\")
	(v: $$undefined)
Pure Formulae: 	
	(#s_5 == $$undefined)
Gamma: 	
	(xret: $$string_type)
	(#s_5: $$undefined_type)
	(v: $$undefined_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 11.705544
STATE:
Heap: 
	
Store: 	
	(xret: \"undefined\")
	(v: $$undefined)
Pure Formulae: 	
	(#s_5 == $$undefined)
Gamma: 	
	(xret: $$string_type)
	(#s_5: $$undefined_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__typeOf
----------------------------------
----------------------------------
Symbolic execution of i__typeOf
----------------------------------
--0--
TIME: 11.705780
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
	(#s_6 == $$null)
Gamma: 	
	(v: $$null_type)
	(#s_6: $$null_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.705902
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
	(#s_6 == $$null)
Gamma: 	
	(v: $$null_type)
	(#s_6: $$null_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 11.706003
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
	(#s_6 == $$null)
Gamma: 	
	(v: $$null_type)
	(#s_6: $$null_type)
Preds: 
CMD: xret := "object"
----------------------------------
----------------------------------
--5--
TIME: 11.706077
STATE:
Heap: 
	
Store: 	
	(xret: \"object\")
	(v: $$null)
Pure Formulae: 	
	(#s_6 == $$null)
Gamma: 	
	(xret: $$string_type)
	(v: $$null_type)
	(#s_6: $$null_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 11.706150
STATE:
Heap: 
	
Store: 	
	(xret: \"object\")
	(v: $$null)
Pure Formulae: 	
	(#s_6 == $$null)
Gamma: 	
	(xret: $$string_type)
	(v: $$null_type)
	(#s_6: $$null_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__typeOf
----------------------------------
----------------------------------
Symbolic execution of i__typeOf
----------------------------------
--0--
TIME: 11.706374
STATE:
Heap: 
	
Store: 	
	(v: #s_7)
Pure Formulae: 	
	(! (#s_7 == $$undefined))
	(! (#s_7 == $$null))
	(typeOf(#s_7) == $$boolean_type)
Gamma: 	
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.719608
STATE:
Heap: 
	
Store: 	
	(v: #s_7)
Pure Formulae: 	
	(! (#s_7 == $$undefined))
	(! (#s_7 == $$null))
	(typeOf(#s_7) == $$boolean_type)
Gamma: 	
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.719733
STATE:
Heap: 
	
Store: 	
	(v: #s_7)
Pure Formulae: 	
	(! (#s_7 == $$undefined))
	(! (#s_7 == $$null))
	(typeOf(#s_7) == $$boolean_type)
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 11.719819
STATE:
Heap: 
	
Store: 	
	(v: #s_7)
Pure Formulae: 	
	(! (#s_7 == $$undefined))
	(! (#s_7 == $$null))
	(typeOf(#s_7) == $$boolean_type)
Gamma: 	
Preds: 
CMD: xret := "boolean"
----------------------------------
----------------------------------
--8--
TIME: 11.719878
STATE:
Heap: 
	
Store: 	
	(xret: \"boolean\")
	(v: #s_7)
Pure Formulae: 	
	(! (#s_7 == $$undefined))
	(! (#s_7 == $$null))
	(typeOf(#s_7) == $$boolean_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 11.719932
STATE:
Heap: 
	
Store: 	
	(xret: \"boolean\")
	(v: #s_7)
Pure Formulae: 	
	(! (#s_7 == $$undefined))
	(! (#s_7 == $$null))
	(typeOf(#s_7) == $$boolean_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__typeOf
----------------------------------
----------------------------------
Symbolic execution of i__typeOf
----------------------------------
--0--
TIME: 11.720219
STATE:
Heap: 
	
Store: 	
	(v: #s_8)
Pure Formulae: 	
	(! (#s_8 == $$undefined))
	(! (#s_8 == $$null))
	(! (typeOf(#s_8) == $$boolean_type))
	(typeOf(#s_8) == $$number_type)
Gamma: 	
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.735104
STATE:
Heap: 
	
Store: 	
	(v: #s_8)
Pure Formulae: 	
	(! (#s_8 == $$undefined))
	(! (#s_8 == $$null))
	(! (typeOf(#s_8) == $$boolean_type))
	(typeOf(#s_8) == $$number_type)
Gamma: 	
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.735230
STATE:
Heap: 
	
Store: 	
	(v: #s_8)
Pure Formulae: 	
	(! (#s_8 == $$undefined))
	(! (#s_8 == $$null))
	(! (typeOf(#s_8) == $$boolean_type))
	(typeOf(#s_8) == $$number_type)
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.739272
STATE:
Heap: 
	
Store: 	
	(v: #s_8)
Pure Formulae: 	
	(! (#s_8 == $$undefined))
	(! (#s_8 == $$null))
	(! (typeOf(#s_8) == $$boolean_type))
	(typeOf(#s_8) == $$number_type)
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 12
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 11.739367
STATE:
Heap: 
	
Store: 	
	(v: #s_8)
Pure Formulae: 	
	(! (#s_8 == $$undefined))
	(! (#s_8 == $$null))
	(! (typeOf(#s_8) == $$boolean_type))
	(typeOf(#s_8) == $$number_type)
Gamma: 	
Preds: 
CMD: xret := "number"
----------------------------------
----------------------------------
--11--
TIME: 11.739427
STATE:
Heap: 
	
Store: 	
	(xret: \"number\")
	(v: #s_8)
Pure Formulae: 	
	(! (#s_8 == $$undefined))
	(! (#s_8 == $$null))
	(! (typeOf(#s_8) == $$boolean_type))
	(typeOf(#s_8) == $$number_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 11.739485
STATE:
Heap: 
	
Store: 	
	(xret: \"number\")
	(v: #s_8)
Pure Formulae: 	
	(! (#s_8 == $$undefined))
	(! (#s_8 == $$null))
	(! (typeOf(#s_8) == $$boolean_type))
	(typeOf(#s_8) == $$number_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__typeOf
----------------------------------
----------------------------------
Symbolic execution of i__typeOf
----------------------------------
--0--
TIME: 11.739748
STATE:
Heap: 
	
Store: 	
	(v: #s_9)
Pure Formulae: 	
	(! (#s_9 == $$undefined))
	(! (#s_9 == $$null))
	(! (typeOf(#s_9) == $$boolean_type))
	(! (typeOf(#s_9) == $$number_type))
	(typeOf(#s_9) == $$string_type)
Gamma: 	
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.756060
STATE:
Heap: 
	
Store: 	
	(v: #s_9)
Pure Formulae: 	
	(! (#s_9 == $$undefined))
	(! (#s_9 == $$null))
	(! (typeOf(#s_9) == $$boolean_type))
	(! (typeOf(#s_9) == $$number_type))
	(typeOf(#s_9) == $$string_type)
Gamma: 	
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.756194
STATE:
Heap: 
	
Store: 	
	(v: #s_9)
Pure Formulae: 	
	(! (#s_9 == $$undefined))
	(! (#s_9 == $$null))
	(! (typeOf(#s_9) == $$boolean_type))
	(! (typeOf(#s_9) == $$number_type))
	(typeOf(#s_9) == $$string_type)
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.756467
STATE:
Heap: 
	
Store: 	
	(v: #s_9)
Pure Formulae: 	
	(! (#s_9 == $$undefined))
	(! (#s_9 == $$null))
	(! (typeOf(#s_9) == $$boolean_type))
	(! (typeOf(#s_9) == $$number_type))
	(typeOf(#s_9) == $$string_type)
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.756589
STATE:
Heap: 
	
Store: 	
	(v: #s_9)
Pure Formulae: 	
	(! (#s_9 == $$undefined))
	(! (#s_9 == $$null))
	(! (typeOf(#s_9) == $$boolean_type))
	(! (typeOf(#s_9) == $$number_type))
	(typeOf(#s_9) == $$string_type)
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$string_type)] 13 15
----------------------------------
in the THEN branch
----------------------------------
--13--
TIME: 11.756685
STATE:
Heap: 
	
Store: 	
	(v: #s_9)
Pure Formulae: 	
	(! (#s_9 == $$undefined))
	(! (#s_9 == $$null))
	(! (typeOf(#s_9) == $$boolean_type))
	(! (typeOf(#s_9) == $$number_type))
	(typeOf(#s_9) == $$string_type)
Gamma: 	
Preds: 
CMD: xret := "string"
----------------------------------
----------------------------------
--14--
TIME: 11.756748
STATE:
Heap: 
	
Store: 	
	(xret: \"string\")
	(v: #s_9)
Pure Formulae: 	
	(! (#s_9 == $$undefined))
	(! (#s_9 == $$null))
	(! (typeOf(#s_9) == $$boolean_type))
	(! (typeOf(#s_9) == $$number_type))
	(typeOf(#s_9) == $$string_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 11.756808
STATE:
Heap: 
	
Store: 	
	(xret: \"string\")
	(v: #s_9)
Pure Formulae: 	
	(! (#s_9 == $$undefined))
	(! (#s_9 == $$null))
	(! (typeOf(#s_9) == $$boolean_type))
	(! (typeOf(#s_9) == $$number_type))
	(typeOf(#s_9) == $$string_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__typeOf
----------------------------------
----------------------------------
Symbolic execution of i__typeOf
----------------------------------
--0--
TIME: 11.757320
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(#s_10: $$object_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.778904
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(#s_10: $$object_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.779212
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(#s_10: $$object_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.779412
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(#s_10: $$object_type)
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.779605
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(#s_10: $$object_type)
Preds: 
CMD: goto [(typeOf(v) = $$string_type)] 13 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.779890
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(#s_10: $$object_type)
Preds: 
CMD: goto [(typeOf(v) = $$object_type)] 16 22
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 11.780222
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(#s_10: $$object_type)
Preds: 
CMD: xret := hasField(v,"@call")
----------------------------------
----------------------------------
--17--
TIME: 11.780506
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(xret: $$boolean_type)
	(#s_10: $$object_type)
Preds: 
CMD: goto [xret] 20 18
----------------------------------
in the THEN branch
----------------------------------
--20--
TIME: 11.780652
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(xret: $$boolean_type)
	(#s_10: $$object_type)
Preds: 
CMD: xret := "function"
----------------------------------
----------------------------------
--21--
TIME: 11.780746
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(xret: \"function\")
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(xret: $$string_type)
	(#s_10: $$object_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 11.780851
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(xret: \"function\")
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(xret: $$string_type)
	(#s_10: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__typeOf
----------------------------------
----------------------------------
Symbolic execution of i__typeOf
----------------------------------
--0--
TIME: 11.782954
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_12 == _$l_1)
	(#s_13 == None)
Gamma: 	
	(#s_12: $$object_type)
	(v: $$object_type)
	(#s_13: $$none_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.783171
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_12 == _$l_1)
	(#s_13 == None)
Gamma: 	
	(#s_12: $$object_type)
	(v: $$object_type)
	(#s_13: $$none_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.783375
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_12 == _$l_1)
	(#s_13 == None)
Gamma: 	
	(#s_12: $$object_type)
	(v: $$object_type)
	(#s_13: $$none_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.783717
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_12 == _$l_1)
	(#s_13 == None)
Gamma: 	
	(#s_12: $$object_type)
	(v: $$object_type)
	(#s_13: $$none_type)
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.783929
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_12 == _$l_1)
	(#s_13 == None)
Gamma: 	
	(#s_12: $$object_type)
	(v: $$object_type)
	(#s_13: $$none_type)
Preds: 
CMD: goto [(typeOf(v) = $$string_type)] 13 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.784131
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_12 == _$l_1)
	(#s_13 == None)
Gamma: 	
	(#s_12: $$object_type)
	(v: $$object_type)
	(#s_13: $$none_type)
Preds: 
CMD: goto [(typeOf(v) = $$object_type)] 16 22
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 11.784310
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_12 == _$l_1)
	(#s_13 == None)
Gamma: 	
	(#s_12: $$object_type)
	(v: $$object_type)
	(#s_13: $$none_type)
Preds: 
CMD: xret := hasField(v,"@call")
----------------------------------
----------------------------------
--17--
TIME: 11.784430
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_12 == _$l_1)
	(#s_13 == None)
Gamma: 	
	(#s_12: $$object_type)
	(xret: $$boolean_type)
	(v: $$object_type)
	(#s_13: $$none_type)
Preds: 
CMD: goto [xret] 20 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.784698
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_12 == _$l_1)
	(#s_13 == None)
Gamma: 	
	(#s_12: $$object_type)
	(xret: $$boolean_type)
	(v: $$object_type)
	(#s_13: $$none_type)
Preds: 
CMD: xret := "object"
----------------------------------
----------------------------------
--19--
TIME: 11.784814
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: \"object\")
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_12 == _$l_1)
	(#s_13 == None)
Gamma: 	
	(#s_12: $$object_type)
	(xret: $$string_type)
	(v: $$object_type)
	(#s_13: $$none_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 11.784925
STATE:
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: \"object\")
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_12 == _$l_1)
	(#s_13 == None)
Gamma: 	
	(#s_12: $$object_type)
	(xret: $$string_type)
	(v: $$object_type)
	(#s_13: $$none_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__typeOf
----------------------------------
----------------------------------
Symbolic execution of i__typeOf
----------------------------------
--0--
TIME: 11.785282
STATE:
Heap: 
	
Store: 	
	(v: #s_14)
Pure Formulae: 	
	(! (#s_14 == $$undefined))
	(! (#s_14 == $$null))
	(! (typeOf(#s_14) == $$boolean_type))
	(! (typeOf(#s_14) == $$number_type))
	(! (typeOf(#s_14) == $$string_type))
	(! (typeOf(#s_14) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.803698
STATE:
Heap: 
	
Store: 	
	(v: #s_14)
Pure Formulae: 	
	(! (#s_14 == $$undefined))
	(! (#s_14 == $$null))
	(! (typeOf(#s_14) == $$boolean_type))
	(! (typeOf(#s_14) == $$number_type))
	(! (typeOf(#s_14) == $$string_type))
	(! (typeOf(#s_14) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.803859
STATE:
Heap: 
	
Store: 	
	(v: #s_14)
Pure Formulae: 	
	(! (#s_14 == $$undefined))
	(! (#s_14 == $$null))
	(! (typeOf(#s_14) == $$boolean_type))
	(! (typeOf(#s_14) == $$number_type))
	(! (typeOf(#s_14) == $$string_type))
	(! (typeOf(#s_14) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.804015
STATE:
Heap: 
	
Store: 	
	(v: #s_14)
Pure Formulae: 	
	(! (#s_14 == $$undefined))
	(! (#s_14 == $$null))
	(! (typeOf(#s_14) == $$boolean_type))
	(! (typeOf(#s_14) == $$number_type))
	(! (typeOf(#s_14) == $$string_type))
	(! (typeOf(#s_14) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.804153
STATE:
Heap: 
	
Store: 	
	(v: #s_14)
Pure Formulae: 	
	(! (#s_14 == $$undefined))
	(! (#s_14 == $$null))
	(! (typeOf(#s_14) == $$boolean_type))
	(! (typeOf(#s_14) == $$number_type))
	(! (typeOf(#s_14) == $$string_type))
	(! (typeOf(#s_14) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$string_type)] 13 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.804290
STATE:
Heap: 
	
Store: 	
	(v: #s_14)
Pure Formulae: 	
	(! (#s_14 == $$undefined))
	(! (#s_14 == $$null))
	(! (typeOf(#s_14) == $$boolean_type))
	(! (typeOf(#s_14) == $$number_type))
	(! (typeOf(#s_14) == $$string_type))
	(! (typeOf(#s_14) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$object_type)] 16 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.804425
STATE:
Heap: 
	
Store: 	
	(v: #s_14)
Pure Formulae: 	
	(! (#s_14 == $$undefined))
	(! (#s_14 == $$null))
	(! (typeOf(#s_14) == $$boolean_type))
	(! (typeOf(#s_14) == $$number_type))
	(! (typeOf(#s_14) == $$string_type))
	(! (typeOf(#s_14) == $$object_type))
Gamma: 	
Preds: 
CMD: xret := "typeOf: This should not happen."
----------------------------------
----------------------------------
--23--
TIME: 11.804555
STATE:
Heap: 
	
Store: 	
	(xret: \"typeOf: This should not happen.\")
	(v: #s_14)
Pure Formulae: 	
	(! (#s_14 == $$undefined))
	(! (#s_14 == $$null))
	(! (typeOf(#s_14) == $$boolean_type))
	(! (typeOf(#s_14) == $$number_type))
	(! (typeOf(#s_14) == $$string_type))
	(! (typeOf(#s_14) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 
CMD: goto 25
----------------------------------
----------------------------------
--25--
TIME: 11.804623
STATE:
Heap: 
	
Store: 	
	(xret: \"typeOf: This should not happen.\")
	(v: #s_14)
Pure Formulae: 	
	(! (#s_14 == $$undefined))
	(! (#s_14 == $$null))
	(! (typeOf(#s_14) == $$boolean_type))
	(! (typeOf(#s_14) == $$number_type))
	(! (typeOf(#s_14) == $$string_type))
	(! (typeOf(#s_14) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__typeOf
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 11.804933
STATE:
Heap: 
	
Store: 	
	(v: #s_15)
Pure Formulae: 	
	(((((#s_15 == $$undefined) \/ (#s_15 == $$null)) \/ (typeOf(#s_15) == $$boolean_type)) \/ (typeOf(#s_15) == $$number_type)) \/ (typeOf(#s_15) == $$string_type))
Gamma: 	
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 11.805007
STATE:
Heap: 
	
Store: 	
	(tv: typeOf(#s_15))
	(v: #s_15)
Pure Formulae: 	
	(((((#s_15 == $$undefined) \/ (#s_15 == $$null)) \/ (typeOf(#s_15) == $$boolean_type)) \/ (typeOf(#s_15) == $$number_type)) \/ (typeOf(#s_15) == $$string_type))
Gamma: 	
	(tv: $$type_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 11.819420
STATE:
Heap: 
	
Store: 	
	(tv: typeOf(#s_15))
	(v: #s_15)
Pure Formulae: 	
	(((((#s_15 == $$undefined) \/ (#s_15 == $$null)) \/ (typeOf(#s_15) == $$boolean_type)) \/ (typeOf(#s_15) == $$number_type)) \/ (typeOf(#s_15) == $$string_type))
Gamma: 	
	(tv: $$type_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--3--
TIME: 11.819507
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(#s_15))
	(v: #s_15)
Pure Formulae: 	
	(((((#s_15 == $$undefined) \/ (#s_15 == $$null)) \/ (typeOf(#s_15) == $$boolean_type)) \/ (typeOf(#s_15) == $$number_type)) \/ (typeOf(#s_15) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
CMD: goto 5
----------------------------------
----------------------------------
--5--
TIME: 11.819570
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(#s_15))
	(v: #s_15)
Pure Formulae: 	
	(((((#s_15 == $$undefined) \/ (#s_15 == $$null)) \/ (typeOf(#s_15) == $$boolean_type)) \/ (typeOf(#s_15) == $$number_type)) \/ (typeOf(#s_15) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 11.820920
STATE:
Heap: 
	
Store: 	
	(v: #s_16)
Pure Formulae: 	
	(! (#s_16 == $$undefined))
	(! (typeOf(#s_16) == $$string_type))
	(! (typeOf(#s_16) == $$number_type))
	(! (typeOf(#s_16) == $$boolean_type))
	(! (#s_16 == $$null))
Gamma: 	
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 11.820993
STATE:
Heap: 
	
Store: 	
	(tv: typeOf(#s_16))
	(v: #s_16)
Pure Formulae: 	
	(! (#s_16 == $$undefined))
	(! (typeOf(#s_16) == $$string_type))
	(! (typeOf(#s_16) == $$number_type))
	(! (typeOf(#s_16) == $$boolean_type))
	(! (#s_16 == $$null))
Gamma: 	
	(tv: $$type_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
I found the model: 

(define-fun |#s_16| () Extended_JSIL_Literal
  (Set (_ as-array k!617)))
(define-fun k!617 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
in the ELSE branch
----------------------------------
--4--
TIME: 11.861305
STATE:
Heap: 
	
Store: 	
	(tv: typeOf(#s_16))
	(v: #s_16)
Pure Formulae: 	
	(! (#s_16 == $$undefined))
	(! (typeOf(#s_16) == $$string_type))
	(! (typeOf(#s_16) == $$number_type))
	(! (typeOf(#s_16) == $$boolean_type))
	(! (#s_16 == $$null))
Gamma: 	
	(tv: $$type_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--5--
TIME: 11.861386
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(#s_16))
	(v: #s_16)
Pure Formulae: 	
	(! (#s_16 == $$undefined))
	(! (typeOf(#s_16) == $$string_type))
	(! (typeOf(#s_16) == $$number_type))
	(! (typeOf(#s_16) == $$boolean_type))
	(! (#s_16 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.862191
STATE:
Heap: 
	
Store: 	
	(v: #s_17)
Pure Formulae: 	
	(#s_17 == \"break\")
Gamma: 	
	(#s_17: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.862262
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_17)
Pure Formulae: 	
	(#s_17 == \"break\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_17: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.862353
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_17)
Pure Formulae: 	
	(#s_17 == \"break\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_17: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.862416
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_17)
Pure Formulae: 	
	(#s_17 == \"break\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_17: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.862655
STATE:
Heap: 
	
Store: 	
	(v: #s_18)
Pure Formulae: 	
	(#s_18 == \"case\")
Gamma: 	
	(#s_18: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.862723
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_18)
Pure Formulae: 	
	(#s_18 == \"case\")
Gamma: 	
	(#s_18: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.862829
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_18)
Pure Formulae: 	
	(#s_18 == \"case\")
Gamma: 	
	(#s_18: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.862945
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_18)
Pure Formulae: 	
	(#s_18 == \"case\")
Gamma: 	
	(#s_18: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.863014
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_18)
Pure Formulae: 	
	(#s_18 == \"case\")
Gamma: 	
	(#s_18: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.863233
STATE:
Heap: 
	
Store: 	
	(v: #s_19)
Pure Formulae: 	
	(#s_19 == \"catch\")
Gamma: 	
	(#s_19: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.863301
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_19)
Pure Formulae: 	
	(#s_19 == \"catch\")
Gamma: 	
	(#s_19: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.863400
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_19)
Pure Formulae: 	
	(#s_19 == \"catch\")
Gamma: 	
	(#s_19: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.863499
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_19)
Pure Formulae: 	
	(#s_19 == \"catch\")
Gamma: 	
	(#s_19: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.866276
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_19)
Pure Formulae: 	
	(#s_19 == \"catch\")
Gamma: 	
	(#s_19: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.866371
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_19)
Pure Formulae: 	
	(#s_19 == \"catch\")
Gamma: 	
	(#s_19: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.866608
STATE:
Heap: 
	
Store: 	
	(v: #s_20)
Pure Formulae: 	
	(#s_20 == \"continue\")
Gamma: 	
	(#s_20: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.866676
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_20)
Pure Formulae: 	
	(#s_20 == \"continue\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_20: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.866779
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_20)
Pure Formulae: 	
	(#s_20 == \"continue\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_20: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.866893
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_20)
Pure Formulae: 	
	(#s_20 == \"continue\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_20: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.866993
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_20)
Pure Formulae: 	
	(#s_20 == \"continue\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_20: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.867077
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_20)
Pure Formulae: 	
	(#s_20 == \"continue\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_20: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.867142
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_20)
Pure Formulae: 	
	(#s_20 == \"continue\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_20: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.867361
STATE:
Heap: 
	
Store: 	
	(v: #s_21)
Pure Formulae: 	
	(#s_21 == \"debugger\")
Gamma: 	
	(#s_21: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.867428
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_21)
Pure Formulae: 	
	(#s_21 == \"debugger\")
Gamma: 	
	(#s_21: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.867528
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_21)
Pure Formulae: 	
	(#s_21 == \"debugger\")
Gamma: 	
	(#s_21: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.868299
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_21)
Pure Formulae: 	
	(#s_21 == \"debugger\")
Gamma: 	
	(#s_21: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.868445
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_21)
Pure Formulae: 	
	(#s_21 == \"debugger\")
Gamma: 	
	(#s_21: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.868545
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_21)
Pure Formulae: 	
	(#s_21 == \"debugger\")
Gamma: 	
	(#s_21: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.868630
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_21)
Pure Formulae: 	
	(#s_21 == \"debugger\")
Gamma: 	
	(#s_21: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.868695
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_21)
Pure Formulae: 	
	(#s_21 == \"debugger\")
Gamma: 	
	(#s_21: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.868923
STATE:
Heap: 
	
Store: 	
	(v: #s_22)
Pure Formulae: 	
	(#s_22 == \"default\")
Gamma: 	
	(#s_22: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.868999
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_22)
Pure Formulae: 	
	(#s_22 == \"default\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_22: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.869100
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_22)
Pure Formulae: 	
	(#s_22 == \"default\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_22: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.869199
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_22)
Pure Formulae: 	
	(#s_22 == \"default\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_22: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.869297
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_22)
Pure Formulae: 	
	(#s_22 == \"default\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_22: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.869394
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_22)
Pure Formulae: 	
	(#s_22 == \"default\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_22: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.869491
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_22)
Pure Formulae: 	
	(#s_22 == \"default\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_22: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.869620
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_22)
Pure Formulae: 	
	(#s_22 == \"default\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_22: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.869686
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_22)
Pure Formulae: 	
	(#s_22 == \"default\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_22: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.869911
STATE:
Heap: 
	
Store: 	
	(v: #s_23)
Pure Formulae: 	
	(#s_23 == \"delete\")
Gamma: 	
	(#s_23: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.869977
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_23)
Pure Formulae: 	
	(#s_23 == \"delete\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_23: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.870075
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_23)
Pure Formulae: 	
	(#s_23 == \"delete\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_23: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.870173
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_23)
Pure Formulae: 	
	(#s_23 == \"delete\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_23: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.870270
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_23)
Pure Formulae: 	
	(#s_23 == \"delete\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_23: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.870367
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_23)
Pure Formulae: 	
	(#s_23 == \"delete\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_23: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.870473
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_23)
Pure Formulae: 	
	(#s_23 == \"delete\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_23: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.870570
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_23)
Pure Formulae: 	
	(#s_23 == \"delete\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_23: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.870653
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_23)
Pure Formulae: 	
	(#s_23 == \"delete\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_23: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.870716
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_23)
Pure Formulae: 	
	(#s_23 == \"delete\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_23: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.870938
STATE:
Heap: 
	
Store: 	
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(#s_24: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.871003
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_24: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.871099
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_24: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.871195
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_24: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.871290
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_24: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.871385
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_24: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.871482
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_24: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.871577
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_24: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.871673
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_24: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.871757
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_24: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.871955
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_24: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.872462
STATE:
Heap: 
	
Store: 	
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(#s_25: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.872722
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_25: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.872907
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_25: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.873063
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_25: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.873186
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_25: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.873313
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_25: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.873439
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_25: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.873567
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_25: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.873703
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_25: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.873828
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_25: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.873941
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_25: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.874016
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_25: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.874322
STATE:
Heap: 
	
Store: 	
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(#s_26: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.874859
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.875025
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.875174
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.875318
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.875471
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.875624
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.875769
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.875914
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.876064
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.876211
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.876345
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.876430
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_26: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.877023
STATE:
Heap: 
	
Store: 	
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(#s_27: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.877092
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.877205
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.877303
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.877401
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.877499
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.877596
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.877692
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.877788
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.877884
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.877981
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.878076
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.878207
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.878270
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_27: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.878605
STATE:
Heap: 
	
Store: 	
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(#s_28: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.878707
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.878823
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.878931
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.879032
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.879131
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.879231
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.879330
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.879430
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.879592
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.879693
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.879821
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.879939
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.880027
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.880094
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_28: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.880392
STATE:
Heap: 
	
Store: 	
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(#s_29: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.880458
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.880557
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.880653
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.880750
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.880845
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.880986
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.881081
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.881177
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.881272
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.881368
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.881493
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.881605
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.881706
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.881807
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.881875
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_29: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.882128
STATE:
Heap: 
	
Store: 	
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.882198
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.882341
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.882444
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.882547
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.882649
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.882752
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.882854
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.882959
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.883061
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.883162
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.883265
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.883373
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.883484
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.883588
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.883677
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.883745
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.883994
STATE:
Heap: 
	
Store: 	
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(#s_31: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.884065
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.884171
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.884277
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.884380
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.884484
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.884589
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.884691
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.884834
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.884944
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.885049
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.885152
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.885257
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.885360
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.885482
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.885580
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.885663
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.885727
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_31: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.885964
STATE:
Heap: 
	
Store: 	
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(#s_32: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.886058
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.886155
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.886251
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.886353
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.886448
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.886542
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.886637
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.886732
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.886826
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.886945
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.887098
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.887201
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.887346
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.887444
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.887541
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.887639
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.887723
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.887799
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_32: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.888046
STATE:
Heap: 
	
Store: 	
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(#s_33: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.888113
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.888213
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.888313
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.888470
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.888747
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.889208
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.889368
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.889524
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.889712
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.889841
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.889984
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.890116
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.890285
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.890432
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.890547
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.890676
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.891065
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.891356
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.891482
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_33: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.892043
STATE:
Heap: 
	
Store: 	
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(#s_34: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.892166
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.892380
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.892531
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.892685
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.892903
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.893106
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.893314
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.893650
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.893813
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.893955
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.894085
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.894214
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.894335
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.894596
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.894828
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.894962
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.895070
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.895206
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.895297
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.895380
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_34: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.895918
STATE:
Heap: 
	
Store: 	
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(#s_35: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.895985
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.896084
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.896182
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.896279
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.896378
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.896476
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.896598
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.896704
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.896801
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.896957
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.897056
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.897153
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.897264
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.897361
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.897458
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.897555
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.897651
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.897747
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.897843
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.897927
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.897990
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_35: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.898594
STATE:
Heap: 
	
Store: 	
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.898660
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.898759
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.898857
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.898953
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.899060
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.899157
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.899253
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.899350
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.899447
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.899543
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.899640
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.899780
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.899877
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.899974
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.900070
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.900167
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.900264
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.900361
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.900464
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.900561
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.900646
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.900709
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.901483
STATE:
Heap: 
	
Store: 	
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.901550
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.901648
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.901745
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.901841
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.901937
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.902032
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.902128
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.902223
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.902320
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.902426
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.902523
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.902665
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.902763
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.902859
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.902957
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.903053
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.903148
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.903245
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.903339
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.903479
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.903753
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.903891
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.903958
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.904721
STATE:
Heap: 
	
Store: 	
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(#s_38: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.904905
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.905057
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.905188
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.905312
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.905434
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.905551
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.905668
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.905795
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.905912
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.906029
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.906258
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.906420
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.906571
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.906687
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.906804
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.906922
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.907039
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.907155
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.907282
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.907404
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.907530
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.907651
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.907755
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.907829
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_38: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.908233
STATE:
Heap: 
	
Store: 	
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(#s_39: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.908310
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.908456
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.908577
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.908696
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.908800
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.908897
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.908993
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.909133
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.909232
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.909329
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.909425
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.909521
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.909617
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.909713
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.909809
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.909914
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.910011
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.910107
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.910202
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.910455
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.910550
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.910645
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.910800
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.910962
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.911077
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_39: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.911470
STATE:
Heap: 
	
Store: 	
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(#s_40: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.911569
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.911695
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.911853
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.912004
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.912158
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.912259
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.912357
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.912453
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.912551
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.912651
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.912747
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.912846
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.912943
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.913040
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.913136
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.913234
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.913424
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.913522
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.913619
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.913750
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.913865
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.913964
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.914061
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.914159
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.914243
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.914307
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_40: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.914589
STATE:
Heap: 
	
Store: 	
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.914695
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.914797
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.914895
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.915006
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.915103
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.915200
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.915298
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.915395
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.915494
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.915592
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.915689
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.915787
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.915956
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.916053
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.916152
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.916249
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.916346
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.916448
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.916546
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.916644
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.916741
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.916839
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.916936
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.917074
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.917172
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.917256
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.917320
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.917578
STATE:
Heap: 
	
Store: 	
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(#s_42: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.917644
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.917741
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.917838
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.917939
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.918034
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.918130
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.918225
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.918350
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.918446
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.918542
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.918635
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.918730
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.918825
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.918920
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.919015
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.919110
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.919205
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.919305
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.919442
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.919540
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.919731
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.919862
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.919962
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.920059
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.920157
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.920255
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.920340
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.920404
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_42: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.920678
STATE:
Heap: 
	
Store: 	
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(#s_43: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.920745
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.920964
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.921069
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.921169
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.921270
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.921493
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.921659
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.921799
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.921940
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.922159
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.922338
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.922485
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.922809
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.922949
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.923086
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.923256
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.923384
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.923521
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.923648
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.923835
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.923973
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.924099
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.924243
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.924380
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.924728
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.924868
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.925010
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.925154
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.925245
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_43: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.925825
STATE:
Heap: 
	
Store: 	
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(#s_44: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.925923
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.926134
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.926439
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.926650
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.926760
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.927508
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.927666
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.927768
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.927865
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.927963
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.928060
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.928157
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.928255
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.928366
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.928463
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.928560
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.928720
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.928820
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.928918
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.929016
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.929114
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.929210
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.929308
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.929405
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.929502
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.929600
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.929698
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.929802
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.929995
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.930061
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_44: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.930338
STATE:
Heap: 
	
Store: 	
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(#s_45: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.930404
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.930503
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.930600
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.930696
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.930793
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.930889
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.930986
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.931081
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.931216
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.931320
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.931418
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.931515
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.931612
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.931708
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.931804
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.931900
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.931997
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.932095
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.932191
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.932287
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.932857
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.932955
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.933052
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.933157
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.933254
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.933351
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.933448
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.933545
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.933641
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.933767
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.933838
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_45: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.934142
STATE:
Heap: 
	
Store: 	
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(#s_46: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.934209
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.934309
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.934407
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.934504
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.934601
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.934707
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.934806
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.934902
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.935031
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.935149
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.935458
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.935584
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.935698
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.935805
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.935903
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.936003
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.936101
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.936198
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.936295
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.936410
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.936510
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.936634
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.936810
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.936983
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.937092
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.937281
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.937467
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.937613
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.937769
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.937906
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.938020
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.938102
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_46: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.938754
STATE:
Heap: 
	
Store: 	
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(#s_47: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.938854
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.938991
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.939117
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.939268
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.939400
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.939506
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.939611
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.939717
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.939822
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.939929
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.940035
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.940196
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.940305
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.940419
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.940524
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.940628
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.940733
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.940839
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.940943
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.941050
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.941158
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.941264
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.941369
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.941523
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.941628
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.941734
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.941839
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.941952
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.942056
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.942162
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.942267
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.942359
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.942427
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_47: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.942769
STATE:
Heap: 
	
Store: 	
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.942841
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.942948
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.943051
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.943155
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.943270
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.943368
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.943471
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.943610
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.943741
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.943843
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.943942
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.944220
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.944318
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.944416
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.944514
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.944613
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.944710
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.944808
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.944906
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.945004
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.945112
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.945210
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.945363
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.945463
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.945561
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.945660
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.945758
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.945856
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.945953
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.946051
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.946147
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 11.946244
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.946328
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.946392
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.946709
STATE:
Heap: 
	
Store: 	
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(#s_49: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.946776
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.946875
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.946972
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.947069
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.947166
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.947263
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.947359
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.947455
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.947552
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.947648
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.947781
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.947879
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.947977
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.948169
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.948273
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.948372
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.948469
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.948566
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.948663
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.948760
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.948858
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.949026
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.949123
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.949222
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.949319
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.949416
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.949523
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.949621
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.949719
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.949816
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.949913
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 11.950010
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the ELSE branch
----------------------------------
--33--
TIME: 11.950108
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: goto [(v = "super")] 43 34
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.950241
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.950306
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_49: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.950604
STATE:
Heap: 
	
Store: 	
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(#s_50: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.950671
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.950772
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.950871
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.950969
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.951074
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.951172
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.951270
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.951371
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.951543
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.951642
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.951757
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.951958
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.952070
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.952172
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.952273
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.952373
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.952472
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.952571
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.952684
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.952841
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.952944
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.953042
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.953141
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.953239
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.953339
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.953438
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.953538
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.953636
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.953739
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.953969
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.954144
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 11.954301
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the ELSE branch
----------------------------------
--33--
TIME: 11.954415
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "super")] 43 34
----------------------------------
in the ELSE branch
----------------------------------
--34--
TIME: 11.954529
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: goto [(v = "implements")] 43 35
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.954628
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.954703
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_50: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.955043
STATE:
Heap: 
	
Store: 	
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(#s_51: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.955119
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.955235
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.955348
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.955461
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.955613
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.955726
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.955838
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.955951
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.956072
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.956184
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.956297
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.956410
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.956522
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.956634
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.956747
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.956944
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.957054
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.957166
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.957277
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.957387
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.957498
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.957615
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.957725
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.957835
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.957946
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.958056
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.958244
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.958357
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.958469
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.958582
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.958693
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 11.958805
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the ELSE branch
----------------------------------
--33--
TIME: 11.958917
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "super")] 43 34
----------------------------------
in the ELSE branch
----------------------------------
--34--
TIME: 11.959029
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "implements")] 43 35
----------------------------------
in the ELSE branch
----------------------------------
--35--
TIME: 11.959238
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: goto [(v = "interface")] 43 36
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.959434
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.959521
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_51: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.959990
STATE:
Heap: 
	
Store: 	
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.960069
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.960187
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.960298
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.960409
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.960519
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.960629
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.960739
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.960849
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.960959
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.961069
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.961974
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.962105
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.962216
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.962335
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.962438
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.962541
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.962643
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.962746
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.962849
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.962952
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.963054
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.963157
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.963320
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.963424
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.963534
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.963636
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.963740
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.963846
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.963950
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.964053
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.964157
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 11.964260
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the ELSE branch
----------------------------------
--33--
TIME: 11.964362
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "super")] 43 34
----------------------------------
in the ELSE branch
----------------------------------
--34--
TIME: 11.964466
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "implements")] 43 35
----------------------------------
in the ELSE branch
----------------------------------
--35--
TIME: 11.964653
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "interface")] 43 36
----------------------------------
in the ELSE branch
----------------------------------
--36--
TIME: 11.964756
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "let")] 43 37
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.964846
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.964914
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.965232
STATE:
Heap: 
	
Store: 	
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(#s_53: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.965306
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.965412
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.965516
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.965620
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.965724
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.965827
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.965967
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.966069
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.966174
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.966290
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.966387
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.966484
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.966582
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.966684
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.966780
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.966878
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.966976
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.967652
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.967751
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.967849
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.968043
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.968230
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.968427
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.968617
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.968806
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.968994
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.969183
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.969396
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.969677
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.969866
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.970054
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 11.970239
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the ELSE branch
----------------------------------
--33--
TIME: 11.970374
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "super")] 43 34
----------------------------------
in the ELSE branch
----------------------------------
--34--
TIME: 11.970488
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "implements")] 43 35
----------------------------------
in the ELSE branch
----------------------------------
--35--
TIME: 11.970599
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "interface")] 43 36
----------------------------------
in the ELSE branch
----------------------------------
--36--
TIME: 11.970710
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "let")] 43 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 11.970822
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: goto [(v = "package")] 43 38
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.970920
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.970992
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_53: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.971437
STATE:
Heap: 
	
Store: 	
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(#s_54: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.971532
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.971650
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.971763
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.971876
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.971988
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.972100
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.972212
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.972325
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.972438
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.972549
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.972711
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.972825
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.972936
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.973047
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.973168
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.973279
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.973390
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.973501
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.973613
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.973725
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.973901
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.974036
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.974377
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.974483
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.974588
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.974693
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.974798
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.974903
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.975022
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.975126
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.975233
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 11.975374
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the ELSE branch
----------------------------------
--33--
TIME: 11.975478
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "super")] 43 34
----------------------------------
in the ELSE branch
----------------------------------
--34--
TIME: 11.975745
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "implements")] 43 35
----------------------------------
in the ELSE branch
----------------------------------
--35--
TIME: 11.975856
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "interface")] 43 36
----------------------------------
in the ELSE branch
----------------------------------
--36--
TIME: 11.975961
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "let")] 43 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 11.976093
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "package")] 43 38
----------------------------------
in the ELSE branch
----------------------------------
--38--
TIME: 11.976267
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: goto [(v = "private")] 43 39
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.976370
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.976439
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_54: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.976761
STATE:
Heap: 
	
Store: 	
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(#s_55: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.976845
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.976953
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.977060
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.977284
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.977389
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.977494
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.977599
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.977703
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.977809
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.977920
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.978026
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.978130
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.978235
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.978359
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.978513
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.978611
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.978709
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.978807
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.978906
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.979005
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.979104
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.979202
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.979301
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.979400
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.979499
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.979600
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.979697
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.979802
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.979898
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.979996
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.980094
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 11.980191
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the ELSE branch
----------------------------------
--33--
TIME: 11.980288
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "super")] 43 34
----------------------------------
in the ELSE branch
----------------------------------
--34--
TIME: 11.980386
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "implements")] 43 35
----------------------------------
in the ELSE branch
----------------------------------
--35--
TIME: 11.980484
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "interface")] 43 36
----------------------------------
in the ELSE branch
----------------------------------
--36--
TIME: 11.980580
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "let")] 43 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 11.980677
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "package")] 43 38
----------------------------------
in the ELSE branch
----------------------------------
--38--
TIME: 11.980811
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "private")] 43 39
----------------------------------
in the ELSE branch
----------------------------------
--39--
TIME: 11.980909
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: goto [(v = "protected")] 43 40
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.980993
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.981058
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_55: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.981357
STATE:
Heap: 
	
Store: 	
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.981424
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.981523
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.981621
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.981719
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.981815
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.982010
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.982107
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.982204
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.982301
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.982398
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.982496
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.982653
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.982811
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.982950
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.983053
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.983178
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.983300
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.983479
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.983587
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.983760
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.983939
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.984145
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.984320
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.984484
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.984620
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.984723
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.984882
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.985056
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.985288
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.985402
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.985515
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 11.985627
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the ELSE branch
----------------------------------
--33--
TIME: 11.985746
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "super")] 43 34
----------------------------------
in the ELSE branch
----------------------------------
--34--
TIME: 11.985845
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "implements")] 43 35
----------------------------------
in the ELSE branch
----------------------------------
--35--
TIME: 11.985943
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "interface")] 43 36
----------------------------------
in the ELSE branch
----------------------------------
--36--
TIME: 11.986042
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "let")] 43 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 11.986140
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "package")] 43 38
----------------------------------
in the ELSE branch
----------------------------------
--38--
TIME: 11.986238
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "private")] 43 39
----------------------------------
in the ELSE branch
----------------------------------
--39--
TIME: 11.986339
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "protected")] 43 40
----------------------------------
in the ELSE branch
----------------------------------
--40--
TIME: 11.986436
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "public")] 43 41
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.986597
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.986661
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.986995
STATE:
Heap: 
	
Store: 	
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.987063
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.987163
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.987262
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.987360
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.987458
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.987556
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.987654
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.987863
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.987961
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.988058
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.988155
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.988262
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.988359
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.988455
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.988552
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.988650
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.988746
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.988842
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.988939
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.989109
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.989209
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.989307
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.989404
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.989502
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.989608
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.989707
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.989805
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.989903
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.990006
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.990104
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.990255
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 11.990353
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the ELSE branch
----------------------------------
--33--
TIME: 11.990451
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "super")] 43 34
----------------------------------
in the ELSE branch
----------------------------------
--34--
TIME: 11.990549
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "implements")] 43 35
----------------------------------
in the ELSE branch
----------------------------------
--35--
TIME: 11.990646
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "interface")] 43 36
----------------------------------
in the ELSE branch
----------------------------------
--36--
TIME: 11.990742
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "let")] 43 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 11.990839
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "package")] 43 38
----------------------------------
in the ELSE branch
----------------------------------
--38--
TIME: 11.990936
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "private")] 43 39
----------------------------------
in the ELSE branch
----------------------------------
--39--
TIME: 11.991039
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "protected")] 43 40
----------------------------------
in the ELSE branch
----------------------------------
--40--
TIME: 11.991135
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "public")] 43 41
----------------------------------
in the ELSE branch
----------------------------------
--41--
TIME: 11.991233
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "static")] 43 42
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.991317
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.991576
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.991904
STATE:
Heap: 
	
Store: 	
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.991971
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 11.992071
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 11.992199
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 11.992395
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 11.992542
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 11.992642
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 11.992739
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 11.992837
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 11.993000
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 11.993098
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 11.993196
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 11.993293
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 11.993391
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 11.993490
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 11.993587
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 11.993684
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 11.993782
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 11.993879
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 11.993976
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 11.994074
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 11.994989
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 11.995089
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 11.995197
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 11.995294
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 11.995391
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 11.995488
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 11.995585
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 11.995682
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 11.995778
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 11.995875
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 11.995978
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 11.996132
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the ELSE branch
----------------------------------
--33--
TIME: 11.996229
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "super")] 43 34
----------------------------------
in the ELSE branch
----------------------------------
--34--
TIME: 11.996326
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "implements")] 43 35
----------------------------------
in the ELSE branch
----------------------------------
--35--
TIME: 11.996425
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "interface")] 43 36
----------------------------------
in the ELSE branch
----------------------------------
--36--
TIME: 11.996529
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "let")] 43 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 11.996627
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "package")] 43 38
----------------------------------
in the ELSE branch
----------------------------------
--38--
TIME: 11.996724
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "private")] 43 39
----------------------------------
in the ELSE branch
----------------------------------
--39--
TIME: 11.996821
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "protected")] 43 40
----------------------------------
in the ELSE branch
----------------------------------
--40--
TIME: 11.996917
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "public")] 43 41
----------------------------------
in the ELSE branch
----------------------------------
--41--
TIME: 11.997014
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "static")] 43 42
----------------------------------
in the ELSE branch
----------------------------------
--42--
TIME: 11.997112
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "yield")] 43 44
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 11.997198
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--44--
TIME: 11.997261
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved
----------------------------------
----------------------------------
Symbolic execution of i__isReserved
----------------------------------
--0--
TIME: 11.997900
STATE:
Heap: 
	
Store: 	
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 11.998316
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "break")] 43 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 12.013656
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "case")] 43 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 12.015649
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "catch")] 43 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 12.016592
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "continue")] 43 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 12.017544
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "debugger")] 43 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 12.018396
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "default")] 43 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 12.019254
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "delete")] 43 8
----------------------------------
in the ELSE branch
----------------------------------
--8--
TIME: 12.020099
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "do")] 43 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 12.020975
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "else")] 43 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 12.021840
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "finally")] 43 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 12.022729
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "for")] 43 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 12.023559
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "function")] 43 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 12.024377
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "if")] 43 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 12.025291
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "in")] 43 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 12.026153
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "instanceof")] 43 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 12.027000
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "new")] 43 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 12.027855
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "return")] 43 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 12.028686
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "switch")] 43 19
----------------------------------
in the ELSE branch
----------------------------------
--19--
TIME: 12.029591
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "this")] 43 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 12.030455
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "throw")] 43 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 12.031278
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "try")] 43 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 12.032154
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "typeof")] 43 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 12.033254
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "var")] 43 24
----------------------------------
in the ELSE branch
----------------------------------
--24--
TIME: 12.034084
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "void")] 43 25
----------------------------------
in the ELSE branch
----------------------------------
--25--
TIME: 12.034920
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "while")] 43 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 12.035740
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "with")] 43 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 12.036570
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "class")] 43 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 12.037376
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "const")] 43 29
----------------------------------
in the ELSE branch
----------------------------------
--29--
TIME: 12.038272
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "enum")] 43 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 12.039121
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "export")] 43 31
----------------------------------
in the ELSE branch
----------------------------------
--31--
TIME: 12.039940
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "extends")] 43 32
----------------------------------
in the ELSE branch
----------------------------------
--32--
TIME: 12.040956
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "import")] 43 33
----------------------------------
in the ELSE branch
----------------------------------
--33--
TIME: 12.041858
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "super")] 43 34
----------------------------------
in the ELSE branch
----------------------------------
--34--
TIME: 12.042726
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "implements")] 43 35
----------------------------------
in the ELSE branch
----------------------------------
--35--
TIME: 12.043648
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "interface")] 43 36
----------------------------------
in the ELSE branch
----------------------------------
--36--
TIME: 12.044507
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "let")] 43 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 12.045343
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "package")] 43 38
----------------------------------
in the ELSE branch
----------------------------------
--38--
TIME: 12.046210
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "private")] 43 39
----------------------------------
in the ELSE branch
----------------------------------
--39--
TIME: 12.047048
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "protected")] 43 40
----------------------------------
in the ELSE branch
----------------------------------
--40--
TIME: 12.047869
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "public")] 43 41
----------------------------------
in the ELSE branch
----------------------------------
--41--
TIME: 12.048757
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "static")] 43 42
----------------------------------
in the ELSE branch
----------------------------------
--42--
TIME: 12.050052
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v = "yield")] 43 44
----------------------------------
in the ELSE branch
----------------------------------
--44--
TIME: 12.050919
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isReserved

Verified: 56.		Prunings: 0.

RESULTS
Proc Array_isArray  - Single Spec - normal

Precondition
Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(array: #s_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(#s_1 == \"Array\")
	(#s_0 == _$l_0)
Gamma: 	
	(#s_1: $$string_type)
	(#s_0: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_0 |-> [(\"@class\": \"Array\"), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(class: \"Array\")
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(class: $$string_type)
	(array: $$object_type)
Preds: 
;
 -- VERIFIED

Proc Array_isArray  - Single Spec - normal

Precondition
Heap: 
	_$l_0 |-> [(\"@class\": #s_3), (default: $$unknown)]
Store: 	
	(array: #s_2)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (#s_3 == None))
	(! (#s_3 == \"Array\"))
	(#s_2 == _$l_0)
Gamma: 	
	(#s_2: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_0 |-> [(\"@class\": #s_3), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(class: #s_3)
	(array: _$l_0)
Pure Formulae: 	
	(typeOf(_$l_0) == $$object_type)
	(! (#s_3 == None))
	(! (#s_3 == \"Array\"))
Gamma: 	
	(xret: $$boolean_type)
	(array: $$object_type)
Preds: 
;
 -- VERIFIED

Proc Array_isArray  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(array: #s_4)
Pure Formulae: 	
	(! (typeOf(#s_4) == $$object_type))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(array: #s_4)
Pure Formulae: 	
	(! (typeOf(#s_4) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__typeOf  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_5)
Pure Formulae: 	
	(#s_5 == $$undefined)
Gamma: 	
	(#s_5: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: \"undefined\")
	(v: $$undefined)
Pure Formulae: 	
	(v == $$undefined)
Gamma: 	
	(xret: $$string_type)
	(v: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc i__typeOf  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_6)
Pure Formulae: 	
	(#s_6 == $$null)
Gamma: 	
	(#s_6: $$null_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: \"object\")
	(v: $$null)
Pure Formulae: 	
	(v == $$null)
Gamma: 	
	(xret: $$string_type)
	(v: $$null_type)
Preds: 
;
 -- VERIFIED

Proc i__typeOf  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_7)
Pure Formulae: 	
	(! (#s_7 == $$undefined))
	(! (#s_7 == $$null))
	(typeOf(#s_7) == $$boolean_type)
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: \"boolean\")
	(v: #s_7)
Pure Formulae: 	
	(! (#s_7 == $$undefined))
	(! (#s_7 == $$null))
	(typeOf(#s_7) == $$boolean_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__typeOf  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_8)
Pure Formulae: 	
	(! (#s_8 == $$undefined))
	(! (#s_8 == $$null))
	(! (typeOf(#s_8) == $$boolean_type))
	(typeOf(#s_8) == $$number_type)
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: \"number\")
	(v: #s_8)
Pure Formulae: 	
	(! (#s_8 == $$undefined))
	(! (#s_8 == $$null))
	(! (typeOf(#s_8) == $$boolean_type))
	(typeOf(#s_8) == $$number_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__typeOf  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_9)
Pure Formulae: 	
	(! (#s_9 == $$undefined))
	(! (#s_9 == $$null))
	(! (typeOf(#s_9) == $$boolean_type))
	(! (typeOf(#s_9) == $$number_type))
	(typeOf(#s_9) == $$string_type)
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: \"string\")
	(v: #s_9)
Pure Formulae: 	
	(! (#s_9 == $$undefined))
	(! (#s_9 == $$null))
	(! (typeOf(#s_9) == $$boolean_type))
	(! (typeOf(#s_9) == $$number_type))
	(typeOf(#s_9) == $$string_type)
Gamma: 	
	(xret: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__typeOf  - Single Spec - normal

Precondition
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(v: #s_10)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
	(#s_10 == _$l_1)
Gamma: 	
	(#s_10: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_1 |-> [(\"@call\": #s_11), (default: $$unknown)]
Store: 	
	(xret: \"function\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(! (#s_11 == None))
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__typeOf  - Single Spec - normal

Precondition
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(v: #s_12)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
	(#s_13 == None)
	(#s_12 == _$l_1)
Gamma: 	
	(#s_12: $$object_type)
	(#s_13: $$none_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_1 |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: \"object\")
	(v: _$l_1)
Pure Formulae: 	
	(! (_$l_1 == $$undefined))
	(! (typeOf(_$l_1) == $$boolean_type))
	(! (typeOf(_$l_1) == $$number_type))
	(! (typeOf(_$l_1) == $$string_type))
	(typeOf(_$l_1) == $$object_type)
Gamma: 	
	(xret: $$string_type)
	(v: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__typeOf  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(v: #s_14)
Pure Formulae: 	
	(! (#s_14 == $$undefined))
	(! (#s_14 == $$null))
	(! (typeOf(#s_14) == $$boolean_type))
	(! (typeOf(#s_14) == $$number_type))
	(! (typeOf(#s_14) == $$string_type))
	(! (typeOf(#s_14) == $$object_type))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: \"typeOf: This should not happen.\")
	(v: #s_14)
Pure Formulae: 	
	(! (#s_14 == $$undefined))
	(! (#s_14 == $$null))
	(! (typeOf(#s_14) == $$boolean_type))
	(! (typeOf(#s_14) == $$number_type))
	(! (typeOf(#s_14) == $$string_type))
	(! (typeOf(#s_14) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_15)
Pure Formulae: 	
	(((((#s_15 == $$undefined) \/ (#s_15 == $$null)) \/ (typeOf(#s_15) == $$boolean_type)) \/ (typeOf(#s_15) == $$number_type)) \/ (typeOf(#s_15) == $$string_type))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(#s_15))
	(v: #s_15)
Pure Formulae: 	
	(((((#s_15 == $$undefined) \/ (#s_15 == $$null)) \/ (typeOf(#s_15) == $$boolean_type)) \/ (typeOf(#s_15) == $$number_type)) \/ (typeOf(#s_15) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
;
 -- VERIFIED

Proc i__isPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_16)
Pure Formulae: 	
	(! (#s_16 == $$undefined))
	(! (typeOf(#s_16) == $$string_type))
	(! (typeOf(#s_16) == $$number_type))
	(! (typeOf(#s_16) == $$boolean_type))
	(! (#s_16 == $$null))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(#s_16))
	(v: #s_16)
Pure Formulae: 	
	(! (#s_16 == $$undefined))
	(! (typeOf(#s_16) == $$string_type))
	(! (typeOf(#s_16) == $$number_type))
	(! (typeOf(#s_16) == $$boolean_type))
	(! (#s_16 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_17)
Pure Formulae: 	
	(#s_17 == \"break\")
Gamma: 	
	(#s_17: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"break\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_18)
Pure Formulae: 	
	(#s_18 == \"case\")
Gamma: 	
	(#s_18: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"case\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_19)
Pure Formulae: 	
	(#s_19 == \"catch\")
Gamma: 	
	(#s_19: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"catch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_20)
Pure Formulae: 	
	(#s_20 == \"continue\")
Gamma: 	
	(#s_20: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"continue\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_21)
Pure Formulae: 	
	(#s_21 == \"debugger\")
Gamma: 	
	(#s_21: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"debugger\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_22)
Pure Formulae: 	
	(#s_22 == \"default\")
Gamma: 	
	(#s_22: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"default\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_23)
Pure Formulae: 	
	(#s_23 == \"delete\")
Gamma: 	
	(#s_23: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"delete\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_24)
Pure Formulae: 	
	(#s_24 == \"do\")
Gamma: 	
	(#s_24: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"do\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_25)
Pure Formulae: 	
	(#s_25 == \"else\")
Gamma: 	
	(#s_25: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"else\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_26)
Pure Formulae: 	
	(#s_26 == \"finally\")
Gamma: 	
	(#s_26: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"finally\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_27)
Pure Formulae: 	
	(#s_27 == \"for\")
Gamma: 	
	(#s_27: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"for\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_28)
Pure Formulae: 	
	(#s_28 == \"function\")
Gamma: 	
	(#s_28: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"function\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_29)
Pure Formulae: 	
	(#s_29 == \"if\")
Gamma: 	
	(#s_29: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"if\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_30)
Pure Formulae: 	
	(#s_30 == \"in\")
Gamma: 	
	(#s_30: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"in\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_31)
Pure Formulae: 	
	(#s_31 == \"instanceof\")
Gamma: 	
	(#s_31: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"instanceof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_32)
Pure Formulae: 	
	(#s_32 == \"new\")
Gamma: 	
	(#s_32: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"new\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_33)
Pure Formulae: 	
	(#s_33 == \"return\")
Gamma: 	
	(#s_33: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"return\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_34)
Pure Formulae: 	
	(#s_34 == \"switch\")
Gamma: 	
	(#s_34: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"switch\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_35)
Pure Formulae: 	
	(#s_35 == \"this\")
Gamma: 	
	(#s_35: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"this\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_36)
Pure Formulae: 	
	(#s_36 == \"throw\")
Gamma: 	
	(#s_36: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"throw\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_37)
Pure Formulae: 	
	(#s_37 == \"try\")
Gamma: 	
	(#s_37: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"try\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_38)
Pure Formulae: 	
	(#s_38 == \"typeof\")
Gamma: 	
	(#s_38: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"typeof\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_39)
Pure Formulae: 	
	(#s_39 == \"var\")
Gamma: 	
	(#s_39: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"var\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_40)
Pure Formulae: 	
	(#s_40 == \"void\")
Gamma: 	
	(#s_40: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"void\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_41)
Pure Formulae: 	
	(#s_41 == \"while\")
Gamma: 	
	(#s_41: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"while\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_42)
Pure Formulae: 	
	(#s_42 == \"with\")
Gamma: 	
	(#s_42: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"with\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_43)
Pure Formulae: 	
	(#s_43 == \"class\")
Gamma: 	
	(#s_43: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"class\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_44)
Pure Formulae: 	
	(#s_44 == \"const\")
Gamma: 	
	(#s_44: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"const\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_45)
Pure Formulae: 	
	(#s_45 == \"enum\")
Gamma: 	
	(#s_45: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"enum\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_46)
Pure Formulae: 	
	(#s_46 == \"export\")
Gamma: 	
	(#s_46: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"export\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_47)
Pure Formulae: 	
	(#s_47 == \"extends\")
Gamma: 	
	(#s_47: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"extends\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_48)
Pure Formulae: 	
	(#s_48 == \"import\")
Gamma: 	
	(#s_48: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"import\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_49)
Pure Formulae: 	
	(#s_49 == \"super\")
Gamma: 	
	(#s_49: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"super\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_50)
Pure Formulae: 	
	(#s_50 == \"implements\")
Gamma: 	
	(#s_50: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"implements\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_51)
Pure Formulae: 	
	(#s_51 == \"interface\")
Gamma: 	
	(#s_51: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"interface\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_52)
Pure Formulae: 	
	(#s_52 == \"let\")
Gamma: 	
	(#s_52: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"let\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_53)
Pure Formulae: 	
	(#s_53 == \"package\")
Gamma: 	
	(#s_53: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"package\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_54)
Pure Formulae: 	
	(#s_54 == \"private\")
Gamma: 	
	(#s_54: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"private\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_55)
Pure Formulae: 	
	(#s_55 == \"protected\")
Gamma: 	
	(#s_55: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"protected\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_56)
Pure Formulae: 	
	(#s_56 == \"public\")
Gamma: 	
	(#s_56: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"public\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_57)
Pure Formulae: 	
	(#s_57 == \"static\")
Gamma: 	
	(#s_57: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"static\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_58)
Pure Formulae: 	
	(#s_58 == \"yield\")
Gamma: 	
	(#s_58: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: \"yield\")
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isReserved  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_59)
Pure Formulae: 	
	(! (#s_59 == \"break\"))
	(! (#s_59 == \"case\"))
	(! (#s_59 == \"catch\"))
	(! (#s_59 == \"continue\"))
	(! (#s_59 == \"debugger\"))
	(! (#s_59 == \"default\"))
	(! (#s_59 == \"delete\"))
	(! (#s_59 == \"do\"))
	(! (#s_59 == \"else\"))
	(! (#s_59 == \"finally\"))
	(! (#s_59 == \"for\"))
	(! (#s_59 == \"function\"))
	(! (#s_59 == \"if\"))
	(! (#s_59 == \"in\"))
	(! (#s_59 == \"instanceof\"))
	(! (#s_59 == \"new\"))
	(! (#s_59 == \"return\"))
	(! (#s_59 == \"switch\"))
	(! (#s_59 == \"this\"))
	(! (#s_59 == \"throw\"))
	(! (#s_59 == \"try\"))
	(! (#s_59 == \"typeof\"))
	(! (#s_59 == \"var\"))
	(! (#s_59 == \"void\"))
	(! (#s_59 == \"while\"))
	(! (#s_59 == \"with\"))
	(! (#s_59 == \"class\"))
	(! (#s_59 == \"const\"))
	(! (#s_59 == \"enum\"))
	(! (#s_59 == \"export\"))
	(! (#s_59 == \"extends\"))
	(! (#s_59 == \"import\"))
	(! (#s_59 == \"super\"))
	(! (#s_59 == \"implements\"))
	(! (#s_59 == \"interface\"))
	(! (#s_59 == \"let\"))
	(! (#s_59 == \"package\"))
	(! (#s_59 == \"private\"))
	(! (#s_59 == \"protected\"))
	(! (#s_59 == \"public\"))
	(! (#s_59 == \"static\"))
	(! (#s_59 == \"yield\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

ALL Succeeded in 12.054959

**********     Ending normal symbolic execution.     **********

BI-ABDUCTIVE RESULTS: 


--------------
Recursive procedures, unable to verify:  
--------------

AP_indexOf
i__toInt32
AP_splice
put
i__putValue
AP_slice
AP_lastIndexOf
AP_pop
get
a__sortCompare
i__toPrimitive
i__toUint16
AP_shift
Array_call
AP_reverse
AP_forEach
AP_join
AP_reduce
AP_filter
i__toPropertyDescriptor
a__defineOwnProperty
hasProperty
i__fromPropertyDescriptor
AP_some
AP_every
f__hasInstance
AP_map
AP_sort
AP_reduceRight
i__getValue
AP_toString
AP_push
a__isIdx
defineOwnProperty
i__toString
i__toInteger
AP_toLocaleString
hasInstance
defaultValue
AP_unshift
i__abstractComparison
canPut
i__toUint32
getProperty
i__abstractEquality
AP_concat
Array_construct
i__toNumber
--------------
Procedures we generated and verified specs for: 
--------------
i__typeOf
i__isReserved
i__isPrimitive
Array_isArray

