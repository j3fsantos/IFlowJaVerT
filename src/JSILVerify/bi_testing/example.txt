ERROR: Recusive call ReferenceError
ERROR: Recusive call TypeError_call
ERROR: Recusive call SyntaxError_call
ERROR: Recusive call i__getValue
ERROR: Recusive call ReferenceError_call
ERROR: Recusive call i__putValue
ERROR: Recusive call put
ERROR: Recusive call copy_object
ERROR: Recusive call o__defineOwnProperty
ERROR: Recusive call get
ERROR: Recusive call SyntaxError
ERROR: Recusive call defineOwnProperty
ERROR: Recusive call i__toString
ERROR: Recusive call i__toInteger
ERROR: Recusive call Error_construct
ERROR: Recusive call i__abstractComparison
ERROR: Recusive call canPut
ERROR: Recusive call deleteProperty
ERROR: Recusive call TypeError
ERROR: Recusive call copy_object_rec
ERROR: Recusive call getProperty
ERROR: Recusive call i__checkObjectCoercible
ERROR: Recusive call i__abstractEquality
ERROR: Recusive call hasProperty
ERROR: Recusive call i__checkAssignmentErrors
ERROR: Recusive call i__checkParameters
ERROR: Recusive call i__toNumber

*********** Starting bi-abduction symbolic execution. ***********

----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 1.276970
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: xret := (v1 = v2)
----------------------------------
LVAR LHS: _lvar_123 
----------------------------------
--1--
TIME: 1.277010
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
I found the model: 

(define-fun _lvar_123 () Extended_JSIL_Literal
  (Set (_ as-array k!272)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!272 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_123 () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--1--
TIME: 1.301259
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
----------------------------------
--2--
TIME: 1.301299
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
I found the model: 

(define-fun _lvar_123 () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun _lvar_124 () Extended_JSIL_Literal
  (Set (_ as-array k!281)))
(define-fun k!281 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_123 () Extended_JSIL_Literal
  (Elem (Num 1.0)))
(define-fun _lvar_124 () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--2--
TIME: 1.331993
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
----------------------------------
--3--
TIME: 1.332102
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(not (v1 = v1))] 4 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 1.346546
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v1 = 0.)] 6 12
----------------------------------
I found the model: 

(define-fun _lvar_123 () Extended_JSIL_Literal
  (Elem (Num 2.0)))
(define-fun _lvar_124 () Extended_JSIL_Literal
  (Elem (Num 1.0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_123 () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun _lvar_124 () Extended_JSIL_Literal
  (Elem (Num 1.0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--5--
TIME: 1.384552
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v1 = 0.)] 6 12
----------------------------------
----------------------------------
--6--
TIME: 1.384613
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: 0.)
	(xret: (0. = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v2 = 0.)] 7 12
----------------------------------
I found the model: 

(define-fun _lvar_124 () Extended_JSIL_Literal
  (Elem (Num 1.0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_124 () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--6--
TIME: 1.423520
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: 0.)
	(xret: (0. = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_124 == 0.)
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(_lvar_124 == 0.)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v2 = 0.)] 7 12
----------------------------------
typing the jsil equality. t1: $$number_type. t2: $$number_type.
----------------------------------
--7--
TIME: 1.423591
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: 0.)
	(xret: (0. = 0.))
	(v2: 0.)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
	(v2: $$number_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(_lvar_124 == 0.)
Gamma: 	
Preds: 
 -------- 
 CMD: sv1 := (m_sgn v1)
----------------------------------
----------------------------------
--8--
TIME: 1.423637
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: 0.)
	(xret: (0. = 0.))
	(v2: 0.)
	(sv1: 1.)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv1: $$number_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(_lvar_124 == 0.)
Gamma: 	
Preds: 
 -------- 
 CMD: sv2 := (m_sgn v2)
----------------------------------
----------------------------------
--9--
TIME: 1.423674
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: 0.)
	(xret: (0. = 0.))
	(v2: 0.)
	(sv2: 1.)
	(sv1: 1.)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv2: $$number_type)
	(sv1: $$number_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(_lvar_124 == 0.)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := (sv1 = sv2)
----------------------------------
----------------------------------
--10--
TIME: 1.423714
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: 0.)
	(xret: $$t)
	(v2: 0.)
	(sv2: 1.)
	(sv1: 1.)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv2: $$number_type)
	(sv1: $$number_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(_lvar_124 == 0.)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 12
----------------------------------
----------------------------------
--12--
TIME: 1.423748
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: 0.)
	(xret: $$t)
	(v2: 0.)
	(sv2: 1.)
	(sv1: 1.)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv2: $$number_type)
	(sv1: $$number_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(_lvar_124 == 0.)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(v1: 0.)
	(xret: $$t)
	(v2: 0.)
	(sv2: 1.)
	(sv1: 1.)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv2: $$number_type)
	(sv1: $$number_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(v1: 0.)
	(xret: $$t)
	(v2: 0.)
	(sv2: 1.)
	(sv1: 1.)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv2: $$number_type)
	(sv1: $$number_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(_lvar_124 == 0.)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(v1: 0.)
	(xret: $$t)
	(v2: 0.)
	(sv2: 1.)
	(sv1: 1.)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv2: $$number_type)
	(sv1: $$number_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(_lvar_124 == 0.)
Gamma: 	
Preds: 

----------------------------------
--6--
TIME: 1.436489
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: 0.)
	(xret: (0. = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_124 == 0.))
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(! (_lvar_124 == 0.))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v2 = 0.)] 7 12
----------------------------------
----------------------------------
--12--
TIME: 1.436559
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: 0.)
	(xret: (0. = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_124 == 0.))
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(! (_lvar_124 == 0.))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(v1: 0.)
	(xret: (0. = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_124 == 0.))
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(v1: 0.)
	(xret: (0. = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_124 == 0.))
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(! (_lvar_124 == 0.))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(v1: 0.)
	(xret: (0. = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_124 == 0.))
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(_lvar_123 == 0.)
	(! (_lvar_124 == 0.))
Gamma: 	
Preds: 

----------------------------------
--5--
TIME: 1.477938
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_123 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_123 == 0.))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v1 = 0.)] 6 12
----------------------------------
----------------------------------
--12--
TIME: 1.477986
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_123 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_123 == 0.))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_123 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_123 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_123 == 0.))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_123 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(typeOf(_lvar_124) == $$number_type)
	(! (_lvar_123 == 0.))
Gamma: 	
Preds: 

----------------------------------
--2--
TIME: 1.491001
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(! (typeOf(_lvar_124) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(! (typeOf(_lvar_124) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
----------------------------------
--12--
TIME: 1.491048
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(! (typeOf(_lvar_124) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(! (typeOf(_lvar_124) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(! (typeOf(_lvar_124) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(! (typeOf(_lvar_124) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(! (typeOf(_lvar_124) == $$number_type))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(! (typeOf(_lvar_124) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(typeOf(_lvar_123) == $$number_type)
	(! (typeOf(_lvar_124) == $$number_type))
Gamma: 	
Preds: 

----------------------------------
--1--
TIME: 1.504638
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(! (typeOf(_lvar_123) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(! (typeOf(_lvar_123) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
----------------------------------
--12--
TIME: 1.504701
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(! (typeOf(_lvar_123) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(! (typeOf(_lvar_123) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(! (typeOf(_lvar_123) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(! (typeOf(_lvar_123) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(! (typeOf(_lvar_123) == $$number_type))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(xret: (_lvar_123 = _lvar_124))
	(v2: _lvar_124)
Pure Formulae: 	
	(! (typeOf(_lvar_123) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_123)
	(v2: _lvar_124)
Pure Formulae: 	
	(! (typeOf(_lvar_123) == $$number_type))
Gamma: 	
Preds: 

Spec Var: #s_0
Spec Var: #s_1
Spec Var: #s_2
Spec Var: #s_3
Spec Var: #s_3
Spec Var: #s_4
Spec Var: #s_5
Spec Var: #s_4
Spec Var: #s_5
Spec Var: #s_6
Spec Var: #s_7
Spec Var: #s_6
Spec Var: #s_7
Spec Var: #s_8
Spec Var: #s_9
Spec Var: #s_8
Spec Var: #s_9
----------------------------------
----------------------------------
Symbolic execution of create_default_object
----------------------------------
--0--
TIME: 1.516782
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(cl = $$undefined)] 1 2
----------------------------------
I found the model: 

(define-fun _lvar_125 () Extended_JSIL_Literal
  (Set (_ as-array k!320)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!320 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_125 () Extended_JSIL_Literal
  (Elem Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--0--
TIME: 1.540656
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(cl: _lvar_125)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(cl: _lvar_125)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(cl = $$undefined)] 1 2
----------------------------------
----------------------------------
--1--
TIME: 1.540793
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(cl: $$undefined)
Pure Formulae: 	
Gamma: 	
	(cl: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(cl: _lvar_125)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: cl := "Object"
----------------------------------
----------------------------------
--2--
TIME: 1.540891
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(cl: \"Object\")
Pure Formulae: 	
Gamma: 	
	(cl: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(cl: _lvar_125)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
I found the model: 

(define-fun _lvar_126 () Extended_JSIL_Literal
  (Set (_ as-array k!329)))
(define-fun k!329 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_126 () Extended_JSIL_Literal
  (Elem Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--2--
TIME: 1.562262
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(ext: _lvar_126)
	(cl: \"Object\")
Pure Formulae: 	
	(_lvar_126 == $$undefined)
Gamma: 	
	(cl: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(ext: _lvar_126)
	(cl: _lvar_125)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(_lvar_126 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
----------------------------------
--3--
TIME: 1.562361
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(ext: $$undefined)
	(cl: \"Object\")
Pure Formulae: 	
Gamma: 	
	(ext: $$undefined_type)
	(cl: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(ext: _lvar_126)
	(cl: _lvar_125)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(_lvar_126 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: ext := $$t
----------------------------------
----------------------------------
--4--
TIME: 1.562416
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(ext: $$t)
	(cl: \"Object\")
Pure Formulae: 	
Gamma: 	
	(ext: $$boolean_type)
	(cl: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(ext: _lvar_126)
	(cl: _lvar_125)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(_lvar_126 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@proto"] := pr
----------------------------------
Updtate-abs-heap. loc: _$l_0. field:"@proto". v:_lvar_128----------------------------------
--5--
TIME: 1.562496
 ---- STATE: ---- 
Heap: 
	_$l_0 |-> [(\"@proto\": _lvar_128), (default: $$unknown)]
Store: 	
	(pr: _lvar_128)
	(ext: $$t)
	(cl: \"Object\")
	(l: _$l_0)
Pure Formulae: 	
Gamma: 	
	(ext: $$boolean_type)
	(cl: $$string_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_0 |-> [(\"@proto\": _lvar_130), (default: $$unknown)]
Store: 	
	(pr: _lvar_128)
	(ext: _lvar_126)
	(cl: _lvar_125)
	(l: _lvar_127)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(_lvar_126 == $$undefined)
	(_$l_0 == _lvar_127)
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@class"] := cl
----------------------------------
Updtate-abs-heap. loc: _$l_0. field:"@class". v:"Object"----------------------------------
--6--
TIME: 1.562559
 ---- STATE: ---- 
Heap: 
	_$l_0 |-> [(\"@class\": \"Object\"), (\"@proto\": _lvar_128), (default: $$unknown)]
Store: 	
	(pr: _lvar_128)
	(ext: $$t)
	(cl: \"Object\")
	(l: _$l_0)
Pure Formulae: 	
Gamma: 	
	(ext: $$boolean_type)
	(cl: $$string_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_0 |-> [(\"@class\": _lvar_131), (\"@proto\": _lvar_130), (default: $$unknown)]
Store: 	
	(pr: _lvar_128)
	(ext: _lvar_126)
	(cl: _lvar_125)
	(l: _lvar_127)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(_lvar_126 == $$undefined)
	(_$l_0 == _lvar_127)
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@extensible"] := ext
----------------------------------
Updtate-abs-heap. loc: _$l_0. field:"@extensible". v:$$t----------------------------------
--7--
TIME: 1.562621
 ---- STATE: ---- 
Heap: 
	_$l_0 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": _lvar_128), (default: $$unknown)]
Store: 	
	(pr: _lvar_128)
	(ext: $$t)
	(cl: \"Object\")
	(l: _$l_0)
Pure Formulae: 	
Gamma: 	
	(ext: $$boolean_type)
	(cl: $$string_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_0 |-> [(\"@extensible\": _lvar_132), (\"@class\": _lvar_131), (\"@proto\": _lvar_130), (default: $$unknown)]
Store: 	
	(pr: _lvar_128)
	(ext: _lvar_126)
	(cl: _lvar_125)
	(l: _lvar_127)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(_lvar_126 == $$undefined)
	(_$l_0 == _lvar_127)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := l
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_0 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": _lvar_128), (default: $$unknown)]
Store: 	
	(pr: _lvar_128)
	(ext: $$t)
	(xret: _$l_0)
	(cl: \"Object\")
	(l: _$l_0)
Pure Formulae: 	
Gamma: 	
	(ext: $$boolean_type)
	(xret: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_0 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": _lvar_128), (default: $$unknown)]
Store: 	
	(pr: _lvar_128)
	(ext: $$t)
	(xret: _$l_0)
	(cl: \"Object\")
	(l: _$l_0)
Pure Formulae: 	
Gamma: 	
	(ext: $$boolean_type)
	(xret: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_0 |-> [(\"@extensible\": _lvar_132), (\"@class\": _lvar_131), (\"@proto\": _lvar_130), (default: $$unknown)]
Store: 	
	(pr: _lvar_128)
	(ext: _lvar_126)
	(cl: _lvar_125)
	(l: _lvar_127)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(_lvar_126 == $$undefined)
	(_$l_0 == _lvar_127)
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_0 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": _lvar_128), (default: $$unknown)]
Store: 	
	(pr: _lvar_128)
	(ext: $$t)
	(xret: _$l_0)
	(cl: \"Object\")
	(l: _$l_0)
Pure Formulae: 	
Gamma: 	
	(ext: $$boolean_type)
	(xret: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_0 |-> [(\"@extensible\": _lvar_132), (\"@class\": _lvar_131), (\"@proto\": _lvar_130), (default: $$unknown)]
Store: 	
	(pr: _lvar_128)
	(ext: _lvar_126)
	(cl: _lvar_125)
	(l: _lvar_127)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(_lvar_126 == $$undefined)
	(_$l_0 == _lvar_127)
Gamma: 	
Preds: 

----------------------------------
--2--
TIME: 1.562942
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(ext: _lvar_126)
	(cl: \"Object\")
Pure Formulae: 	
	(! (_lvar_126 == $$undefined))
Gamma: 	
	(cl: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(ext: _lvar_126)
	(cl: _lvar_125)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(! (_lvar_126 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
----------------------------------
--4--
TIME: 1.563001
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(ext: _lvar_126)
	(cl: \"Object\")
Pure Formulae: 	
	(! (_lvar_126 == $$undefined))
Gamma: 	
	(cl: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(ext: _lvar_126)
	(cl: _lvar_125)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(! (_lvar_126 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@proto"] := pr
----------------------------------
Updtate-abs-heap. loc: _$l_1. field:"@proto". v:_lvar_134----------------------------------
--5--
TIME: 1.563073
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@proto\": _lvar_134), (default: $$unknown)]
Store: 	
	(pr: _lvar_134)
	(ext: _lvar_126)
	(cl: \"Object\")
	(l: _$l_1)
Pure Formulae: 	
	(! (_lvar_126 == $$undefined))
Gamma: 	
	(cl: $$string_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@proto\": _lvar_136), (default: $$unknown)]
Store: 	
	(pr: _lvar_134)
	(ext: _lvar_126)
	(cl: _lvar_125)
	(l: _lvar_133)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(! (_lvar_126 == $$undefined))
	(_$l_1 == _lvar_133)
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@class"] := cl
----------------------------------
Updtate-abs-heap. loc: _$l_1. field:"@class". v:"Object"----------------------------------
--6--
TIME: 1.563144
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@class\": \"Object\"), (\"@proto\": _lvar_134), (default: $$unknown)]
Store: 	
	(pr: _lvar_134)
	(ext: _lvar_126)
	(cl: \"Object\")
	(l: _$l_1)
Pure Formulae: 	
	(! (_lvar_126 == $$undefined))
Gamma: 	
	(cl: $$string_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@class\": _lvar_137), (\"@proto\": _lvar_136), (default: $$unknown)]
Store: 	
	(pr: _lvar_134)
	(ext: _lvar_126)
	(cl: _lvar_125)
	(l: _lvar_133)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(! (_lvar_126 == $$undefined))
	(_$l_1 == _lvar_133)
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@extensible"] := ext
----------------------------------
Updtate-abs-heap. loc: _$l_1. field:"@extensible". v:_lvar_126----------------------------------
--7--
TIME: 1.563209
 ---- STATE: ---- 
Heap: 
	_$l_1 |-> [(\"@extensible\": _lvar_126), (\"@class\": \"Object\"), (\"@proto\": _lvar_134), (default: $$unknown)]
Store: 	
	(pr: _lvar_134)
	(ext: _lvar_126)
	(cl: \"Object\")
	(l: _$l_1)
Pure Formulae: 	
	(! (_lvar_126 == $$undefined))
Gamma: 	
	(cl: $$string_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_1 |-> [(\"@extensible\": _lvar_138), (\"@class\": _lvar_137), (\"@proto\": _lvar_136), (default: $$unknown)]
Store: 	
	(pr: _lvar_134)
	(ext: _lvar_126)
	(cl: _lvar_125)
	(l: _lvar_133)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(! (_lvar_126 == $$undefined))
	(_$l_1 == _lvar_133)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := l
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_1 |-> [(\"@extensible\": _lvar_126), (\"@class\": \"Object\"), (\"@proto\": _lvar_134), (default: $$unknown)]
Store: 	
	(pr: _lvar_134)
	(ext: _lvar_126)
	(xret: _$l_1)
	(cl: \"Object\")
	(l: _$l_1)
Pure Formulae: 	
	(! (_lvar_126 == $$undefined))
Gamma: 	
	(xret: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_1 |-> [(\"@extensible\": _lvar_126), (\"@class\": \"Object\"), (\"@proto\": _lvar_134), (default: $$unknown)]
Store: 	
	(pr: _lvar_134)
	(ext: _lvar_126)
	(xret: _$l_1)
	(cl: \"Object\")
	(l: _$l_1)
Pure Formulae: 	
	(! (_lvar_126 == $$undefined))
Gamma: 	
	(xret: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_1 |-> [(\"@extensible\": _lvar_138), (\"@class\": _lvar_137), (\"@proto\": _lvar_136), (default: $$unknown)]
Store: 	
	(pr: _lvar_134)
	(ext: _lvar_126)
	(cl: _lvar_125)
	(l: _lvar_133)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(! (_lvar_126 == $$undefined))
	(_$l_1 == _lvar_133)
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_1 |-> [(\"@extensible\": _lvar_126), (\"@class\": \"Object\"), (\"@proto\": _lvar_134), (default: $$unknown)]
Store: 	
	(pr: _lvar_134)
	(ext: _lvar_126)
	(xret: _$l_1)
	(cl: \"Object\")
	(l: _$l_1)
Pure Formulae: 	
	(! (_lvar_126 == $$undefined))
Gamma: 	
	(xret: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_1 |-> [(\"@extensible\": _lvar_138), (\"@class\": _lvar_137), (\"@proto\": _lvar_136), (default: $$unknown)]
Store: 	
	(pr: _lvar_134)
	(ext: _lvar_126)
	(cl: _lvar_125)
	(l: _lvar_133)
Pure Formulae: 	
	(_lvar_125 == $$undefined)
	(! (_lvar_126 == $$undefined))
	(_$l_1 == _lvar_133)
Gamma: 	
Preds: 

----------------------------------
--0--
TIME: 1.573959
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(cl = $$undefined)] 1 2
----------------------------------
----------------------------------
--2--
TIME: 1.574014
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
I found the model: 

(define-fun _lvar_125 () Extended_JSIL_Literal
  (Set (_ as-array k!342)))
(define-fun _lvar_139 () Extended_JSIL_Literal
  (Set (_ as-array k!343)))
(define-fun k!342 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun k!343 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_139 () Extended_JSIL_Literal
  (Elem Undefined))
(define-fun _lvar_125 () Extended_JSIL_Literal
  (Set (_ as-array k!349)))
(define-fun k!349 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--2--
TIME: 1.611606
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(ext: _lvar_139)
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(_lvar_139 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(ext: _lvar_139)
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(_lvar_139 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
----------------------------------
--3--
TIME: 1.611695
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(ext: $$undefined)
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
	(ext: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(ext: _lvar_139)
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(_lvar_139 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: ext := $$t
----------------------------------
----------------------------------
--4--
TIME: 1.611753
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(ext: $$t)
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
	(ext: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(ext: _lvar_139)
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(_lvar_139 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@proto"] := pr
----------------------------------
Updtate-abs-heap. loc: _$l_2. field:"@proto". v:_lvar_141----------------------------------
--5--
TIME: 1.611831
 ---- STATE: ---- 
Heap: 
	_$l_2 |-> [(\"@proto\": _lvar_141), (default: $$unknown)]
Store: 	
	(pr: _lvar_141)
	(ext: $$t)
	(cl: _lvar_125)
	(l: _$l_2)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
	(ext: $$boolean_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_2 |-> [(\"@proto\": _lvar_143), (default: $$unknown)]
Store: 	
	(pr: _lvar_141)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _lvar_140)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(_lvar_139 == $$undefined)
	(_$l_2 == _lvar_140)
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@class"] := cl
----------------------------------
Updtate-abs-heap. loc: _$l_2. field:"@class". v:_lvar_125----------------------------------
--6--
TIME: 1.611897
 ---- STATE: ---- 
Heap: 
	_$l_2 |-> [(\"@class\": _lvar_125), (\"@proto\": _lvar_141), (default: $$unknown)]
Store: 	
	(pr: _lvar_141)
	(ext: $$t)
	(cl: _lvar_125)
	(l: _$l_2)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
	(ext: $$boolean_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_2 |-> [(\"@class\": _lvar_144), (\"@proto\": _lvar_143), (default: $$unknown)]
Store: 	
	(pr: _lvar_141)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _lvar_140)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(_lvar_139 == $$undefined)
	(_$l_2 == _lvar_140)
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@extensible"] := ext
----------------------------------
Updtate-abs-heap. loc: _$l_2. field:"@extensible". v:$$t----------------------------------
--7--
TIME: 1.611977
 ---- STATE: ---- 
Heap: 
	_$l_2 |-> [(\"@extensible\": $$t), (\"@class\": _lvar_125), (\"@proto\": _lvar_141), (default: $$unknown)]
Store: 	
	(pr: _lvar_141)
	(ext: $$t)
	(cl: _lvar_125)
	(l: _$l_2)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
	(ext: $$boolean_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_2 |-> [(\"@extensible\": _lvar_145), (\"@class\": _lvar_144), (\"@proto\": _lvar_143), (default: $$unknown)]
Store: 	
	(pr: _lvar_141)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _lvar_140)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(_lvar_139 == $$undefined)
	(_$l_2 == _lvar_140)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := l
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_2 |-> [(\"@extensible\": $$t), (\"@class\": _lvar_125), (\"@proto\": _lvar_141), (default: $$unknown)]
Store: 	
	(pr: _lvar_141)
	(ext: $$t)
	(xret: _$l_2)
	(cl: _lvar_125)
	(l: _$l_2)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
	(ext: $$boolean_type)
	(xret: $$object_type)
	(l: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_2 |-> [(\"@extensible\": $$t), (\"@class\": _lvar_125), (\"@proto\": _lvar_141), (default: $$unknown)]
Store: 	
	(pr: _lvar_141)
	(ext: $$t)
	(xret: _$l_2)
	(cl: _lvar_125)
	(l: _$l_2)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
	(ext: $$boolean_type)
	(xret: $$object_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_2 |-> [(\"@extensible\": _lvar_145), (\"@class\": _lvar_144), (\"@proto\": _lvar_143), (default: $$unknown)]
Store: 	
	(pr: _lvar_141)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _lvar_140)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(_lvar_139 == $$undefined)
	(_$l_2 == _lvar_140)
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_2 |-> [(\"@extensible\": $$t), (\"@class\": _lvar_125), (\"@proto\": _lvar_141), (default: $$unknown)]
Store: 	
	(pr: _lvar_141)
	(ext: $$t)
	(xret: _$l_2)
	(cl: _lvar_125)
	(l: _$l_2)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
Gamma: 	
	(ext: $$boolean_type)
	(xret: $$object_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_2 |-> [(\"@extensible\": _lvar_145), (\"@class\": _lvar_144), (\"@proto\": _lvar_143), (default: $$unknown)]
Store: 	
	(pr: _lvar_141)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _lvar_140)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(_lvar_139 == $$undefined)
	(_$l_2 == _lvar_140)
Gamma: 	
Preds: 

----------------------------------
--2--
TIME: 1.621073
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(ext: _lvar_139)
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(ext: _lvar_139)
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
----------------------------------
--4--
TIME: 1.621118
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(ext: _lvar_139)
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(ext: _lvar_139)
	(cl: _lvar_125)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@proto"] := pr
----------------------------------
Updtate-abs-heap. loc: _$l_3. field:"@proto". v:_lvar_147----------------------------------
--5--
TIME: 1.621163
 ---- STATE: ---- 
Heap: 
	_$l_3 |-> [(\"@proto\": _lvar_147), (default: $$unknown)]
Store: 	
	(pr: _lvar_147)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _$l_3)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
Gamma: 	
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_3 |-> [(\"@proto\": _lvar_149), (default: $$unknown)]
Store: 	
	(pr: _lvar_147)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _lvar_146)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
	(_$l_3 == _lvar_146)
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@class"] := cl
----------------------------------
Updtate-abs-heap. loc: _$l_3. field:"@class". v:_lvar_125----------------------------------
--6--
TIME: 1.621214
 ---- STATE: ---- 
Heap: 
	_$l_3 |-> [(\"@class\": _lvar_125), (\"@proto\": _lvar_147), (default: $$unknown)]
Store: 	
	(pr: _lvar_147)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _$l_3)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
Gamma: 	
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_3 |-> [(\"@class\": _lvar_150), (\"@proto\": _lvar_149), (default: $$unknown)]
Store: 	
	(pr: _lvar_147)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _lvar_146)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
	(_$l_3 == _lvar_146)
Gamma: 	
Preds: 
 -------- 
 CMD: [l, "@extensible"] := ext
----------------------------------
Updtate-abs-heap. loc: _$l_3. field:"@extensible". v:_lvar_139----------------------------------
--7--
TIME: 1.621251
 ---- STATE: ---- 
Heap: 
	_$l_3 |-> [(\"@extensible\": _lvar_139), (\"@class\": _lvar_125), (\"@proto\": _lvar_147), (default: $$unknown)]
Store: 	
	(pr: _lvar_147)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _$l_3)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
Gamma: 	
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_3 |-> [(\"@extensible\": _lvar_151), (\"@class\": _lvar_150), (\"@proto\": _lvar_149), (default: $$unknown)]
Store: 	
	(pr: _lvar_147)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _lvar_146)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
	(_$l_3 == _lvar_146)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := l
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_3 |-> [(\"@extensible\": _lvar_139), (\"@class\": _lvar_125), (\"@proto\": _lvar_147), (default: $$unknown)]
Store: 	
	(pr: _lvar_147)
	(ext: _lvar_139)
	(xret: _$l_3)
	(cl: _lvar_125)
	(l: _$l_3)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_3 |-> [(\"@extensible\": _lvar_139), (\"@class\": _lvar_125), (\"@proto\": _lvar_147), (default: $$unknown)]
Store: 	
	(pr: _lvar_147)
	(ext: _lvar_139)
	(xret: _$l_3)
	(cl: _lvar_125)
	(l: _$l_3)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_3 |-> [(\"@extensible\": _lvar_151), (\"@class\": _lvar_150), (\"@proto\": _lvar_149), (default: $$unknown)]
Store: 	
	(pr: _lvar_147)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _lvar_146)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
	(_$l_3 == _lvar_146)
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_3 |-> [(\"@extensible\": _lvar_139), (\"@class\": _lvar_125), (\"@proto\": _lvar_147), (default: $$unknown)]
Store: 	
	(pr: _lvar_147)
	(ext: _lvar_139)
	(xret: _$l_3)
	(cl: _lvar_125)
	(l: _$l_3)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_3 |-> [(\"@extensible\": _lvar_151), (\"@class\": _lvar_150), (\"@proto\": _lvar_149), (default: $$unknown)]
Store: 	
	(pr: _lvar_147)
	(ext: _lvar_139)
	(cl: _lvar_125)
	(l: _lvar_146)
Pure Formulae: 	
	(! (_lvar_125 == $$undefined))
	(! (_lvar_139 == $$undefined))
	(_$l_3 == _lvar_146)
Gamma: 	
Preds: 

Spec Var: #s_10
Spec Var: #s_11
Spec Var: #s_12
Spec Var: #s_13
Spec Var: #s_14
Spec Var: #s_15
Spec Var: #s_16
Spec Var: #s_13
Spec Var: #s_17
Spec Var: #s_18
Spec Var: #s_19
Spec Var: #s_20
Spec Var: #s_21
Spec Var: #s_22
Spec Var: #s_23
Spec Var: #s_18
Spec Var: #s_20
Spec Var: #s_24
Spec Var: #s_25
Spec Var: #s_26
Spec Var: #s_27
Spec Var: #s_28
Spec Var: #s_29
Spec Var: #s_30
Spec Var: #s_24
Spec Var: #s_27
Spec Var: #s_31
Spec Var: #s_32
Spec Var: #s_33
Spec Var: #s_34
Spec Var: #s_35
Spec Var: #s_36
Spec Var: #s_37
Spec Var: #s_31
Spec Var: #s_32
Spec Var: #s_34
----------------------------------
----------------------------------
Symbolic execution of create_object_with_call_construct
----------------------------------
--0--
TIME: 1.631197
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "create_default_object"(l, $lfun_proto, "Function", $$t) 
----------------------------------
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
anti_frame heap: 
	_$l_2 |-> [("@extensible": #s_30), ("@class": #s_29), ("@proto": #s_28), (default: $$unknown)]
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I found the model: 

(define-fun _lvar_152 () Extended_JSIL_Literal
  (Elem (Loc 0)))
(define-fun _$l_3 () Extended_JSIL_Literal
  (Set (_ as-array k!361)))
(define-fun k!361 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
anti_frame heap: 
	_$l_3 |-> [("@extensible": #s_37), ("@class": #s_36), ("@proto": #s_35), (default: $$unknown)]
----------------------------------
--1--
TIME: 1.642878
 ---- STATE: ---- 
Heap: 
	_$l_4 |-> [(\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(l: _$l_4)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_4 |-> [(\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(l: _lvar_152)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 
 -------- 
 CMD: [xret, "@scope"] := $$empty
----------------------------------
Updtate-abs-heap. loc: _$l_4. field:"@scope". v:$$empty----------------------------------
--2--
TIME: 1.642951
 ---- STATE: ---- 
Heap: 
	_$l_4 |-> [(\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(l: _$l_4)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_4 |-> [(\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(l: _lvar_152)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 
 -------- 
 CMD: [xret, "length"] := {{ "d", len, $$f, $$f, $$f }}
----------------------------------
Updtate-abs-heap. loc: _$l_4. field:"length". v:{{ "d", _lvar_166, $$f, $$f, $$f }}----------------------------------
--3--
TIME: 1.643022
 ---- STATE: ---- 
Heap: 
	_$l_4 |-> [(\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(l: _$l_4)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_4 |-> [(\"length\": _lvar_167), (\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(len: _lvar_166)
	(l: _lvar_152)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 
 -------- 
 CMD: [xret, "@call"] := call
----------------------------------
Updtate-abs-heap. loc: _$l_4. field:"@call". v:_lvar_168----------------------------------
--4--
TIME: 1.643113
 ---- STATE: ---- 
Heap: 
	_$l_4 |-> [(\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_4 |-> [(\"@call\": _lvar_169), (\"length\": _lvar_167), (\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _lvar_152)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 
 -------- 
 CMD: goto [(construct = $$empty)] 6 5
----------------------------------
I found the model: 

(define-fun _lvar_170 () Extended_JSIL_Literal
  (Set (_ as-array k!366)))
(define-fun k!366 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_170 () Extended_JSIL_Literal
  (Elem Empty))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--4--
TIME: 1.672082
 ---- STATE: ---- 
Heap: 
	_$l_4 |-> [(\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
	(construct: _lvar_170)
Pure Formulae: 	
	(_lvar_170 == $$empty)
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_4 |-> [(\"@call\": _lvar_169), (\"length\": _lvar_167), (\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _lvar_152)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
	(_lvar_170 == $$empty)
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 
 -------- 
 CMD: goto [(construct = $$empty)] 6 5
----------------------------------
----------------------------------
--6--
TIME: 1.672228
 ---- STATE: ---- 
Heap: 
	_$l_4 |-> [(\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
	(construct: $$empty)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
	(construct: $$empty_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_4 |-> [(\"@call\": _lvar_169), (\"length\": _lvar_167), (\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _lvar_152)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
	(_lvar_170 == $$empty)
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 
 -------- 
 CMD: xret := l
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_4 |-> [(\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
	(construct: $$empty)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
	(construct: $$empty_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_4 |-> [(\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
	(construct: $$empty)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
	(construct: $$empty_type)
Preds: 

anti_frame: Heap: 
	_$l_4 |-> [(\"@call\": _lvar_169), (\"length\": _lvar_167), (\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _lvar_152)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
	(_lvar_170 == $$empty)
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 

Symb_state: Heap: 
	_$l_4 |-> [(\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
	(construct: $$empty)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
	(construct: $$empty_type)
Preds: 

anti_frame: Heap: 
	_$l_4 |-> [(\"@call\": _lvar_169), (\"length\": _lvar_167), (\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _lvar_152)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
	(_lvar_170 == $$empty)
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 

----------------------------------
--4--
TIME: 1.672567
 ---- STATE: ---- 
Heap: 
	_$l_4 |-> [(\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (_lvar_170 == $$empty))
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_4 |-> [(\"@call\": _lvar_169), (\"length\": _lvar_167), (\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _lvar_152)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
	(! (_lvar_170 == $$empty))
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 
 -------- 
 CMD: goto [(construct = $$empty)] 6 5
----------------------------------
----------------------------------
--5--
TIME: 1.672673
 ---- STATE: ---- 
Heap: 
	_$l_4 |-> [(\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (_lvar_170 == $$empty))
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_4 |-> [(\"@call\": _lvar_169), (\"length\": _lvar_167), (\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _lvar_152)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
	(! (_lvar_170 == $$empty))
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 
 -------- 
 CMD: [xret, "@construct"] := construct
----------------------------------
Updtate-abs-heap. loc: _$l_4. field:"@construct". v:_lvar_170----------------------------------
--6--
TIME: 1.672767
 ---- STATE: ---- 
Heap: 
	_$l_4 |-> [(\"@construct\": _lvar_170), (\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (_lvar_170 == $$empty))
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_4 |-> [(\"@construct\": _lvar_171), (\"@call\": _lvar_169), (\"length\": _lvar_167), (\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _lvar_152)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
	(! (_lvar_170 == $$empty))
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 
 -------- 
 CMD: xret := l
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_4 |-> [(\"@construct\": _lvar_170), (\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (_lvar_170 == $$empty))
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_4 |-> [(\"@construct\": _lvar_170), (\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (_lvar_170 == $$empty))
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_4 |-> [(\"@construct\": _lvar_171), (\"@call\": _lvar_169), (\"length\": _lvar_167), (\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _lvar_152)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
	(! (_lvar_170 == $$empty))
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 

Symb_state: Heap: 
	_$l_4 |-> [(\"@construct\": _lvar_170), (\"@call\": _lvar_168), (\"length\": {{ \"d\", _lvar_166, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _$l_4)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (_lvar_170 == $$empty))
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_4 |-> [(\"@construct\": _lvar_171), (\"@call\": _lvar_169), (\"length\": _lvar_167), (\"@scope\": _lvar_165), (\"@extensible\": _lvar_164), (\"@class\": _lvar_163), (\"@proto\": _lvar_162), (default: $$unknown)]
Store: 	
	(len: _lvar_166)
	(call: _lvar_168)
	(l: _lvar_152)
	(construct: _lvar_170)
Pure Formulae: 	
	(! (\"Function\" == $$undefined))
	(! ($$t == $$undefined))
	(_lvar_152 == _$l_4)
	(! (_lvar_170 == $$empty))
Gamma: 	
	(_lvar_152: $$object_type)
Preds: 

Spec Var: #s_38
Spec Var: #s_39
Spec Var: #s_40
Spec Var: #s_41
Spec Var: #s_42
Spec Var: #s_43
Spec Var: #s_44
Spec Var: #s_45
Spec Var: #s_46
Spec Var: #s_47
Spec Var: #s_43
Spec Var: #s_45
Spec Var: construct
Spec Var: #s_48
Spec Var: #s_49
Spec Var: #s_50
Spec Var: #s_51
Spec Var: #s_52
Spec Var: #s_53
Spec Var: #s_54
Spec Var: #s_55
Spec Var: #s_56
Spec Var: #s_57
Spec Var: #s_58
Spec Var: #s_53
Spec Var: #s_55
Spec Var: #s_57
----------------------------------
----------------------------------
Symbolic execution of setupInitialHeap
----------------------------------
--0--
TIME: 1.682588
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "create_default_object"($lg, $lobj_proto, "Object", $$t) 
----------------------------------
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
anti_frame heap: 
	_$l_2 |-> [("@extensible": #s_30), ("@class": #s_29), ("@proto": #s_28), (default: $$unknown)]
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I found the model: 

(define-fun _$l_3 () Extended_JSIL_Literal
  (Set (_ as-array k!378)))
(define-fun k!378 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
anti_frame heap: 
	_$l_3 |-> [("@extensible": #s_37), ("@class": #s_36), ("@proto": #s_35), (default: $$unknown)]
----------------------------------
--1--
TIME: 1.702550
 ---- STATE: ---- 
Heap: 
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_6)
Pure Formulae: 	
	($lg == _$l_6)
Gamma: 	
	(xret: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_6 |-> [(\"@extensible\": _lvar_183), (\"@class\": _lvar_182), (\"@proto\": _lvar_181), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lg == _$l_6)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "create_default_object"($lobj_proto, $$null, "Object", $$t) 
----------------------------------
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
anti_frame heap: 
	_$l_2 |-> [("@extensible": #s_30), ("@class": #s_29), ("@proto": #s_28), (default: $$unknown)]
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I found the model: 

(define-fun _$l_6 () Extended_JSIL_Literal
  (Elem (Loc 10)))
(define-fun _$l_3 () Extended_JSIL_Literal
  (Set (_ as-array k!385)))
(define-fun k!385 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
anti_frame heap: 
	_$l_3 |-> [("@extensible": #s_37), ("@class": #s_36), ("@proto": #s_35), (default: $$unknown)]
----------------------------------
--2--
TIME: 1.730757
 ---- STATE: ---- 
Heap: 
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: _$l_8)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
Gamma: 	
	(xret: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_6 |-> [(\"@extensible\": _lvar_183), (\"@class\": _lvar_182), (\"@proto\": _lvar_181), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": _lvar_195), (\"@class\": _lvar_194), (\"@proto\": _lvar_193), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lobj_proto == _$l_8)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lg == _$l_6)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "create_object_with_call_construct"($lfun_proto, "FP_default", $$empty, 0.) 
----------------------------------
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I found the model: 

(define-fun _$l_6 () Extended_JSIL_Literal
  (Elem (Loc 10)))
(define-fun _$l_4 () Extended_JSIL_Literal
  (Set (_ as-array k!392)))
(define-fun _$l_8 () Extended_JSIL_Literal
  (Elem (Loc 11)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!392 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
anti_frame heap: 
	_$l_4 |-> [("@call": #s_46), ("length": #s_44), ("@scope": #s_42), ("@extensible": #s_41), ("@class": #s_40), ("@proto": #s_39), (default: $$unknown)]
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
anti_frame heap: 
	_$l_4 |-> [("@construct": #s_58), ("@call": #s_56), ("length": #s_54), ("@scope": #s_52), ("@extensible": #s_51), ("@class": #s_50), ("@proto": #s_49), (default: $$unknown)]
----------------------------------
--3--
TIME: 1.751037
 ---- STATE: ---- 
Heap: 
	_$l_11 |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: _$l_11)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
	($lfun_proto == _$l_11)
Gamma: 	
	(xret: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_6 |-> [(\"@extensible\": _lvar_183), (\"@class\": _lvar_182), (\"@proto\": _lvar_181), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": _lvar_195), (\"@class\": _lvar_194), (\"@proto\": _lvar_193), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": _lvar_201), (\"length\": _lvar_200), (\"@scope\": _lvar_199), (\"@extensible\": _lvar_198), (\"@class\": _lvar_197), (\"@proto\": _lvar_196), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	($$empty == $$empty)
	($lfun_proto == _$l_11)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lobj_proto == _$l_8)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lg == _$l_6)
Gamma: 	
Preds: 
 -------- 
 CMD: [$lfun_proto, "@proto"] := $lobj_proto
----------------------------------
Updtate-abs-heap. loc: $lfun_proto. field:"@proto". v:$lobj_proto----------------------------------
--4--
TIME: 1.751446
 ---- STATE: ---- 
Heap: 
	_$l_11 |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: _$l_11)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
	($lfun_proto == _$l_11)
Gamma: 	
	(xret: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	$lfun_proto |-> [(\"@proto\": _lvar_210), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": _lvar_183), (\"@class\": _lvar_182), (\"@proto\": _lvar_181), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": _lvar_195), (\"@class\": _lvar_194), (\"@proto\": _lvar_193), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": _lvar_201), (\"length\": _lvar_200), (\"@scope\": _lvar_199), (\"@extensible\": _lvar_198), (\"@class\": _lvar_197), (\"@proto\": _lvar_196), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	($$empty == $$empty)
	($lfun_proto == _$l_11)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lobj_proto == _$l_8)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lg == _$l_6)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "create_object_with_call_construct"($lerr, "Error_call", "Error_construct", 1.) 
----------------------------------
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
anti_frame heap: 
	_$l_4 |-> [("@call": #s_46), ("length": #s_44), ("@scope": #s_42), ("@extensible": #s_41), ("@class": #s_40), ("@proto": #s_39), (default: $$unknown)]
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I found the model: 

(define-fun _$l_11 () Extended_JSIL_Literal
  (Elem (Loc 12)))
(define-fun _$l_6 () Extended_JSIL_Literal
  (Elem (Loc 10)))
(define-fun _$l_4 () Extended_JSIL_Literal
  (Set (_ as-array k!399)))
(define-fun _$l_8 () Extended_JSIL_Literal
  (Elem (Loc 11)))
(define-fun k!399 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
anti_frame heap: 
	_$l_4 |-> [("@construct": #s_58), ("@call": #s_56), ("length": #s_54), ("@scope": #s_52), ("@extensible": #s_51), ("@class": #s_50), ("@proto": #s_49), (default: $$unknown)]
----------------------------------
--5--
TIME: 1.774908
 ---- STATE: ---- 
Heap: 
	_$l_12 |-> [(\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: _$l_12)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
	($lfun_proto == _$l_11)
	($lerr == _$l_12)
Gamma: 	
	(xret: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	$lfun_proto |-> [(\"@proto\": _lvar_210), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": _lvar_183), (\"@class\": _lvar_182), (\"@proto\": _lvar_181), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": _lvar_223), (\"@call\": _lvar_222), (\"length\": _lvar_221), (\"@scope\": _lvar_220), (\"@extensible\": _lvar_219), (\"@class\": _lvar_218), (\"@proto\": _lvar_217), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": _lvar_195), (\"@class\": _lvar_194), (\"@proto\": _lvar_193), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": _lvar_201), (\"length\": _lvar_200), (\"@scope\": _lvar_199), (\"@extensible\": _lvar_198), (\"@class\": _lvar_197), (\"@proto\": _lvar_196), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	(! (\"Error_construct\" == $$empty))
	($lerr == _$l_12)
	($$empty == $$empty)
	($lfun_proto == _$l_11)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lobj_proto == _$l_8)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lg == _$l_6)
Gamma: 	
Preds: 
 -------- 
 CMD: [$lg, "Error"] := {{ "d", $lerr, $$t, $$f, $$t }}
----------------------------------
Updtate-abs-heap. loc: $lg. field:"Error". v:{{ "d", $lerr, $$t, $$f, $$t }}----------------------------------
--6--
TIME: 1.783550
 ---- STATE: ---- 
Heap: 
	_$l_12 |-> [(\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: _$l_12)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
	($lfun_proto == _$l_11)
	($lerr == _$l_12)
Gamma: 	
	(xret: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	$lfun_proto |-> [(\"@proto\": _lvar_210), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": _lvar_183), (\"@class\": _lvar_182), (\"@proto\": _lvar_181), (default: $$unknown)]
	$lg |-> [(\"Error\": _lvar_224), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": _lvar_223), (\"@call\": _lvar_222), (\"length\": _lvar_221), (\"@scope\": _lvar_220), (\"@extensible\": _lvar_219), (\"@class\": _lvar_218), (\"@proto\": _lvar_217), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": _lvar_195), (\"@class\": _lvar_194), (\"@proto\": _lvar_193), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": _lvar_201), (\"length\": _lvar_200), (\"@scope\": _lvar_199), (\"@extensible\": _lvar_198), (\"@class\": _lvar_197), (\"@proto\": _lvar_196), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	(! (\"Error_construct\" == $$empty))
	($lerr == _$l_12)
	($$empty == $$empty)
	($lfun_proto == _$l_11)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lobj_proto == _$l_8)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lg == _$l_6)
Gamma: 	
Preds: 
 -------- 
 CMD: [$lerr, "prototype"] := {{ "d", $lerr_proto, $$f, $$f, $$f }}
----------------------------------
Updtate-abs-heap. loc: $lerr. field:"prototype". v:{{ "d", $lerr_proto, $$f, $$f, $$f }}----------------------------------
--7--
TIME: 1.783736
 ---- STATE: ---- 
Heap: 
	_$l_12 |-> [(\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (default: $$unknown)]
	$lerr |-> [(\"prototype\": {{ \"d\", $lerr_proto, $$f, $$f, $$f }}), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: _$l_12)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
	($lfun_proto == _$l_11)
	($lerr == _$l_12)
Gamma: 	
	(xret: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	$lfun_proto |-> [(\"@proto\": _lvar_210), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": _lvar_183), (\"@class\": _lvar_182), (\"@proto\": _lvar_181), (default: $$unknown)]
	$lg |-> [(\"Error\": _lvar_224), (default: $$unknown)]
	$lerr |-> [(\"prototype\": _lvar_225), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": _lvar_223), (\"@call\": _lvar_222), (\"length\": _lvar_221), (\"@scope\": _lvar_220), (\"@extensible\": _lvar_219), (\"@class\": _lvar_218), (\"@proto\": _lvar_217), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": _lvar_195), (\"@class\": _lvar_194), (\"@proto\": _lvar_193), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": _lvar_201), (\"length\": _lvar_200), (\"@scope\": _lvar_199), (\"@extensible\": _lvar_198), (\"@class\": _lvar_197), (\"@proto\": _lvar_196), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	(! (\"Error_construct\" == $$empty))
	($lerr == _$l_12)
	($$empty == $$empty)
	($lfun_proto == _$l_11)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lobj_proto == _$l_8)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lg == _$l_6)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "create_default_object"($lerr_proto, $lobj_proto, "Error", $$t) 
----------------------------------
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
anti_frame heap: 
	_$l_2 |-> [("@extensible": #s_30), ("@class": #s_29), ("@proto": #s_28), (default: $$unknown)]
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I found the model: 

(define-fun _$l_11 () Extended_JSIL_Literal
  (Elem (Loc 12)))
(define-fun _$l_6 () Extended_JSIL_Literal
  (Elem (Loc 10)))
(define-fun _$l_12 () Extended_JSIL_Literal
  (Elem (Loc 13)))
(define-fun _$l_3 () Extended_JSIL_Literal
  (Set (_ as-array k!406)))
(define-fun _$l_8 () Extended_JSIL_Literal
  (Elem (Loc 11)))
(define-fun k!406 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
anti_frame heap: 
	_$l_3 |-> [("@extensible": #s_37), ("@class": #s_36), ("@proto": #s_35), (default: $$unknown)]
----------------------------------
--8--
TIME: 1.807577
 ---- STATE: ---- 
Heap: 
	_$l_14 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (default: $$unknown)]
	$lerr |-> [(\"prototype\": {{ \"d\", $lerr_proto, $$f, $$f, $$f }}), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: _$l_14)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
	($lfun_proto == _$l_11)
	($lerr == _$l_12)
	($lerr_proto == _$l_14)
Gamma: 	
	(xret: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	$lfun_proto |-> [(\"@proto\": _lvar_210), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": _lvar_183), (\"@class\": _lvar_182), (\"@proto\": _lvar_181), (default: $$unknown)]
	$lg |-> [(\"Error\": _lvar_224), (default: $$unknown)]
	$lerr |-> [(\"prototype\": _lvar_225), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": _lvar_223), (\"@call\": _lvar_222), (\"length\": _lvar_221), (\"@scope\": _lvar_220), (\"@extensible\": _lvar_219), (\"@class\": _lvar_218), (\"@proto\": _lvar_217), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": _lvar_195), (\"@class\": _lvar_194), (\"@proto\": _lvar_193), (default: $$unknown)]
	_$l_14 |-> [(\"@extensible\": _lvar_237), (\"@class\": _lvar_236), (\"@proto\": _lvar_235), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": _lvar_201), (\"length\": _lvar_200), (\"@scope\": _lvar_199), (\"@extensible\": _lvar_198), (\"@class\": _lvar_197), (\"@proto\": _lvar_196), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	(! (\"Error\" == $$undefined))
	(! ($$t == $$undefined))
	($lerr_proto == _$l_14)
	(! (\"Error_construct\" == $$empty))
	($lerr == _$l_12)
	($$empty == $$empty)
	($lfun_proto == _$l_11)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lobj_proto == _$l_8)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lg == _$l_6)
Gamma: 	
Preds: 
 -------- 
 CMD: [$lerr_proto, "message"] := {{ "d", "", $$t, $$f, $$t }}
----------------------------------
Updtate-abs-heap. loc: $lerr_proto. field:"message". v:{{ "d", "", $$t, $$f, $$t }}----------------------------------
--9--
TIME: 1.807721
 ---- STATE: ---- 
Heap: 
	_$l_14 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lerr_proto |-> [(\"message\": {{ \"d\", \"\", $$t, $$f, $$t }}), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (default: $$unknown)]
	$lerr |-> [(\"prototype\": {{ \"d\", $lerr_proto, $$f, $$f, $$f }}), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: _$l_14)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
	($lfun_proto == _$l_11)
	($lerr == _$l_12)
	($lerr_proto == _$l_14)
Gamma: 	
	(xret: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	$lerr_proto |-> [(\"message\": _lvar_238), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": _lvar_210), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": _lvar_183), (\"@class\": _lvar_182), (\"@proto\": _lvar_181), (default: $$unknown)]
	$lg |-> [(\"Error\": _lvar_224), (default: $$unknown)]
	$lerr |-> [(\"prototype\": _lvar_225), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": _lvar_223), (\"@call\": _lvar_222), (\"length\": _lvar_221), (\"@scope\": _lvar_220), (\"@extensible\": _lvar_219), (\"@class\": _lvar_218), (\"@proto\": _lvar_217), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": _lvar_195), (\"@class\": _lvar_194), (\"@proto\": _lvar_193), (default: $$unknown)]
	_$l_14 |-> [(\"@extensible\": _lvar_237), (\"@class\": _lvar_236), (\"@proto\": _lvar_235), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": _lvar_201), (\"length\": _lvar_200), (\"@scope\": _lvar_199), (\"@extensible\": _lvar_198), (\"@class\": _lvar_197), (\"@proto\": _lvar_196), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	(! (\"Error\" == $$undefined))
	(! ($$t == $$undefined))
	($lerr_proto == _$l_14)
	(! (\"Error_construct\" == $$empty))
	($lerr == _$l_12)
	($$empty == $$empty)
	($lfun_proto == _$l_11)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lobj_proto == _$l_8)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lg == _$l_6)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$empty
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_14 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lerr_proto |-> [(\"message\": {{ \"d\", \"\", $$t, $$f, $$t }}), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (default: $$unknown)]
	$lerr |-> [(\"prototype\": {{ \"d\", $lerr_proto, $$f, $$f, $$f }}), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
	($lfun_proto == _$l_11)
	($lerr == _$l_12)
	($lerr_proto == _$l_14)
Gamma: 	
	(xret: $$empty_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_14 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lerr_proto |-> [(\"message\": {{ \"d\", \"\", $$t, $$f, $$t }}), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (default: $$unknown)]
	$lerr |-> [(\"prototype\": {{ \"d\", $lerr_proto, $$f, $$f, $$f }}), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
	($lfun_proto == _$l_11)
	($lerr == _$l_12)
	($lerr_proto == _$l_14)
Gamma: 	
	(xret: $$empty_type)
Preds: 

anti_frame: Heap: 
	$lerr_proto |-> [(\"message\": _lvar_238), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": _lvar_210), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": _lvar_183), (\"@class\": _lvar_182), (\"@proto\": _lvar_181), (default: $$unknown)]
	$lg |-> [(\"Error\": _lvar_224), (default: $$unknown)]
	$lerr |-> [(\"prototype\": _lvar_225), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": _lvar_223), (\"@call\": _lvar_222), (\"length\": _lvar_221), (\"@scope\": _lvar_220), (\"@extensible\": _lvar_219), (\"@class\": _lvar_218), (\"@proto\": _lvar_217), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": _lvar_195), (\"@class\": _lvar_194), (\"@proto\": _lvar_193), (default: $$unknown)]
	_$l_14 |-> [(\"@extensible\": _lvar_237), (\"@class\": _lvar_236), (\"@proto\": _lvar_235), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": _lvar_201), (\"length\": _lvar_200), (\"@scope\": _lvar_199), (\"@extensible\": _lvar_198), (\"@class\": _lvar_197), (\"@proto\": _lvar_196), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	(! (\"Error\" == $$undefined))
	(! ($$t == $$undefined))
	($lerr_proto == _$l_14)
	(! (\"Error_construct\" == $$empty))
	($lerr == _$l_12)
	($$empty == $$empty)
	($lfun_proto == _$l_11)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lobj_proto == _$l_8)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lg == _$l_6)
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_14 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lerr_proto |-> [(\"message\": {{ \"d\", \"\", $$t, $$f, $$t }}), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (default: $$unknown)]
	$lerr |-> [(\"prototype\": {{ \"d\", $lerr_proto, $$f, $$f, $$f }}), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
	($lfun_proto == _$l_11)
	($lerr == _$l_12)
	($lerr_proto == _$l_14)
Gamma: 	
	(xret: $$empty_type)
Preds: 

anti_frame: Heap: 
	$lerr_proto |-> [(\"message\": _lvar_238), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": _lvar_210), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": _lvar_183), (\"@class\": _lvar_182), (\"@proto\": _lvar_181), (default: $$unknown)]
	$lg |-> [(\"Error\": _lvar_224), (default: $$unknown)]
	$lerr |-> [(\"prototype\": _lvar_225), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": _lvar_223), (\"@call\": _lvar_222), (\"length\": _lvar_221), (\"@scope\": _lvar_220), (\"@extensible\": _lvar_219), (\"@class\": _lvar_218), (\"@proto\": _lvar_217), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": _lvar_195), (\"@class\": _lvar_194), (\"@proto\": _lvar_193), (default: $$unknown)]
	_$l_14 |-> [(\"@extensible\": _lvar_237), (\"@class\": _lvar_236), (\"@proto\": _lvar_235), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": _lvar_201), (\"length\": _lvar_200), (\"@scope\": _lvar_199), (\"@extensible\": _lvar_198), (\"@class\": _lvar_197), (\"@proto\": _lvar_196), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	(! (\"Error\" == $$undefined))
	(! ($$t == $$undefined))
	($lerr_proto == _$l_14)
	(! (\"Error_construct\" == $$empty))
	($lerr == _$l_12)
	($$empty == $$empty)
	($lfun_proto == _$l_11)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lobj_proto == _$l_8)
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	($lg == _$l_6)
Gamma: 	
Preds: 

Spec Var: #s_59
Spec Var: #s_60
Spec Var: #s_61
Spec Var: #s_62
Spec Var: #s_63
Spec Var: #s_64
Spec Var: #s_65
Spec Var: #s_66
Spec Var: #s_67
Spec Var: #s_68
Spec Var: #s_69
Spec Var: #s_70
Spec Var: #s_71
Spec Var: #s_72
Spec Var: #s_73
Spec Var: #s_74
Spec Var: #s_75
Spec Var: #s_76
Spec Var: #s_77
Spec Var: #s_78
Spec Var: #s_79
Spec Var: #s_80
Spec Var: #s_81
Spec Var: #s_82
Spec Var: #s_83
Spec Var: #s_84
Spec Var: xret
----------------------------------
----------------------------------
Symbolic execution of create_function_object
----------------------------------
--0--
TIME: 1.811119
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: len := (l-len params)
----------------------------------
----------------------------------
--1--
TIME: 1.811150
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
Pure Formulae: 	
Gamma: 	
	(len: $$number_type)
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(params: _lvar_239)
Pure Formulae: 	
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: l := new()
----------------------------------
----------------------------------
--2--
TIME: 1.811182
 ---- STATE: ---- 
Heap: 
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(l: _$l_16)
Pure Formulae: 	
	(! (_$l_16 == $lg))
Gamma: 	
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(params: _lvar_239)
Pure Formulae: 	
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: l := "create_object_with_call_construct"(l, call, construct, len) 
----------------------------------
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I found the model: 

(define-fun _$l_16 () Extended_JSIL_Literal
  (Set (_ as-array k!417)))
(define-fun _$l_4 () Extended_JSIL_Literal
  (Set (_ as-array k!418)))
(define-fun k!417 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun k!418 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
anti_frame heap: 
	_$l_4 |-> [("@call": #s_46), ("length": #s_44), ("@scope": #s_42), ("@extensible": #s_41), ("@class": #s_40), ("@proto": #s_39), (default: $$unknown)]
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I found the model: 

(define-fun _$l_16 () Extended_JSIL_Literal
  (Set (_ as-array k!424)))
(define-fun _lvar_241 () Extended_JSIL_Literal
  (Set (_ as-array k!425)))
(define-fun _$l_4 () Extended_JSIL_Literal
  (Set (_ as-array k!426)))
(define-fun k!425 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun k!426 ((x!0 JSIL_Literal)) Bool
  (ite (= x!0 Undefined) false
    true))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!424 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  0.0)
anti_frame heap: 
	_$l_4 |-> [("@construct": #s_58), ("@call": #s_56), ("length": #s_54), ("@scope": #s_52), ("@extensible": #s_51), ("@class": #s_50), ("@proto": #s_49), (default: $$unknown)]
----------------------------------
--3--
TIME: 1.865127
 ---- STATE: ---- 
Heap: 
	_$l_17 |-> [(\"@construct\": _lvar_241), (\"@call\": _lvar_240), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
Gamma: 	
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_17 |-> [(\"@construct\": _lvar_254), (\"@call\": _lvar_253), (\"length\": _lvar_252), (\"@scope\": _lvar_251), (\"@extensible\": _lvar_250), (\"@class\": _lvar_249), (\"@proto\": _lvar_248), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_lvar_241 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: [l, "@scope"] := xsc
----------------------------------
----------------------------------
--4--
TIME: 1.865234
 ---- STATE: ---- 
Heap: 
	_$l_17 |-> [(\"@scope\": _lvar_256), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@construct\": _lvar_241), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(xsc: _lvar_256)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
Gamma: 	
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_17 |-> [(\"@construct\": _lvar_254), (\"@call\": _lvar_253), (\"length\": _lvar_252), (\"@scope\": _lvar_251), (\"@extensible\": _lvar_250), (\"@class\": _lvar_249), (\"@proto\": _lvar_248), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_256)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_lvar_241 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: prototype := new()
----------------------------------
----------------------------------
--5--
TIME: 1.865327
 ---- STATE: ---- 
Heap: 
	_$l_17 |-> [(\"@scope\": _lvar_256), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@construct\": _lvar_241), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(xsc: _lvar_256)
	(prototype: _$l_19)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
	(! (_$l_19 == $lg))
Gamma: 	
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_17 |-> [(\"@construct\": _lvar_254), (\"@call\": _lvar_253), (\"length\": _lvar_252), (\"@scope\": _lvar_251), (\"@extensible\": _lvar_250), (\"@class\": _lvar_249), (\"@proto\": _lvar_248), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_256)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_lvar_241 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: prototype := "create_default_object"(prototype, $lobj_proto, "Object", $$t) 
----------------------------------
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
anti_frame heap: 
	_$l_2 |-> [("@extensible": #s_30), ("@class": #s_29), ("@proto": #s_28), (default: $$unknown)]
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I found the model: 

(define-fun _$l_16 () Extended_JSIL_Literal
  (Set (_ as-array k!446)))
(define-fun _lvar_241 () Extended_JSIL_Literal
  (Set (_ as-array k!448)))
(define-fun _$l_17 () Extended_JSIL_Literal
  (Set (_ as-array k!446)))
(define-fun _$l_19 () Extended_JSIL_Literal
  (Set (_ as-array k!449)))
(define-fun _$l_3 () Extended_JSIL_Literal
  (Set (_ as-array k!447)))
(define-fun k!449 ((x!0 JSIL_Literal)) Bool
  (ite (= x!0 Undefined) true
    false))
(define-fun k!446 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun k!447 ((x!0 JSIL_Literal)) Bool
  (ite (= x!0 Undefined) false
    true))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!448 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  0.0)
anti_frame heap: 
	_$l_3 |-> [("@extensible": #s_37), ("@class": #s_36), ("@proto": #s_35), (default: $$unknown)]
----------------------------------
--6--
TIME: 1.906899
 ---- STATE: ---- 
Heap: 
	_$l_17 |-> [(\"@scope\": _lvar_256), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@construct\": _lvar_241), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(xsc: _lvar_256)
	(prototype: _$l_20)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
	(! (_$l_19 == $lg))
	(_$l_19 == _$l_20)
Gamma: 	
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_20 |-> [(\"@extensible\": _lvar_268), (\"@class\": _lvar_267), (\"@proto\": _lvar_266), (default: $$unknown)]
	_$l_17 |-> [(\"@construct\": _lvar_254), (\"@call\": _lvar_253), (\"length\": _lvar_252), (\"@scope\": _lvar_251), (\"@extensible\": _lvar_250), (\"@class\": _lvar_249), (\"@proto\": _lvar_248), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_256)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_19 == _$l_20)
	(! (_lvar_241 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: [prototype, "constructor"] := {{ "d", l, $$t, $$f, $$t }}
----------------------------------
Updtate-abs-heap. loc: _$l_20. field:"constructor". v:{{ "d", _$l_17, $$t, $$f, $$t }}----------------------------------
--7--
TIME: 1.907025
 ---- STATE: ---- 
Heap: 
	_$l_17 |-> [(\"@scope\": _lvar_256), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@construct\": _lvar_241), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"constructor\": {{ \"d\", _$l_17, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(xsc: _lvar_256)
	(prototype: _$l_20)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
	(! (_$l_19 == $lg))
	(_$l_19 == _$l_20)
Gamma: 	
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_20 |-> [(\"constructor\": _lvar_269), (\"@extensible\": _lvar_268), (\"@class\": _lvar_267), (\"@proto\": _lvar_266), (default: $$unknown)]
	_$l_17 |-> [(\"@construct\": _lvar_254), (\"@call\": _lvar_253), (\"length\": _lvar_252), (\"@scope\": _lvar_251), (\"@extensible\": _lvar_250), (\"@class\": _lvar_249), (\"@proto\": _lvar_248), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_256)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_19 == _$l_20)
	(! (_lvar_241 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: [l, "prototype"] := {{ "d", prototype, $$t, $$f, $$f }}
----------------------------------
Updtate-abs-heap. loc: _$l_17. field:"prototype". v:{{ "d", _$l_20, $$t, $$f, $$f }}----------------------------------
--8--
TIME: 1.907149
 ---- STATE: ---- 
Heap: 
	_$l_17 |-> [(\"prototype\": {{ \"d\", _$l_20, $$t, $$f, $$f }}), (\"@scope\": _lvar_256), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@construct\": _lvar_241), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"constructor\": {{ \"d\", _$l_17, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(xsc: _lvar_256)
	(prototype: _$l_20)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
	(! (_$l_19 == $lg))
	(_$l_19 == _$l_20)
Gamma: 	
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_20 |-> [(\"constructor\": _lvar_269), (\"@extensible\": _lvar_268), (\"@class\": _lvar_267), (\"@proto\": _lvar_266), (default: $$unknown)]
	_$l_17 |-> [(\"prototype\": _lvar_270), (\"@construct\": _lvar_254), (\"@call\": _lvar_253), (\"length\": _lvar_252), (\"@scope\": _lvar_251), (\"@extensible\": _lvar_250), (\"@class\": _lvar_249), (\"@proto\": _lvar_248), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_256)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_19 == _$l_20)
	(! (_lvar_241 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: [l, "caller"] := {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}
----------------------------------
Updtate-abs-heap. loc: _$l_17. field:"caller". v:{{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}----------------------------------
--9--
TIME: 1.907258
 ---- STATE: ---- 
Heap: 
	_$l_17 |-> [(\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_20, $$t, $$f, $$f }}), (\"@scope\": _lvar_256), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@construct\": _lvar_241), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"constructor\": {{ \"d\", _$l_17, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(xsc: _lvar_256)
	(prototype: _$l_20)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
	(! (_$l_19 == $lg))
	(_$l_19 == _$l_20)
Gamma: 	
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_20 |-> [(\"constructor\": _lvar_269), (\"@extensible\": _lvar_268), (\"@class\": _lvar_267), (\"@proto\": _lvar_266), (default: $$unknown)]
	_$l_17 |-> [(\"caller\": _lvar_271), (\"prototype\": _lvar_270), (\"@construct\": _lvar_254), (\"@call\": _lvar_253), (\"length\": _lvar_252), (\"@scope\": _lvar_251), (\"@extensible\": _lvar_250), (\"@class\": _lvar_249), (\"@proto\": _lvar_248), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_256)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_19 == _$l_20)
	(! (_lvar_241 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: [l, "arguments"] := {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}
----------------------------------
Updtate-abs-heap. loc: _$l_17. field:"arguments". v:{{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}----------------------------------
--10--
TIME: 1.907373
 ---- STATE: ---- 
Heap: 
	_$l_17 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_20, $$t, $$f, $$f }}), (\"@scope\": _lvar_256), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@construct\": _lvar_241), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"constructor\": {{ \"d\", _$l_17, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(xsc: _lvar_256)
	(prototype: _$l_20)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
	(! (_$l_19 == $lg))
	(_$l_19 == _$l_20)
Gamma: 	
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_20 |-> [(\"constructor\": _lvar_269), (\"@extensible\": _lvar_268), (\"@class\": _lvar_267), (\"@proto\": _lvar_266), (default: $$unknown)]
	_$l_17 |-> [(\"arguments\": _lvar_272), (\"caller\": _lvar_271), (\"prototype\": _lvar_270), (\"@construct\": _lvar_254), (\"@call\": _lvar_253), (\"length\": _lvar_252), (\"@scope\": _lvar_251), (\"@extensible\": _lvar_250), (\"@class\": _lvar_249), (\"@proto\": _lvar_248), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_256)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_19 == _$l_20)
	(! (_lvar_241 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: xret := l
----------------------------------
----------------------------------
--11--
TIME: 1.911743
 ---- STATE: ---- 
Heap: 
	_$l_17 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_20, $$t, $$f, $$f }}), (\"@scope\": _lvar_256), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@construct\": _lvar_241), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"constructor\": {{ \"d\", _$l_17, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(xret: _$l_17)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(xsc: _lvar_256)
	(prototype: _$l_20)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
	(! (_$l_19 == $lg))
	(_$l_19 == _$l_20)
Gamma: 	
	(xret: $$object_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_20 |-> [(\"constructor\": _lvar_269), (\"@extensible\": _lvar_268), (\"@class\": _lvar_267), (\"@proto\": _lvar_266), (default: $$unknown)]
	_$l_17 |-> [(\"arguments\": _lvar_272), (\"caller\": _lvar_271), (\"prototype\": _lvar_270), (\"@construct\": _lvar_254), (\"@call\": _lvar_253), (\"length\": _lvar_252), (\"@scope\": _lvar_251), (\"@extensible\": _lvar_250), (\"@class\": _lvar_249), (\"@proto\": _lvar_248), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_256)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_19 == _$l_20)
	(! (_lvar_241 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_17 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_20, $$t, $$f, $$f }}), (\"@scope\": _lvar_256), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@construct\": _lvar_241), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"constructor\": {{ \"d\", _$l_17, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(xret: _$l_17)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(xsc: _lvar_256)
	(prototype: _$l_20)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
	(! (_$l_19 == $lg))
	(_$l_19 == _$l_20)
Gamma: 	
	(xret: $$object_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_17 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_20, $$t, $$f, $$f }}), (\"@scope\": _lvar_256), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@construct\": _lvar_241), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"constructor\": {{ \"d\", _$l_17, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(xret: _$l_17)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(xsc: _lvar_256)
	(prototype: _$l_20)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
	(! (_$l_19 == $lg))
	(_$l_19 == _$l_20)
Gamma: 	
	(xret: $$object_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_20 |-> [(\"constructor\": _lvar_269), (\"@extensible\": _lvar_268), (\"@class\": _lvar_267), (\"@proto\": _lvar_266), (default: $$unknown)]
	_$l_17 |-> [(\"arguments\": _lvar_272), (\"caller\": _lvar_271), (\"prototype\": _lvar_270), (\"@construct\": _lvar_254), (\"@call\": _lvar_253), (\"length\": _lvar_252), (\"@scope\": _lvar_251), (\"@extensible\": _lvar_250), (\"@class\": _lvar_249), (\"@proto\": _lvar_248), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_256)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_19 == _$l_20)
	(! (_lvar_241 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 

Symb_state: Heap: 
	_$l_17 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_20, $$t, $$f, $$f }}), (\"@scope\": _lvar_256), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@construct\": _lvar_241), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"constructor\": {{ \"d\", _$l_17, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(xret: _$l_17)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_17)
	(xsc: _lvar_256)
	(prototype: _$l_20)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (_lvar_241 == $$empty))
	(! (_$l_19 == $lg))
	(_$l_19 == _$l_20)
Gamma: 	
	(xret: $$object_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_20 |-> [(\"constructor\": _lvar_269), (\"@extensible\": _lvar_268), (\"@class\": _lvar_267), (\"@proto\": _lvar_266), (default: $$unknown)]
	_$l_17 |-> [(\"arguments\": _lvar_272), (\"caller\": _lvar_271), (\"prototype\": _lvar_270), (\"@construct\": _lvar_254), (\"@call\": _lvar_253), (\"length\": _lvar_252), (\"@scope\": _lvar_251), (\"@extensible\": _lvar_250), (\"@class\": _lvar_249), (\"@proto\": _lvar_248), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_256)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_19 == _$l_20)
	(! (_lvar_241 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(_lvar_239: $$list_type)
Preds: 

----------------------------------
--3--
TIME: 1.912233
 ---- STATE: ---- 
Heap: 
	_$l_18 |-> [(\"@call\": _lvar_240), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(construct: $$empty_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_18 |-> [(\"@call\": _lvar_247), (\"length\": _lvar_246), (\"@scope\": _lvar_245), (\"@extensible\": _lvar_244), (\"@class\": _lvar_243), (\"@proto\": _lvar_242), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(construct: _lvar_241)
Pure Formulae: 	
	(_lvar_241 == $$empty)
	(_$l_16 == _$l_18)
Gamma: 	
	(_lvar_241: $$empty_type)
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: [l, "@scope"] := xsc
----------------------------------
----------------------------------
--4--
TIME: 1.912355
 ---- STATE: ---- 
Heap: 
	_$l_18 |-> [(\"@scope\": _lvar_273), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(xsc: _lvar_273)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(construct: $$empty_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_18 |-> [(\"@call\": _lvar_247), (\"length\": _lvar_246), (\"@scope\": _lvar_245), (\"@extensible\": _lvar_244), (\"@class\": _lvar_243), (\"@proto\": _lvar_242), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_273)
	(construct: _lvar_241)
Pure Formulae: 	
	(_lvar_241 == $$empty)
	(_$l_16 == _$l_18)
Gamma: 	
	(_lvar_241: $$empty_type)
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: prototype := new()
----------------------------------
----------------------------------
--5--
TIME: 1.912479
 ---- STATE: ---- 
Heap: 
	_$l_18 |-> [(\"@scope\": _lvar_273), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(xsc: _lvar_273)
	(prototype: _$l_22)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_18 |-> [(\"@call\": _lvar_247), (\"length\": _lvar_246), (\"@scope\": _lvar_245), (\"@extensible\": _lvar_244), (\"@class\": _lvar_243), (\"@proto\": _lvar_242), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_273)
	(construct: _lvar_241)
Pure Formulae: 	
	(_lvar_241 == $$empty)
	(_$l_16 == _$l_18)
Gamma: 	
	(_lvar_241: $$empty_type)
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: prototype := "create_default_object"(prototype, $lobj_proto, "Object", $$t) 
----------------------------------
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
anti_frame heap: 
	_$l_2 |-> [("@extensible": #s_30), ("@class": #s_29), ("@proto": #s_28), (default: $$unknown)]
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I found the model: 

(define-fun _$l_16 () Extended_JSIL_Literal
  (Set (_ as-array k!465)))
(define-fun _$l_22 () Extended_JSIL_Literal
  (Set (_ as-array k!466)))
(define-fun _$l_3 () Extended_JSIL_Literal
  (Set (_ as-array k!467)))
(define-fun _$l_18 () Extended_JSIL_Literal
  (Set (_ as-array k!465)))
(define-fun k!465 ((x!0 JSIL_Literal)) Bool
  (ite (= x!0 Undefined) true
    false))
(define-fun k!466 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun k!467 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
anti_frame heap: 
	_$l_3 |-> [("@extensible": #s_37), ("@class": #s_36), ("@proto": #s_35), (default: $$unknown)]
----------------------------------
--6--
TIME: 1.946334
 ---- STATE: ---- 
Heap: 
	_$l_18 |-> [(\"@scope\": _lvar_273), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(xsc: _lvar_273)
	(prototype: _$l_23)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
	(_$l_22 == _$l_23)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_23 |-> [(\"@extensible\": _lvar_285), (\"@class\": _lvar_284), (\"@proto\": _lvar_283), (default: $$unknown)]
	_$l_18 |-> [(\"@call\": _lvar_247), (\"length\": _lvar_246), (\"@scope\": _lvar_245), (\"@extensible\": _lvar_244), (\"@class\": _lvar_243), (\"@proto\": _lvar_242), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_273)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_22 == _$l_23)
	(_lvar_241 == $$empty)
	(_$l_16 == _$l_18)
Gamma: 	
	(_lvar_241: $$empty_type)
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: [prototype, "constructor"] := {{ "d", l, $$t, $$f, $$t }}
----------------------------------
Updtate-abs-heap. loc: _$l_23. field:"constructor". v:{{ "d", _$l_18, $$t, $$f, $$t }}----------------------------------
--7--
TIME: 1.946520
 ---- STATE: ---- 
Heap: 
	_$l_18 |-> [(\"@scope\": _lvar_273), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"constructor\": {{ \"d\", _$l_18, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(xsc: _lvar_273)
	(prototype: _$l_23)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
	(_$l_22 == _$l_23)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(construct: $$empty_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_23 |-> [(\"constructor\": _lvar_286), (\"@extensible\": _lvar_285), (\"@class\": _lvar_284), (\"@proto\": _lvar_283), (default: $$unknown)]
	_$l_18 |-> [(\"@call\": _lvar_247), (\"length\": _lvar_246), (\"@scope\": _lvar_245), (\"@extensible\": _lvar_244), (\"@class\": _lvar_243), (\"@proto\": _lvar_242), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_273)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_22 == _$l_23)
	(_lvar_241 == $$empty)
	(_$l_16 == _$l_18)
Gamma: 	
	(_lvar_241: $$empty_type)
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: [l, "prototype"] := {{ "d", prototype, $$t, $$f, $$f }}
----------------------------------
Updtate-abs-heap. loc: _$l_18. field:"prototype". v:{{ "d", _$l_23, $$t, $$f, $$f }}----------------------------------
--8--
TIME: 1.946668
 ---- STATE: ---- 
Heap: 
	_$l_18 |-> [(\"prototype\": {{ \"d\", _$l_23, $$t, $$f, $$f }}), (\"@scope\": _lvar_273), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"constructor\": {{ \"d\", _$l_18, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(xsc: _lvar_273)
	(prototype: _$l_23)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
	(_$l_22 == _$l_23)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_23 |-> [(\"constructor\": _lvar_286), (\"@extensible\": _lvar_285), (\"@class\": _lvar_284), (\"@proto\": _lvar_283), (default: $$unknown)]
	_$l_18 |-> [(\"prototype\": _lvar_287), (\"@call\": _lvar_247), (\"length\": _lvar_246), (\"@scope\": _lvar_245), (\"@extensible\": _lvar_244), (\"@class\": _lvar_243), (\"@proto\": _lvar_242), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_273)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_22 == _$l_23)
	(_lvar_241 == $$empty)
	(_$l_16 == _$l_18)
Gamma: 	
	(_lvar_241: $$empty_type)
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: [l, "caller"] := {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}
----------------------------------
Updtate-abs-heap. loc: _$l_18. field:"caller". v:{{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}----------------------------------
--9--
TIME: 1.946819
 ---- STATE: ---- 
Heap: 
	_$l_18 |-> [(\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_23, $$t, $$f, $$f }}), (\"@scope\": _lvar_273), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"constructor\": {{ \"d\", _$l_18, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(xsc: _lvar_273)
	(prototype: _$l_23)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
	(_$l_22 == _$l_23)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(construct: $$empty_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_23 |-> [(\"constructor\": _lvar_286), (\"@extensible\": _lvar_285), (\"@class\": _lvar_284), (\"@proto\": _lvar_283), (default: $$unknown)]
	_$l_18 |-> [(\"caller\": _lvar_288), (\"prototype\": _lvar_287), (\"@call\": _lvar_247), (\"length\": _lvar_246), (\"@scope\": _lvar_245), (\"@extensible\": _lvar_244), (\"@class\": _lvar_243), (\"@proto\": _lvar_242), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_273)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_22 == _$l_23)
	(_lvar_241 == $$empty)
	(_$l_16 == _$l_18)
Gamma: 	
	(_lvar_241: $$empty_type)
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: [l, "arguments"] := {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}
----------------------------------
Updtate-abs-heap. loc: _$l_18. field:"arguments". v:{{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}----------------------------------
--10--
TIME: 1.946971
 ---- STATE: ---- 
Heap: 
	_$l_18 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_23, $$t, $$f, $$f }}), (\"@scope\": _lvar_273), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"constructor\": {{ \"d\", _$l_18, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(xsc: _lvar_273)
	(prototype: _$l_23)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
	(_$l_22 == _$l_23)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_23 |-> [(\"constructor\": _lvar_286), (\"@extensible\": _lvar_285), (\"@class\": _lvar_284), (\"@proto\": _lvar_283), (default: $$unknown)]
	_$l_18 |-> [(\"arguments\": _lvar_289), (\"caller\": _lvar_288), (\"prototype\": _lvar_287), (\"@call\": _lvar_247), (\"length\": _lvar_246), (\"@scope\": _lvar_245), (\"@extensible\": _lvar_244), (\"@class\": _lvar_243), (\"@proto\": _lvar_242), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_273)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_22 == _$l_23)
	(_lvar_241 == $$empty)
	(_$l_16 == _$l_18)
Gamma: 	
	(_lvar_241: $$empty_type)
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: xret := l
----------------------------------
----------------------------------
--11--
TIME: 1.951495
 ---- STATE: ---- 
Heap: 
	_$l_18 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_23, $$t, $$f, $$f }}), (\"@scope\": _lvar_273), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"constructor\": {{ \"d\", _$l_18, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(xret: _$l_18)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(xsc: _lvar_273)
	(prototype: _$l_23)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
	(_$l_22 == _$l_23)
Gamma: 	
	(params: $$list_type)
	(xret: $$object_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(construct: $$empty_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_23 |-> [(\"constructor\": _lvar_286), (\"@extensible\": _lvar_285), (\"@class\": _lvar_284), (\"@proto\": _lvar_283), (default: $$unknown)]
	_$l_18 |-> [(\"arguments\": _lvar_289), (\"caller\": _lvar_288), (\"prototype\": _lvar_287), (\"@call\": _lvar_247), (\"length\": _lvar_246), (\"@scope\": _lvar_245), (\"@extensible\": _lvar_244), (\"@class\": _lvar_243), (\"@proto\": _lvar_242), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_273)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_22 == _$l_23)
	(_lvar_241 == $$empty)
	(_$l_16 == _$l_18)
Gamma: 	
	(_lvar_241: $$empty_type)
	(_lvar_239: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_18 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_23, $$t, $$f, $$f }}), (\"@scope\": _lvar_273), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"constructor\": {{ \"d\", _$l_18, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(xret: _$l_18)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(xsc: _lvar_273)
	(prototype: _$l_23)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
	(_$l_22 == _$l_23)
Gamma: 	
	(params: $$list_type)
	(xret: $$object_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_18 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_23, $$t, $$f, $$f }}), (\"@scope\": _lvar_273), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"constructor\": {{ \"d\", _$l_18, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(xret: _$l_18)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(xsc: _lvar_273)
	(prototype: _$l_23)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
	(_$l_22 == _$l_23)
Gamma: 	
	(params: $$list_type)
	(xret: $$object_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_23 |-> [(\"constructor\": _lvar_286), (\"@extensible\": _lvar_285), (\"@class\": _lvar_284), (\"@proto\": _lvar_283), (default: $$unknown)]
	_$l_18 |-> [(\"arguments\": _lvar_289), (\"caller\": _lvar_288), (\"prototype\": _lvar_287), (\"@call\": _lvar_247), (\"length\": _lvar_246), (\"@scope\": _lvar_245), (\"@extensible\": _lvar_244), (\"@class\": _lvar_243), (\"@proto\": _lvar_242), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_273)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_22 == _$l_23)
	(_lvar_241 == $$empty)
	(_$l_16 == _$l_18)
Gamma: 	
	(_lvar_241: $$empty_type)
	(_lvar_239: $$list_type)
Preds: 

Symb_state: Heap: 
	_$l_18 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_23, $$t, $$f, $$f }}), (\"@scope\": _lvar_273), (\"length\": {{ \"d\", (l-len _lvar_239), $$f, $$f, $$f }}), (\"@call\": _lvar_240), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"constructor\": {{ \"d\", _$l_18, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(xret: _$l_18)
	(len: (l-len _lvar_239))
	(call: _lvar_240)
	(l: _$l_18)
	(xsc: _lvar_273)
	(prototype: _$l_23)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
	(_$l_22 == _$l_23)
Gamma: 	
	(params: $$list_type)
	(xret: $$object_type)
	(len: $$number_type)
	(_lvar_239: $$list_type)
	(l: $$object_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_23 |-> [(\"constructor\": _lvar_286), (\"@extensible\": _lvar_285), (\"@class\": _lvar_284), (\"@proto\": _lvar_283), (default: $$unknown)]
	_$l_18 |-> [(\"arguments\": _lvar_289), (\"caller\": _lvar_288), (\"prototype\": _lvar_287), (\"@call\": _lvar_247), (\"length\": _lvar_246), (\"@scope\": _lvar_245), (\"@extensible\": _lvar_244), (\"@class\": _lvar_243), (\"@proto\": _lvar_242), (default: $$unknown)]
Store: 	
	(params: _lvar_239)
	(call: _lvar_240)
	(xsc: _lvar_273)
	(construct: _lvar_241)
Pure Formulae: 	
	(! (\"Object\" == $$undefined))
	(! ($$t == $$undefined))
	(_$l_22 == _$l_23)
	(_lvar_241 == $$empty)
	(_$l_16 == _$l_18)
Gamma: 	
	(_lvar_241: $$empty_type)
	(_lvar_239: $$list_type)
Preds: 

Spec Var: #s_100
Spec Var: #s_101
Spec Var: #s_102
Spec Var: #s_85
Spec Var: #s_86
Spec Var: #s_87
Spec Var: #s_88
Spec Var: #s_89
Spec Var: #s_90
Spec Var: #s_91
Spec Var: #s_92
Spec Var: #s_93
Spec Var: #s_94
Spec Var: #s_95
Spec Var: #s_96
Spec Var: #s_97
Spec Var: #s_98
Spec Var: #s_99
Spec Var: #s_85
Spec Var: #s_86
Spec Var: #s_87
Spec Var: #s_95
Spec Var: #s_103
Spec Var: #s_104
Spec Var: #s_105
Spec Var: #s_106
Spec Var: #s_107
Spec Var: #s_108
Spec Var: #s_109
Spec Var: #s_110
Spec Var: #s_111
Spec Var: #s_112
Spec Var: #s_113
Spec Var: #s_114
Spec Var: #s_115
Spec Var: #s_116
Spec Var: #s_117
Spec Var: #s_118
Spec Var: #s_119
Spec Var: #s_120
Spec Var: #s_103
Spec Var: #s_104
Spec Var: #s_112
Spec Var: construct
----------------------------------
----------------------------------
Symbolic execution of i__isDataDescriptor
----------------------------------
--0--
TIME: 1.954062
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
I found the model: 

(define-fun _lvar_291 () Extended_JSIL_Literal
  (Set (_ as-array k!476)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!476 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_291 () Extended_JSIL_Literal
  (Elem Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--0--
TIME: 1.973437
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(_lvar_291 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(_lvar_291 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
----------------------------------
--9--
TIME: 1.973510
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(_lvar_291 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 1.973587
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(_lvar_291 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(_lvar_291 == $$undefined)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(_lvar_291 == $$undefined)
Gamma: 	
Preds: 

----------------------------------
--0--
TIME: 1.973776
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
----------------------------------
--1--
TIME: 1.973817
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: d := l-nth(desc, 0.)
----------------------------------
I found the model: 

(define-fun _lvar_291 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
----------------------------------
--2--
TIME: 1.984524
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "d")] 7 3
----------------------------------
I found the model: 

(define-fun _lvar_291 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  15.0)
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Null)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
    0.0))
I found the model: 

(define-fun _lvar_291 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 15))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  15.0)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
    0.0))
I could not determine the branch.
----------------------------------
--2--
TIME: 2.011357
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "d")] 7 3
----------------------------------
----------------------------------
--7--
TIME: 2.011411
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 2.011453
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 2.011491
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 0.) == \"d\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 

----------------------------------
--2--
TIME: 2.031876
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "d")] 7 3
----------------------------------
----------------------------------
--3--
TIME: 2.031951
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "g")] 4 9
----------------------------------
I found the model: 

(define-fun _lvar_291 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Empty)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_291 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 16))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--3--
TIME: 2.060884
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "g")] 4 9
----------------------------------
----------------------------------
--4--
TIME: 2.060945
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: v := l-nth(desc, 3.)
----------------------------------
I found the model: 

(define-fun _lvar_291 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 16))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
----------------------------------
--5--
TIME: 2.076774
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: w := l-nth(desc, 4.)
----------------------------------
I found the model: 

(define-fun _lvar_291 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 16))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 4.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
----------------------------------
--6--
TIME: 2.094190
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: goto [((v = $$empty) and (w = $$empty))] 9 7
----------------------------------
I found the model: 

(define-fun _lvar_291 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) (String 16)
    Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_291 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) (String 16)
    Empty))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--6--
TIME: 2.133586
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((l-nth(_lvar_291, 3.) == $$empty) /\ (l-nth(_lvar_291, 4.) == $$empty))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((l-nth(_lvar_291, 3.) == $$empty) /\ (l-nth(_lvar_291, 4.) == $$empty))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: goto [((v = $$empty) and (w = $$empty))] 9 7
----------------------------------
----------------------------------
--9--
TIME: 2.133680
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 3.) == $$empty)
	(l-nth(_lvar_291, 4.) == $$empty)
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((l-nth(_lvar_291, 3.) == $$empty) /\ (l-nth(_lvar_291, 4.) == $$empty))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 2.133760
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 3.) == $$empty)
	(l-nth(_lvar_291, 4.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((l-nth(_lvar_291, 3.) == $$empty) /\ (l-nth(_lvar_291, 4.) == $$empty))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 3.) == $$empty)
	(l-nth(_lvar_291, 4.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 3.) == $$empty)
	(l-nth(_lvar_291, 4.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((l-nth(_lvar_291, 3.) == $$empty) /\ (l-nth(_lvar_291, 4.) == $$empty))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	(l-nth(_lvar_291, 3.) == $$empty)
	(l-nth(_lvar_291, 4.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((l-nth(_lvar_291, 3.) == $$empty) /\ (l-nth(_lvar_291, 4.) == $$empty))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 

----------------------------------
--6--
TIME: 2.160406
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: goto [((v = $$empty) and (w = $$empty))] 9 7
----------------------------------
----------------------------------
--7--
TIME: 2.160498
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 2.160594
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 2.160672
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(w: l-nth(_lvar_291, 4.))
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
	(v: l-nth(_lvar_291, 3.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(l-nth(_lvar_291, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len _lvar_291))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_291))
	((! (l-nth(_lvar_291, 3.) == $$empty)) \/ (! (l-nth(_lvar_291, 4.) == $$empty)))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 

----------------------------------
--3--
TIME: 2.172726
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(! (l-nth(_lvar_291, 0.) == \"g\"))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(! (l-nth(_lvar_291, 0.) == \"g\"))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "g")] 4 9
----------------------------------
----------------------------------
--9--
TIME: 2.172804
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(! (l-nth(_lvar_291, 0.) == \"g\"))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(! (l-nth(_lvar_291, 0.) == \"g\"))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 2.172852
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(! (l-nth(_lvar_291, 0.) == \"g\"))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(! (l-nth(_lvar_291, 0.) == \"g\"))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(! (l-nth(_lvar_291, 0.) == \"g\"))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(! (l-nth(_lvar_291, 0.) == \"g\"))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(! (l-nth(_lvar_291, 0.) == \"g\"))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_291)
	(d: l-nth(_lvar_291, 0.))
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(! (l-nth(_lvar_291, 0.) == \"g\"))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_291: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_291)
Pure Formulae: 	
	(! (_lvar_291 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_291))
	(! (l-nth(_lvar_291, 0.) == \"d\"))
	(! (l-nth(_lvar_291, 0.) == \"g\"))
Gamma: 	
	(_lvar_291: $$list_type)
Preds: 

Spec Var: #s_121
Spec Var: desc
Spec Var: #s_122
Spec Var: #s_122
Spec Var: #s_123
Spec Var: #s_123
Spec Var: #s_124
Spec Var: #s_124
Spec Var: #s_125
Spec Var: #s_125
----------------------------------
----------------------------------
Symbolic execution of i__isAccessorDescriptor
----------------------------------
--0--
TIME: 2.188655
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
I found the model: 

(define-fun _lvar_292 () Extended_JSIL_Literal
  (Set (_ as-array k!529)))
(define-fun k!529 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_292 () Extended_JSIL_Literal
  (Elem Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--0--
TIME: 2.208188
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(_lvar_292 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(_lvar_292 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
----------------------------------
--9--
TIME: 2.208259
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(_lvar_292 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 2.208336
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(_lvar_292 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(_lvar_292 == $$undefined)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(_lvar_292 == $$undefined)
Gamma: 	
Preds: 

----------------------------------
--0--
TIME: 2.208517
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
----------------------------------
--1--
TIME: 2.208559
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: d := l-nth(desc, 0.)
----------------------------------
I found the model: 

(define-fun _lvar_292 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
----------------------------------
--2--
TIME: 2.219176
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "a")] 7 3
----------------------------------
I found the model: 

(define-fun _lvar_292 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  17.0)
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Null)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 17.0) 1.0
    0.0))
I found the model: 

(define-fun _lvar_292 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 17))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  17.0)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 17.0) 1.0
    0.0))
I could not determine the branch.
----------------------------------
--2--
TIME: 2.244588
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "a")] 7 3
----------------------------------
----------------------------------
--7--
TIME: 2.244643
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 2.244704
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 2.244745
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 0.) == \"a\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 

----------------------------------
--2--
TIME: 2.256130
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "a")] 7 3
----------------------------------
----------------------------------
--3--
TIME: 2.256194
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "g")] 4 9
----------------------------------
I found the model: 

(define-fun _lvar_292 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    17.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Null)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 17.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_292 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    17.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 16))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 17.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--3--
TIME: 2.287605
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "g")] 4 9
----------------------------------
----------------------------------
--4--
TIME: 2.287665
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: g := l-nth(desc, 5.)
----------------------------------
I found the model: 

(define-fun _lvar_292 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    17.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 16))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 17.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
----------------------------------
--5--
TIME: 2.304195
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: s := l-nth(desc, 6.)
----------------------------------
I found the model: 

(define-fun _lvar_292 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    17.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 16))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 6.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 17.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
----------------------------------
--6--
TIME: 2.321943
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: goto [((g = $$empty) and (s = $$empty))] 9 7
----------------------------------
I found the model: 

(define-fun _lvar_292 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    17.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) (String 16)
    Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 7.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 17.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_292 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    17.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) (String 16)
    Empty))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 7.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 17.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--6--
TIME: 2.380617
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((l-nth(_lvar_292, 5.) == $$empty) /\ (l-nth(_lvar_292, 6.) == $$empty))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((l-nth(_lvar_292, 5.) == $$empty) /\ (l-nth(_lvar_292, 6.) == $$empty))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: goto [((g = $$empty) and (s = $$empty))] 9 7
----------------------------------
----------------------------------
--9--
TIME: 2.380710
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 5.) == $$empty)
	(l-nth(_lvar_292, 6.) == $$empty)
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((l-nth(_lvar_292, 5.) == $$empty) /\ (l-nth(_lvar_292, 6.) == $$empty))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 2.380804
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 5.) == $$empty)
	(l-nth(_lvar_292, 6.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((l-nth(_lvar_292, 5.) == $$empty) /\ (l-nth(_lvar_292, 6.) == $$empty))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 5.) == $$empty)
	(l-nth(_lvar_292, 6.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 5.) == $$empty)
	(l-nth(_lvar_292, 6.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((l-nth(_lvar_292, 5.) == $$empty) /\ (l-nth(_lvar_292, 6.) == $$empty))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	(l-nth(_lvar_292, 5.) == $$empty)
	(l-nth(_lvar_292, 6.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((l-nth(_lvar_292, 5.) == $$empty) /\ (l-nth(_lvar_292, 6.) == $$empty))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 

----------------------------------
--6--
TIME: 2.398616
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: goto [((g = $$empty) and (s = $$empty))] 9 7
----------------------------------
----------------------------------
--7--
TIME: 2.398760
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 2.398852
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 2.398930
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(desc: _lvar_292)
	(g: l-nth(_lvar_292, 5.))
	(d: l-nth(_lvar_292, 0.))
	(s: l-nth(_lvar_292, 6.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(l-nth(_lvar_292, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len _lvar_292))
	(! (6. <# 0.))
	(6. <# (l-len _lvar_292))
	((! (l-nth(_lvar_292, 5.) == $$empty)) \/ (! (l-nth(_lvar_292, 6.) == $$empty)))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 

----------------------------------
--3--
TIME: 2.414959
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(! (l-nth(_lvar_292, 0.) == \"g\"))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(! (l-nth(_lvar_292, 0.) == \"g\"))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "g")] 4 9
----------------------------------
----------------------------------
--9--
TIME: 2.415017
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(! (l-nth(_lvar_292, 0.) == \"g\"))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(! (l-nth(_lvar_292, 0.) == \"g\"))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 2.415081
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(! (l-nth(_lvar_292, 0.) == \"g\"))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(! (l-nth(_lvar_292, 0.) == \"g\"))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(! (l-nth(_lvar_292, 0.) == \"g\"))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(! (l-nth(_lvar_292, 0.) == \"g\"))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(! (l-nth(_lvar_292, 0.) == \"g\"))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: _lvar_292)
	(d: l-nth(_lvar_292, 0.))
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(! (l-nth(_lvar_292, 0.) == \"g\"))
Gamma: 	
	(xret: $$boolean_type)
	(_lvar_292: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_292)
Pure Formulae: 	
	(! (_lvar_292 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len _lvar_292))
	(! (l-nth(_lvar_292, 0.) == \"a\"))
	(! (l-nth(_lvar_292, 0.) == \"g\"))
Gamma: 	
	(_lvar_292: $$list_type)
Preds: 

Spec Var: #s_126
Spec Var: desc
Spec Var: #s_127
Spec Var: #s_127
Spec Var: #s_128
Spec Var: #s_128
Spec Var: #s_129
Spec Var: #s_129
Spec Var: #s_130
Spec Var: #s_130
----------------------------------
----------------------------------
Symbolic execution of i__isGenericDescriptor
----------------------------------
--0--
TIME: 2.425887
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(desc = $$undefined)] 5 1
----------------------------------
I found the model: 

(define-fun _lvar_293 () Extended_JSIL_Literal
  (Set (_ as-array k!582)))
(define-fun k!582 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_293 () Extended_JSIL_Literal
  (Elem Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--0--
TIME: 2.448531
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_293)
Pure Formulae: 	
	(_lvar_293 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_293)
Pure Formulae: 	
	(_lvar_293 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(desc = $$undefined)] 5 1
----------------------------------
----------------------------------
--5--
TIME: 2.448604
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_293)
Pure Formulae: 	
	(_lvar_293 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--6--
TIME: 2.448698
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_293)
Pure Formulae: 	
	(_lvar_293 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_293)
Pure Formulae: 	
	(_lvar_293 == $$undefined)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_293)
Pure Formulae: 	
	(_lvar_293 == $$undefined)
Gamma: 	
Preds: 

----------------------------------
--0--
TIME: 2.448882
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_293)
Pure Formulae: 	
	(! (_lvar_293 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_293)
Pure Formulae: 	
	(! (_lvar_293 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(desc = $$undefined)] 5 1
----------------------------------
----------------------------------
--1--
TIME: 2.448907
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_293)
Pure Formulae: 	
	(! (_lvar_293 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_293)
Pure Formulae: 	
	(! (_lvar_293 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: dd := "i__isDataDescriptor"(desc) 
----------------------------------
Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
Pfs to add to the antiframe after unify stores: 
Failed spec vars check
Pfs to add to the antiframe after unify stores: 
Failed spec vars check
Pfs to add to the antiframe after unify stores: 
Failed spec vars check
Pfs to add to the antiframe after unify stores: 
Failed spec vars check
 !!!!( ERROR: The evaluation of this proc gave an error: 0 No precondition found for procedure i__isDataDescriptor. )!!!!
----------------------------------
----------------------------------
Symbolic execution of i__strictEquality
----------------------------------
--0--
TIME: 2.459293
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: xret := (v1 = v2)
----------------------------------
LVAR LHS: _lvar_294 
----------------------------------
--1--
TIME: 2.459325
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v1: _lvar_294)
	(xret: (_lvar_294 = _lvar_295))
	(v2: _lvar_295)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v1: _lvar_294)
	(v2: _lvar_295)
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(v1: _lvar_294)
	(xret: (_lvar_294 = _lvar_295))
	(v2: _lvar_295)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(v1: _lvar_294)
	(xret: (_lvar_294 = _lvar_295))
	(v2: _lvar_295)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_294)
	(v2: _lvar_295)
Pure Formulae: 	
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(v1: _lvar_294)
	(xret: (_lvar_294 = _lvar_295))
	(v2: _lvar_295)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v1: _lvar_294)
	(v2: _lvar_295)
Pure Formulae: 	
Gamma: 	
Preds: 

Spec Var: #s_131
Spec Var: #s_132
Spec Var: #s_131
Spec Var: #s_132
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 2.459594
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 2.459644
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
Gamma: 	
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
I found the model: 

(define-fun _lvar_296 () Extended_JSIL_Literal
  (Set (_ as-array k!594)))
(define-fun k!594 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_296 () Extended_JSIL_Literal
  (Elem Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--1--
TIME: 2.493988
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
----------------------------------
--2--
TIME: 2.494039
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--3--
TIME: 2.494079
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto 5
----------------------------------
----------------------------------
--5--
TIME: 2.494131
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
	(((((_lvar_296 == $$undefined) \/ (_lvar_296 == $$null)) \/ (typeOf(_lvar_296) == $$boolean_type)) \/ (typeOf(_lvar_296) == $$number_type)) \/ (typeOf(_lvar_296) == $$string_type))
Gamma: 	
Preds: 

----------------------------------
--1--
TIME: 2.506930
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(((((! (_lvar_296 == $$undefined)) /\ (! (_lvar_296 == $$null))) /\ (! (typeOf(_lvar_296) == $$boolean_type))) /\ (! (typeOf(_lvar_296) == $$number_type))) /\ (! (typeOf(_lvar_296) == $$string_type)))
Gamma: 	
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
	(((((! (_lvar_296 == $$undefined)) /\ (! (_lvar_296 == $$null))) /\ (! (typeOf(_lvar_296) == $$boolean_type))) /\ (! (typeOf(_lvar_296) == $$number_type))) /\ (! (typeOf(_lvar_296) == $$string_type)))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
----------------------------------
--4--
TIME: 2.506996
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(! (_lvar_296 == $$undefined))
	(! (typeOf(_lvar_296) == $$string_type))
	(! (typeOf(_lvar_296) == $$number_type))
	(! (typeOf(_lvar_296) == $$boolean_type))
	(! (_lvar_296 == $$null))
Gamma: 	
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
	(((((! (_lvar_296 == $$undefined)) /\ (! (_lvar_296 == $$null))) /\ (! (typeOf(_lvar_296) == $$boolean_type))) /\ (! (typeOf(_lvar_296) == $$number_type))) /\ (! (typeOf(_lvar_296) == $$string_type)))
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--5--
TIME: 2.507057
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(! (_lvar_296 == $$undefined))
	(! (typeOf(_lvar_296) == $$string_type))
	(! (typeOf(_lvar_296) == $$number_type))
	(! (typeOf(_lvar_296) == $$boolean_type))
	(! (_lvar_296 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
	(((((! (_lvar_296 == $$undefined)) /\ (! (_lvar_296 == $$null))) /\ (! (typeOf(_lvar_296) == $$boolean_type))) /\ (! (typeOf(_lvar_296) == $$number_type))) /\ (! (typeOf(_lvar_296) == $$string_type)))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(! (_lvar_296 == $$undefined))
	(! (typeOf(_lvar_296) == $$string_type))
	(! (typeOf(_lvar_296) == $$number_type))
	(! (typeOf(_lvar_296) == $$boolean_type))
	(! (_lvar_296 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(! (_lvar_296 == $$undefined))
	(! (typeOf(_lvar_296) == $$string_type))
	(! (typeOf(_lvar_296) == $$number_type))
	(! (typeOf(_lvar_296) == $$boolean_type))
	(! (_lvar_296 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
	(((((! (_lvar_296 == $$undefined)) /\ (! (_lvar_296 == $$null))) /\ (! (typeOf(_lvar_296) == $$boolean_type))) /\ (! (typeOf(_lvar_296) == $$number_type))) /\ (! (typeOf(_lvar_296) == $$string_type)))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(_lvar_296))
	(v: _lvar_296)
Pure Formulae: 	
	(! (_lvar_296 == $$undefined))
	(! (typeOf(_lvar_296) == $$string_type))
	(! (typeOf(_lvar_296) == $$number_type))
	(! (typeOf(_lvar_296) == $$boolean_type))
	(! (_lvar_296 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_296)
Pure Formulae: 	
	(((((! (_lvar_296 == $$undefined)) /\ (! (_lvar_296 == $$null))) /\ (! (typeOf(_lvar_296) == $$boolean_type))) /\ (! (typeOf(_lvar_296) == $$number_type))) /\ (! (typeOf(_lvar_296) == $$string_type)))
Gamma: 	
Preds: 

Spec Var: #s_133
Spec Var: #s_133
Spec Var: #s_134
Spec Var: #s_134
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 2.521490
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: d := l-nth(desc, 0.)
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
----------------------------------
--1--
TIME: 2.532954
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "d")] 19 2
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  15.0)
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Null)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
    0.0))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 15))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  15.0)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
    0.0))
I could not determine the branch.
----------------------------------
--1--
TIME: 2.562990
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 0.) == \"d\")
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 0.) == \"d\")
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "d")] 19 2
----------------------------------
----------------------------------
--19--
TIME: 2.563045
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 0.) == \"d\")
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 0.) == \"d\")
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := desc
----------------------------------
----------------------------------
--20--
TIME: 2.563090
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: _lvar_297)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 0.) == \"d\")
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 0.) == \"d\")
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: _lvar_297)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 0.) == \"d\")
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: _lvar_297)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 0.) == \"d\")
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 0.) == \"d\")
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: _lvar_297)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 0.) == \"d\")
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 0.) == \"d\")
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--1--
TIME: 2.574600
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "d")] 19 2
----------------------------------
----------------------------------
--2--
TIME: 2.574671
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "a")] 3 5
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Empty)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 17))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--2--
TIME: 2.621596
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "a")] 3 5
----------------------------------
----------------------------------
--3--
TIME: 2.621669
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", $$undefined, $$f, l-nth(d, 3.), l-nth(d, 4.) }}
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 17))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
----------------------------------
--4--
TIME: 2.640511
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: {{ \"d\", $$undefined, $$f, l-nth(l-nth(_lvar_297, 0.), 3.), l-nth(l-nth(_lvar_297, 0.), 4.) }})
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(_lvar_297, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(_lvar_297, 0.)))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
	(_lvar_298 == l-nth(_lvar_297, 0.))
	(_lvar_299 == l-nth(_lvar_297, 0.))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_299))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_299))
Gamma: 	
	(_lvar_299: $$list_type)
	(_lvar_297: $$list_type)
	(_lvar_298: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 2.640605
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: {{ \"d\", $$undefined, $$f, l-nth(l-nth(_lvar_297, 0.), 3.), l-nth(l-nth(_lvar_297, 0.), 4.) }})
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(_lvar_297, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(_lvar_297, 0.)))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
	(_lvar_298 == l-nth(_lvar_297, 0.))
	(_lvar_299 == l-nth(_lvar_297, 0.))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_299))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_299))
Gamma: 	
	(_lvar_299: $$list_type)
	(_lvar_297: $$list_type)
	(_lvar_298: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: {{ \"d\", $$undefined, $$f, l-nth(l-nth(_lvar_297, 0.), 3.), l-nth(l-nth(_lvar_297, 0.), 4.) }})
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(_lvar_297, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(_lvar_297, 0.)))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: {{ \"d\", $$undefined, $$f, l-nth(l-nth(_lvar_297, 0.), 3.), l-nth(l-nth(_lvar_297, 0.), 4.) }})
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(_lvar_297, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(_lvar_297, 0.)))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
	(_lvar_298 == l-nth(_lvar_297, 0.))
	(_lvar_299 == l-nth(_lvar_297, 0.))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_299))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_299))
Gamma: 	
	(_lvar_299: $$list_type)
	(_lvar_297: $$list_type)
	(_lvar_298: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: {{ \"d\", $$undefined, $$f, l-nth(l-nth(_lvar_297, 0.), 3.), l-nth(l-nth(_lvar_297, 0.), 4.) }})
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(_lvar_297, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(_lvar_297, 0.)))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(l-nth(_lvar_297, 0.) == \"a\")
	(_lvar_298 == l-nth(_lvar_297, 0.))
	(_lvar_299 == l-nth(_lvar_297, 0.))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_299))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_299))
Gamma: 	
	(_lvar_299: $$list_type)
	(_lvar_297: $$list_type)
	(_lvar_298: $$list_type)
Preds: 

----------------------------------
--2--
TIME: 2.655554
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(d = "a")] 3 5
----------------------------------
----------------------------------
--5--
TIME: 2.655644
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: e := l-nth(desc, 1.)
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Empty)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 1.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
----------------------------------
--6--
TIME: 2.673639
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: c := l-nth(desc, 2.)
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Empty)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 2.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
----------------------------------
--7--
TIME: 2.692571
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: v := l-nth(desc, 3.)
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Empty)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 3.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
----------------------------------
--8--
TIME: 2.727043
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: w := l-nth(desc, 4.)
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Null)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 4.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
----------------------------------
--9--
TIME: 2.747873
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(e = $$empty)] 10 11
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Null)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) Null
    Empty))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--9--
TIME: 2.793039
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(e = $$empty)] 10 11
----------------------------------
----------------------------------
--10--
TIME: 2.793160
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: e := $$f
----------------------------------
----------------------------------
--11--
TIME: 2.793280
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(c = $$empty)] 12 13
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 1.0)) Empty
    Null))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) Null
    Empty))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--11--
TIME: 2.838168
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(c = $$empty)] 12 13
----------------------------------
----------------------------------
--12--
TIME: 2.838293
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: c := $$f
----------------------------------
----------------------------------
--13--
TIME: 2.838389
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 3.0)) Undefined
    Empty))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Empty)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--13--
TIME: 2.892616
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
----------------------------------
--14--
TIME: 2.892838
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 2.893015
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 4.0)) Undefined
    Empty))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Empty)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--15--
TIME: 2.958654
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--16--
TIME: 2.959039
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 2.959459
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 2.971309
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 2.971533
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--15--
TIME: 2.987441
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--17--
TIME: 2.987648
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.002255
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), $$f, $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.002793
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), $$f, $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), $$f, $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), $$f, $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), $$f, $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--13--
TIME: 3.004667
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
----------------------------------
--15--
TIME: 3.004900
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 1.0)) Empty
  (ite (and (= x!0 Nil) (= x!1 2.0)) Empty
    Null)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) Null
  (ite (and (= x!0 Nil) (= x!1 3.0)) Null
    Empty)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--15--
TIME: 3.052494
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--16--
TIME: 3.053351
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 3.053484
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.070972
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, $$f, $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.071214
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, $$f, $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, $$f, $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, $$f, $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, $$f, $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--15--
TIME: 3.076762
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--17--
TIME: 3.077231
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.095210
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), $$f, $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.095431
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), $$f, $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), $$f, $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), $$f, $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), $$f, $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--11--
TIME: 3.097295
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(c = $$empty)] 12 13
----------------------------------
----------------------------------
--13--
TIME: 3.097425
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 2.0)) Undefined
  (ite (and (= x!0 Nil) (= x!1 3.0)) Undefined
    Empty)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 2.0)) Undefined
    Empty))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--13--
TIME: 3.156263
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
----------------------------------
--14--
TIME: 3.156384
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 3.156550
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 2.0)) Undefined
  (ite (and (= x!0 Nil) (= x!1 4.0)) Undefined
    Empty)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) Null
  (ite (and (= x!0 Nil) (= x!1 2.0)) Null
    Empty)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--15--
TIME: 3.208473
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--16--
TIME: 3.208768
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 3.209024
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.224834
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.225026
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--15--
TIME: 3.228153
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--17--
TIME: 3.228366
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.242376
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), $$f, l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.242672
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), $$f, l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), $$f, l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), $$f, l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), $$f, l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--13--
TIME: 3.244706
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
----------------------------------
--15--
TIME: 3.244849
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 1.0)) Empty
  (ite (and (= x!0 Nil) (= x!1 0.0)) Empty
    Undefined)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 2.0)) Undefined
  (ite (and (= x!0 Nil) (= x!1 3.0)) Undefined
    Empty)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--15--
TIME: 3.287943
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--16--
TIME: 3.288295
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 3.288406
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.302180
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, $$f, l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.306520
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, $$f, l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, $$f, l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, $$f, l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, $$f, l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--15--
TIME: 3.307020
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--17--
TIME: 3.307144
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.323284
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), $$f, l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.324709
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), $$f, l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), $$f, l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), $$f, l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), $$f, l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(l-nth(_lvar_297, 1.) == $$empty)
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--9--
TIME: 3.325243
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(e = $$empty)] 10 11
----------------------------------
----------------------------------
--11--
TIME: 3.325510
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(c = $$empty)] 12 13
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) Empty
    Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 1.0)) Undefined
    Empty))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--11--
TIME: 3.367142
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(c = $$empty)] 12 13
----------------------------------
----------------------------------
--12--
TIME: 3.367263
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: c := $$f
----------------------------------
----------------------------------
--13--
TIME: 3.367362
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 2.0)) Empty
    Null))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) Null
  (ite (and (= x!0 Nil) (= x!1 1.0)) Null
    Empty)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--13--
TIME: 3.413287
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
----------------------------------
--14--
TIME: 3.413407
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 3.413678
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 2.0)) Empty
  (ite (and (= x!0 Nil) (= x!1 3.0)) Empty
    Null)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) Null
  (ite (and (= x!0 Nil) (= x!1 1.0)) Null
    Empty)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--15--
TIME: 3.459591
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--16--
TIME: 3.459888
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 3.460110
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.481794
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(_lvar_297, 1.), $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.481987
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(_lvar_297, 1.), $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(_lvar_297, 1.), $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(_lvar_297, 1.), $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(_lvar_297, 1.), $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--15--
TIME: 3.482690
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--17--
TIME: 3.482872
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.498165
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.498484
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--13--
TIME: 3.499206
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
----------------------------------
--15--
TIME: 3.499331
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 2.0)) Empty
    Null))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 2.0)) Empty
  (ite (and (= x!0 Nil) (= x!1 4.0)) Empty
    Null)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--15--
TIME: 3.544432
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--16--
TIME: 3.544576
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 3.544703
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.558467
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, l-nth(_lvar_297, 1.), $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.558657
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, l-nth(_lvar_297, 1.), $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, l-nth(_lvar_297, 1.), $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, l-nth(_lvar_297, 1.), $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, l-nth(_lvar_297, 1.), $$f }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--15--
TIME: 3.560584
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--17--
TIME: 3.560745
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.575599
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.575810
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), $$f }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(c: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(l-nth(_lvar_297, 2.) == $$empty)
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--11--
TIME: 3.576302
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(c = $$empty)] 12 13
----------------------------------
----------------------------------
--13--
TIME: 3.577880
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) Empty
    Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 1.0)) Undefined
  (ite (and (= x!0 Nil) (= x!1 2.0)) Undefined
    Empty)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--13--
TIME: 3.621757
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
----------------------------------
--14--
TIME: 3.621887
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 3.622137
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 3.0)) Empty
  (ite (and (= x!0 Nil) (= x!1 0.0)) Empty
    Undefined)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 1.0)) Undefined
  (ite (and (= x!0 Nil) (= x!1 2.0)) Undefined
    Empty)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--15--
TIME: 3.665598
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--16--
TIME: 3.665809
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 3.673175
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.686489
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.686689
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--15--
TIME: 3.689214
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--17--
TIME: 3.690613
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.704991
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.705235
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: $$undefined)
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(l-nth(_lvar_297, 3.) == $$empty)
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--13--
TIME: 3.708367
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(v = $$empty)] 14 15
----------------------------------
----------------------------------
--15--
TIME: 3.709877
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  Null)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I found the model: 

(define-fun _lvar_297 () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 4.0)) Empty
    Null))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
I could not determine the branch.
----------------------------------
--15--
TIME: 3.756462
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--16--
TIME: 3.756610
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 3.756759
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.771811
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.771949
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), $$f, l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: $$f)
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(_lvar_297: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(l-nth(_lvar_297, 4.) == $$empty)
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

----------------------------------
--15--
TIME: 3.777202
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto [(w = $$empty)] 16 17
----------------------------------
----------------------------------
--17--
TIME: 3.777345
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 3.792825
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 3.792980
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Symb_state: Heap: 
	
Store: 	
	(e: l-nth(_lvar_297, 1.))
	(xret: {{ \"d\", l-nth(_lvar_297, 3.), l-nth(_lvar_297, 4.), l-nth(_lvar_297, 1.), l-nth(_lvar_297, 2.) }})
	(w: l-nth(_lvar_297, 4.))
	(desc: _lvar_297)
	(d: l-nth(_lvar_297, 0.))
	(v: l-nth(_lvar_297, 3.))
	(c: l-nth(_lvar_297, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(_lvar_297: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(desc: _lvar_297)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 0.) == \"d\"))
	(! (l-nth(_lvar_297, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len _lvar_297))
	(! (2. <# 0.))
	(2. <# (l-len _lvar_297))
	(! (3. <# 0.))
	(3. <# (l-len _lvar_297))
	(! (4. <# 0.))
	(4. <# (l-len _lvar_297))
	(! (l-nth(_lvar_297, 1.) == $$empty))
	(! (l-nth(_lvar_297, 2.) == $$empty))
	(! (l-nth(_lvar_297, 3.) == $$empty))
	(! (l-nth(_lvar_297, 4.) == $$empty))
Gamma: 	
	(_lvar_297: $$list_type)
Preds: 

Spec Var: #s_135
Spec Var: #s_135
Spec Var: #s_136
Spec Var: #s_137
Spec Var: #s_138
Spec Var: #s_136
Spec Var: #s_139
Spec Var: #s_139
Spec Var: v
Spec Var: #s_140
Spec Var: #s_140
Spec Var: v
Spec Var: #s_141
Spec Var: #s_141
Spec Var: #s_142
Spec Var: #s_142
Spec Var: #s_143
Spec Var: #s_143
Spec Var: v
Spec Var: #s_144
Spec Var: #s_144
Spec Var: v
Spec Var: #s_145
Spec Var: #s_145
Spec Var: #s_146
Spec Var: #s_146
Spec Var: #s_147
Spec Var: #s_147
Spec Var: v
Spec Var: #s_148
Spec Var: #s_148
Spec Var: v
Spec Var: #s_149
Spec Var: #s_149
Spec Var: #s_150
Spec Var: #s_150
Spec Var: #s_151
Spec Var: #s_151
Spec Var: v
Spec Var: #s_152
Spec Var: #s_152
Spec Var: v
Spec Var: #s_153
Spec Var: #s_153
Spec Var: #s_154
Spec Var: #s_154
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 3.800926
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$undefined)] 1 3
----------------------------------
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Set (_ as-array k!804)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!804 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Elem Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--0--
TIME: 3.821438
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(_lvar_300 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(_lvar_300 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$undefined)] 1 3
----------------------------------
----------------------------------
--1--
TIME: 3.821524
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(_lvar_300 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--2--
TIME: 3.821602
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(_lvar_300 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 3.821674
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$undefined_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(_lvar_300 == $$undefined)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$undefined_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(_lvar_300 == $$undefined)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$undefined_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(_lvar_300 == $$undefined)
Gamma: 	
Preds: 

----------------------------------
--0--
TIME: 3.821854
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$undefined)] 1 3
----------------------------------
----------------------------------
--3--
TIME: 3.821879
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$null)] 4 6
----------------------------------
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Set (_ as-array k!814)))
(define-fun k!814 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Elem Null))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--3--
TIME: 3.844075
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(_lvar_300 == $$null)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(_lvar_300 == $$null)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$null)] 4 6
----------------------------------
----------------------------------
--4--
TIME: 3.844163
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(_lvar_300 == $$null)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--5--
TIME: 3.844242
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$null_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(_lvar_300 == $$null)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 3.844315
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$null_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(_lvar_300 == $$null)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$null_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$null_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(_lvar_300 == $$null)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$null_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(_lvar_300 == $$null)
Gamma: 	
Preds: 

----------------------------------
--3--
TIME: 3.851120
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = $$null)] 4 6
----------------------------------
----------------------------------
--6--
TIME: 3.851168
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Set (_ as-array k!825)))
(define-fun k!825 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--6--
TIME: 3.876834
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
----------------------------------
--7--
TIME: 3.876878
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := v
----------------------------------
----------------------------------
--8--
TIME: 3.876926
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: _lvar_300)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 3.876955
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: _lvar_300)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: _lvar_300)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: _lvar_300)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: _lvar_300)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(typeOf(_lvar_300) == $$boolean_type)
Gamma: 	
Preds: 

----------------------------------
--6--
TIME: 3.888746
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
----------------------------------
--9--
TIME: 3.888804
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$number_type)] 10 11
----------------------------------
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Set (_ as-array k!838)))
(define-fun k!838 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--9--
TIME: 3.922117
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$number_type)] 10 11
----------------------------------
----------------------------------
--10--
TIME: 3.922166
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [((v = 0.) or (not (v = v)))] 19 17
----------------------------------
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Elem (Num 1.0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--10--
TIME: 3.955607
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((_lvar_300 == 0.) \/ (! (_lvar_300 == _lvar_300)))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((_lvar_300 == 0.) \/ (! (_lvar_300 == _lvar_300)))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [((v = 0.) or (not (v = v)))] 19 17
----------------------------------
----------------------------------
--19--
TIME: 3.955662
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: 0.)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
Gamma: 	
	(v: $$number_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((_lvar_300 == 0.) \/ (! (_lvar_300 == _lvar_300)))
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--20--
TIME: 3.955697
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: 0.)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$number_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((_lvar_300 == 0.) \/ (! (_lvar_300 == _lvar_300)))
Gamma: 	
Preds: 
 -------- 
 CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 3.955727
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: 0.)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$number_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((_lvar_300 == 0.) \/ (! (_lvar_300 == _lvar_300)))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(v: 0.)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$number_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(v: 0.)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$number_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((_lvar_300 == 0.) \/ (! (_lvar_300 == _lvar_300)))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(v: 0.)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$number_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((_lvar_300 == 0.) \/ (! (_lvar_300 == _lvar_300)))
Gamma: 	
Preds: 

----------------------------------
--10--
TIME: 3.971594
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((! (_lvar_300 == 0.)) /\ (_lvar_300 == _lvar_300))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((! (_lvar_300 == 0.)) /\ (_lvar_300 == _lvar_300))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [((v = 0.) or (not (v = v)))] 19 17
----------------------------------
----------------------------------
--17--
TIME: 3.971646
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	(! (_lvar_300 == 0.))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((! (_lvar_300 == 0.)) /\ (_lvar_300 == _lvar_300))
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--18--
TIME: 3.971685
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	(! (_lvar_300 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((! (_lvar_300 == 0.)) /\ (_lvar_300 == _lvar_300))
Gamma: 	
Preds: 
 -------- 
 CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 3.971721
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	(! (_lvar_300 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((! (_lvar_300 == 0.)) /\ (_lvar_300 == _lvar_300))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	(! (_lvar_300 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	(! (_lvar_300 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((! (_lvar_300 == 0.)) /\ (_lvar_300 == _lvar_300))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	(! (_lvar_300 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(typeOf(_lvar_300) == $$number_type)
	((! (_lvar_300 == 0.)) /\ (_lvar_300 == _lvar_300))
Gamma: 	
Preds: 

----------------------------------
--9--
TIME: 3.990165
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$number_type)] 10 11
----------------------------------
----------------------------------
--11--
TIME: 3.990237
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$string_type)] 12 14
----------------------------------
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Set (_ as-array k!861)))
(define-fun k!861 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Elem (String 0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--11--
TIME: 4.061974
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$string_type)] 12 14
----------------------------------
----------------------------------
--12--
TIME: 4.062044
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "")] 19 17
----------------------------------
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Elem (String 1)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Elem (String 0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--12--
TIME: 4.104284
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(_lvar_300 == \"\")
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(_lvar_300 == \"\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "")] 19 17
----------------------------------
----------------------------------
--19--
TIME: 4.104344
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: \"\")
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
Gamma: 	
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(_lvar_300 == \"\")
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--20--
TIME: 4.104383
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"\")
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(_lvar_300 == \"\")
Gamma: 	
Preds: 
 -------- 
 CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 4.104419
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"\")
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(_lvar_300 == \"\")
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"\")
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"\")
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(_lvar_300 == \"\")
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"\")
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$list_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(_lvar_300 == \"\")
Gamma: 	
Preds: 

----------------------------------
--12--
TIME: 4.118400
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(v = "")] 19 17
----------------------------------
----------------------------------
--17--
TIME: 4.118473
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--18--
TIME: 4.118893
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
Preds: 
 -------- 
 CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 4.118934
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(typeOf(_lvar_300) == $$string_type)
	(! (_lvar_300 == \"\"))
Gamma: 	
Preds: 

----------------------------------
--11--
TIME: 4.132774
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$string_type)] 12 14
----------------------------------
----------------------------------
--14--
TIME: 4.132832
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$object_type)] 15 21
----------------------------------
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Set (_ as-array k!884)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!884 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_300 () Extended_JSIL_Literal
  (Elem (Loc 0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--14--
TIME: 4.172790
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$object_type)] 15 21
----------------------------------
----------------------------------
--15--
TIME: 4.172874
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$t
----------------------------------
----------------------------------
--16--
TIME: 4.172923
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 4.172964
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(typeOf(_lvar_300) == $$object_type)
Gamma: 	
Preds: 

----------------------------------
--14--
TIME: 4.200576
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(! (typeOf(_lvar_300) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(! (typeOf(_lvar_300) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(v) = $$object_type)] 15 21
----------------------------------
----------------------------------
--21--
TIME: 4.200650
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(! (typeOf(_lvar_300) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(! (typeOf(_lvar_300) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 CMD: xret := "ToBoolean: This should not happen."
----------------------------------
----------------------------------
--22--
TIME: 4.200695
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: \"ToBoolean: This should not happen.\")
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(! (typeOf(_lvar_300) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(! (typeOf(_lvar_300) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: \"ToBoolean: This should not happen.\")
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(! (typeOf(_lvar_300) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: \"ToBoolean: This should not happen.\")
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(! (typeOf(_lvar_300) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(! (typeOf(_lvar_300) == $$object_type))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: \"ToBoolean: This should not happen.\")
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(! (typeOf(_lvar_300) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(v: _lvar_300)
Pure Formulae: 	
	(! (_lvar_300 == $$undefined))
	(! (_lvar_300 == $$null))
	(! (typeOf(_lvar_300) == $$boolean_type))
	(! (typeOf(_lvar_300) == $$number_type))
	(! (typeOf(_lvar_300) == $$string_type))
	(! (typeOf(_lvar_300) == $$object_type))
Gamma: 	
Preds: 

Spec Var: #s_155
Spec Var: v
Spec Var: #s_156
Spec Var: v
Spec Var: #s_157
Spec Var: #s_157
Spec Var: #s_158
Spec Var: #s_159
Spec Var: #s_159
Spec Var: #s_160
Spec Var: #s_161
Spec Var: #s_161
Spec Var: #s_162
Spec Var: #s_162
Spec Var: #s_163
Spec Var: #s_163
----------------------------------
----------------------------------
Symbolic execution of o__getOwnProperty
----------------------------------
--0--
TIME: 4.217528
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: x := hasField(l,prop)
----------------------------------
----------------------------------
--1--
TIME: 4.217574
 ---- STATE: ---- 
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (_lvar_303 = None)))
Pure Formulae: 	
Gamma: 	
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [x] 4 2
----------------------------------
I found the model: 

(define-fun _lvar_303 () Extended_JSIL_Literal
  (Elem None))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_303 () Extended_JSIL_Literal
  (Set (_ as-array k!903)))
(define-fun k!903 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--1--
TIME: 4.238008
 ---- STATE: ---- 
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (_lvar_303 = None)))
Pure Formulae: 	
	(! (_lvar_303 == None))
Gamma: 	
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
	(! (_lvar_303 == None))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [x] 4 2
----------------------------------
----------------------------------
--4--
TIME: 4.238053
 ---- STATE: ---- 
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (_lvar_303 = None)))
Pure Formulae: 	
	(! (_lvar_303 == None))
Gamma: 	
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
	(! (_lvar_303 == None))
Gamma: 	
Preds: 
 -------- 
 CMD: xret := [l, prop]
----------------------------------
----------------------------------
--5--
TIME: 4.238105
 ---- STATE: ---- 
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(xret: _lvar_303)
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (_lvar_303 = None)))
Pure Formulae: 	
	(! (_lvar_303 == None))
Gamma: 	
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
	(! (_lvar_303 == None))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(xret: _lvar_303)
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (_lvar_303 = None)))
Pure Formulae: 	
	(! (_lvar_303 == None))
Gamma: 	
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(xret: _lvar_303)
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (_lvar_303 = None)))
Pure Formulae: 	
	(! (_lvar_303 == None))
Gamma: 	
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 

anti_frame: Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
	(! (_lvar_303 == None))
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(xret: _lvar_303)
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (_lvar_303 = None)))
Pure Formulae: 	
	(! (_lvar_303 == None))
Gamma: 	
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 

anti_frame: Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
	(! (_lvar_303 == None))
Gamma: 	
Preds: 

----------------------------------
--1--
TIME: 4.247413
 ---- STATE: ---- 
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (_lvar_303 = None)))
Pure Formulae: 	
	(_lvar_303 == None)
Gamma: 	
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
	(_lvar_303 == None)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [x] 4 2
----------------------------------
typing the jsil equality. t1: $$none_type. t2: $$none_type.
----------------------------------
--2--
TIME: 4.247462
 ---- STATE: ---- 
Heap: 
	_$l_25 |-> [(_lvar_302: None), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (None = None)))
Pure Formulae: 	
Gamma: 	
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
	(_lvar_303 == None)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$undefined
----------------------------------
typing the jsil equality. t1: $$none_type. t2: $$none_type.
typing the jsil equality. t1: $$none_type. t2: $$none_type.
typing the jsil equality. t1: $$none_type. t2: $$none_type.
----------------------------------
--3--
TIME: 4.247558
 ---- STATE: ---- 
Heap: 
	_$l_25 |-> [(_lvar_302: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (None = None)))
Pure Formulae: 	
Gamma: 	
	(xret: $$undefined_type)
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
	(_lvar_303 == None)
Gamma: 	
Preds: 
 -------- 
 CMD: goto 5
----------------------------------
typing the jsil equality. t1: $$none_type. t2: $$none_type.
typing the jsil equality. t1: $$none_type. t2: $$none_type.
typing the jsil equality. t1: $$none_type. t2: $$none_type.
----------------------------------
--5--
TIME: 4.247667
 ---- STATE: ---- 
Heap: 
	_$l_25 |-> [(_lvar_302: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (None = None)))
Pure Formulae: 	
Gamma: 	
	(xret: $$undefined_type)
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
	(_lvar_303 == None)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
typing the jsil equality. t1: $$none_type. t2: $$none_type.
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_25 |-> [(_lvar_302: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (None = None)))
Pure Formulae: 	
Gamma: 	
	(xret: $$undefined_type)
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_25 |-> [(_lvar_302: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (None = None)))
Pure Formulae: 	
Gamma: 	
	(xret: $$undefined_type)
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 

anti_frame: Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
	(_lvar_303 == None)
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_25 |-> [(_lvar_302: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: _lvar_302)
	(l: _$l_25)
	(x: (not (None = None)))
Pure Formulae: 	
Gamma: 	
	(xret: $$undefined_type)
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 

anti_frame: Heap: 
	_$l_25 |-> [(_lvar_302: _lvar_303), (default: $$unknown)]
Store: 	
	(prop: _lvar_302)
	(l: _lvar_301)
Pure Formulae: 	
	(_$l_25 == _lvar_301)
	(_lvar_303 == None)
Gamma: 	
Preds: 

typing the jsil equality. t1: $$none_type. t2: $$none_type.
Spec Var: #s_164
Spec Var: #s_165
Spec Var: #s_166
Spec Var: #s_165
Spec Var: #s_166
typing the jsil equality. t1: $$none_type. t2: $$none_type.
Spec Var: #s_167
Spec Var: #s_168
Spec Var: #s_169
Spec Var: #s_168
Spec Var: xret
----------------------------------
----------------------------------
Symbolic execution of i__isCallable
----------------------------------
--0--
TIME: 4.248025
 ---- STATE: ---- 
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 4.255190
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(l) = $$object_type)] 2 3
----------------------------------
I found the model: 

(define-fun _lvar_304 () Extended_JSIL_Literal
  (Set (_ as-array k!911)))
(define-fun k!911 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _lvar_304 () Extended_JSIL_Literal
  (Elem (Loc 0)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I could not determine the branch.
----------------------------------
--1--
TIME: 4.280789
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(l: _lvar_304)
Pure Formulae: 	
	(typeOf(_lvar_304) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(l: _lvar_304)
Pure Formulae: 	
	(typeOf(_lvar_304) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(l) = $$object_type)] 2 3
----------------------------------
----------------------------------
--2--
TIME: 4.280843
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(l: _lvar_304)
Pure Formulae: 	
	(typeOf(_lvar_304) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(l: _lvar_304)
Pure Formulae: 	
	(typeOf(_lvar_304) == $$object_type)
Gamma: 	
Preds: 
 -------- 
 CMD: xret := hasField(l,"@call")
----------------------------------
----------------------------------
--3--
TIME: 4.280887
 ---- STATE: ---- 
Heap: 
	_$l_26 |-> [(\"@call\": _lvar_305), (default: $$unknown)]
Store: 	
	(xret: (not (_lvar_305 = None)))
	(l: _$l_26)
Pure Formulae: 	
	(typeOf(_$l_26) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	_$l_26 |-> [(\"@call\": _lvar_305), (default: $$unknown)]
Store: 	
	(l: _lvar_304)
Pure Formulae: 	
	(typeOf(_lvar_304) == $$object_type)
	(_$l_26 == _lvar_304)
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	_$l_26 |-> [(\"@call\": _lvar_305), (default: $$unknown)]
Store: 	
	(xret: (not (_lvar_305 = None)))
	(l: _$l_26)
Pure Formulae: 	
	(typeOf(_$l_26) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	_$l_26 |-> [(\"@call\": _lvar_305), (default: $$unknown)]
Store: 	
	(xret: (not (_lvar_305 = None)))
	(l: _$l_26)
Pure Formulae: 	
	(typeOf(_$l_26) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_26 |-> [(\"@call\": _lvar_305), (default: $$unknown)]
Store: 	
	(l: _lvar_304)
Pure Formulae: 	
	(typeOf(_lvar_304) == $$object_type)
	(_$l_26 == _lvar_304)
Gamma: 	
Preds: 

Symb_state: Heap: 
	_$l_26 |-> [(\"@call\": _lvar_305), (default: $$unknown)]
Store: 	
	(xret: (not (_lvar_305 = None)))
	(l: _$l_26)
Pure Formulae: 	
	(typeOf(_$l_26) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 

anti_frame: Heap: 
	_$l_26 |-> [(\"@call\": _lvar_305), (default: $$unknown)]
Store: 	
	(l: _lvar_304)
Pure Formulae: 	
	(typeOf(_lvar_304) == $$object_type)
	(_$l_26 == _lvar_304)
Gamma: 	
Preds: 

----------------------------------
--1--
TIME: 4.292690
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(l: _lvar_304)
Pure Formulae: 	
	(! (typeOf(_lvar_304) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(l: _lvar_304)
Pure Formulae: 	
	(! (typeOf(_lvar_304) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 CMD: goto [(typeOf(l) = $$object_type)] 2 3
----------------------------------
----------------------------------
--3--
TIME: 4.292732
 ---- STATE: ---- 
Heap: 
	
Store: 	
	(xret: $$f)
	(l: _lvar_304)
Pure Formulae: 	
	(! (typeOf(_lvar_304) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
 -------- 
 ---- ANTI_FRAME: ----
Heap: 
	
Store: 	
	(l: _lvar_304)
Pure Formulae: 	
	(! (typeOf(_lvar_304) == $$object_type))
Gamma: 	
Preds: 
 -------- 
 CMD: skip
----------------------------------
About to bi-unify the current symb state against the posts. Here it is: Heap: 
	
Store: 	
	(xret: $$f)
	(l: _lvar_304)
Pure Formulae: 	
	(! (typeOf(_lvar_304) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

Pfs to add to the antiframe after unify stores: 
Pfs to add to the antiframe after step 0: 
I AM in the case - fully unified with possible antiframe, MARICA!!!!
The substitution: Substitution: 
	

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(l: _lvar_304)
Pure Formulae: 	
	(! (typeOf(_lvar_304) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(l: _lvar_304)
Pure Formulae: 	
	(! (typeOf(_lvar_304) == $$object_type))
Gamma: 	
Preds: 

Symb_state: Heap: 
	
Store: 	
	(xret: $$f)
	(l: _lvar_304)
Pure Formulae: 	
	(! (typeOf(_lvar_304) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 

anti_frame: Heap: 
	
Store: 	
	(l: _lvar_304)
Pure Formulae: 	
	(! (typeOf(_lvar_304) == $$object_type))
Gamma: 	
Preds: 

Spec Var: #s_170
Spec Var: #s_171
Spec Var: #s_171
Spec Var: #s_172
Spec Var: #s_172

********** Finished bi-abduction symbolic execution. **********


**********    Starting normal symbolic execution.    **********

----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 4.320612
STATE:
Heap: 
	
Store: 	
	(v1: #s_0)
	(v2: #s_1)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(#s_1: $$number_type)
	(#s_0: $$number_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
LVAR LHS: #s_0 
typing the jsil equality. t1: $$number_type. t2: $$number_type.
----------------------------------
--1--
TIME: 4.320760
STATE:
Heap: 
	
Store: 	
	(v1: #s_0)
	(xret: (#s_0 = #s_1))
	(v2: #s_1)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$number_type)
	(#s_0: $$number_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 4.320971
STATE:
Heap: 
	
Store: 	
	(v1: #s_0)
	(xret: (#s_0 = #s_1))
	(v2: #s_1)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$number_type)
	(#s_0: $$number_type)
Preds: 
CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 4.321153
STATE:
Heap: 
	
Store: 	
	(v1: #s_0)
	(xret: (#s_0 = #s_1))
	(v2: #s_1)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$number_type)
	(#s_0: $$number_type)
Preds: 
CMD: goto [(not (v1 = v1))] 4 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.321413
STATE:
Heap: 
	
Store: 	
	(v1: #s_0)
	(xret: (#s_0 = #s_1))
	(v2: #s_1)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$number_type)
	(#s_0: $$number_type)
Preds: 
CMD: goto [(v1 = 0.)] 6 12
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 4.321640
STATE:
Heap: 
	
Store: 	
	(v1: #s_0)
	(xret: (#s_0 = #s_1))
	(v2: #s_1)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$number_type)
	(#s_0: $$number_type)
Preds: 
CMD: goto [(v2 = 0.)] 7 12
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 4.321860
STATE:
Heap: 
	
Store: 	
	(v1: #s_0)
	(xret: (#s_0 = #s_1))
	(v2: #s_1)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$number_type)
	(#s_0: $$number_type)
Preds: 
CMD: sv1 := (m_sgn v1)
----------------------------------
----------------------------------
--8--
TIME: 4.322017
STATE:
Heap: 
	
Store: 	
	(v1: #s_0)
	(xret: (#s_0 = #s_1))
	(v2: #s_1)
	(sv1: (m_sgn #s_0))
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$number_type)
	(#s_0: $$number_type)
	(sv1: $$number_type)
Preds: 
CMD: sv2 := (m_sgn v2)
----------------------------------
----------------------------------
--9--
TIME: 4.322241
STATE:
Heap: 
	
Store: 	
	(v1: #s_0)
	(xret: (#s_0 = #s_1))
	(v2: #s_1)
	(sv2: (m_sgn #s_1))
	(sv1: (m_sgn #s_0))
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$number_type)
	(sv2: $$number_type)
	(#s_0: $$number_type)
	(sv1: $$number_type)
Preds: 
CMD: xret := (sv1 = sv2)
----------------------------------
LVAR LHS: (m_sgn #s_0) 
typing the jsil equality. t1: $$number_type. t2: $$number_type.
----------------------------------
--10--
TIME: 4.322455
STATE:
Heap: 
	
Store: 	
	(v1: #s_0)
	(xret: ((m_sgn #s_0) = (m_sgn #s_1)))
	(v2: #s_1)
	(sv2: (m_sgn #s_1))
	(sv1: (m_sgn #s_0))
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$number_type)
	(sv2: $$number_type)
	(#s_0: $$number_type)
	(sv1: $$number_type)
Preds: 
CMD: goto 12
----------------------------------
----------------------------------
--12--
TIME: 4.322605
STATE:
Heap: 
	
Store: 	
	(v1: #s_0)
	(xret: ((m_sgn #s_0) = (m_sgn #s_1)))
	(v2: #s_1)
	(sv2: (m_sgn #s_1))
	(sv1: (m_sgn #s_0))
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_1: $$number_type)
	(sv2: $$number_type)
	(#s_0: $$number_type)
	(sv1: $$number_type)
Preds: 
CMD: skip
----------------------------------
typing the jsil equality. t1: $$number_type. t2: $$number_type.
SMT encoding: Construct not supported yet - unop - m_sgn!
The EVALUATION OF THIS PROC GAVE AN ERROR: 0 SMT encoding: Construct not supported yet - unop - m_sgn!!!!!
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 4.334427
STATE:
Heap: 
	
Store: 	
	(v1: #s_2)
	(v2: #s_3)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(#s_3) == $$number_type)
	(! (#s_3 == 0.))
	(#s_2 == 0.)
Gamma: 	
	(#s_2: $$number_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
LVAR LHS: #s_2 
----------------------------------
--1--
TIME: 4.334513
STATE:
Heap: 
	
Store: 	
	(v1: #s_2)
	(xret: (#s_2 = #s_3))
	(v2: #s_3)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(#s_3) == $$number_type)
	(! (#s_3 == 0.))
	(#s_2 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_2: $$number_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 4.350279
STATE:
Heap: 
	
Store: 	
	(v1: #s_2)
	(xret: (#s_2 = #s_3))
	(v2: #s_3)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(#s_3) == $$number_type)
	(! (#s_3 == 0.))
	(#s_2 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_2: $$number_type)
Preds: 
CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 4.352983
STATE:
Heap: 
	
Store: 	
	(v1: #s_2)
	(xret: (#s_2 = #s_3))
	(v2: #s_3)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(#s_3) == $$number_type)
	(! (#s_3 == 0.))
	(#s_2 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_2: $$number_type)
Preds: 
CMD: goto [(not (v1 = v1))] 4 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.353121
STATE:
Heap: 
	
Store: 	
	(v1: #s_2)
	(xret: (#s_2 = #s_3))
	(v2: #s_3)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(#s_3) == $$number_type)
	(! (#s_3 == 0.))
	(#s_2 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_2: $$number_type)
Preds: 
CMD: goto [(v1 = 0.)] 6 12
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 4.353233
STATE:
Heap: 
	
Store: 	
	(v1: #s_2)
	(xret: (#s_2 = #s_3))
	(v2: #s_3)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(#s_3) == $$number_type)
	(! (#s_3 == 0.))
	(#s_2 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_2: $$number_type)
Preds: 
CMD: goto [(v2 = 0.)] 7 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 4.353367
STATE:
Heap: 
	
Store: 	
	(v1: #s_2)
	(xret: (#s_2 = #s_3))
	(v2: #s_3)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(#s_3) == $$number_type)
	(! (#s_3 == 0.))
	(#s_2 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_2: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 4.353920
STATE:
Heap: 
	
Store: 	
	(v1: #s_4)
	(v2: #s_5)
Pure Formulae: 	
	(typeOf(#s_4) == $$number_type)
	(typeOf(#s_5) == $$number_type)
	(! (#s_4 == 0.))
Gamma: 	
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
LVAR LHS: #s_4 
----------------------------------
--1--
TIME: 4.354047
STATE:
Heap: 
	
Store: 	
	(v1: #s_4)
	(xret: (#s_4 = #s_5))
	(v2: #s_5)
Pure Formulae: 	
	(typeOf(#s_4) == $$number_type)
	(typeOf(#s_5) == $$number_type)
	(! (#s_4 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 4.369060
STATE:
Heap: 
	
Store: 	
	(v1: #s_4)
	(xret: (#s_4 = #s_5))
	(v2: #s_5)
Pure Formulae: 	
	(typeOf(#s_4) == $$number_type)
	(typeOf(#s_5) == $$number_type)
	(! (#s_4 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 4.369165
STATE:
Heap: 
	
Store: 	
	(v1: #s_4)
	(xret: (#s_4 = #s_5))
	(v2: #s_5)
Pure Formulae: 	
	(typeOf(#s_4) == $$number_type)
	(typeOf(#s_5) == $$number_type)
	(! (#s_4 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(not (v1 = v1))] 4 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.369277
STATE:
Heap: 
	
Store: 	
	(v1: #s_4)
	(xret: (#s_4 = #s_5))
	(v2: #s_5)
Pure Formulae: 	
	(typeOf(#s_4) == $$number_type)
	(typeOf(#s_5) == $$number_type)
	(! (#s_4 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v1 = 0.)] 6 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 4.369540
STATE:
Heap: 
	
Store: 	
	(v1: #s_4)
	(xret: (#s_4 = #s_5))
	(v2: #s_5)
Pure Formulae: 	
	(typeOf(#s_4) == $$number_type)
	(typeOf(#s_5) == $$number_type)
	(! (#s_4 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 4.370011
STATE:
Heap: 
	
Store: 	
	(v1: #s_6)
	(v2: #s_7)
Pure Formulae: 	
	(typeOf(#s_6) == $$number_type)
	(! (typeOf(#s_7) == $$number_type))
Gamma: 	
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
LVAR LHS: #s_6 
----------------------------------
--1--
TIME: 4.370129
STATE:
Heap: 
	
Store: 	
	(v1: #s_6)
	(xret: (#s_6 = #s_7))
	(v2: #s_7)
Pure Formulae: 	
	(typeOf(#s_6) == $$number_type)
	(! (typeOf(#s_7) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 4.383995
STATE:
Heap: 
	
Store: 	
	(v1: #s_6)
	(xret: (#s_6 = #s_7))
	(v2: #s_7)
Pure Formulae: 	
	(typeOf(#s_6) == $$number_type)
	(! (typeOf(#s_7) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 4.384111
STATE:
Heap: 
	
Store: 	
	(v1: #s_6)
	(xret: (#s_6 = #s_7))
	(v2: #s_7)
Pure Formulae: 	
	(typeOf(#s_6) == $$number_type)
	(! (typeOf(#s_7) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 4.386561
STATE:
Heap: 
	
Store: 	
	(v1: #s_8)
	(v2: #s_9)
Pure Formulae: 	
	(! (typeOf(#s_8) == $$number_type))
Gamma: 	
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
LVAR LHS: #s_8 
----------------------------------
--1--
TIME: 4.386628
STATE:
Heap: 
	
Store: 	
	(v1: #s_8)
	(xret: (#s_8 = #s_9))
	(v2: #s_9)
Pure Formulae: 	
	(! (typeOf(#s_8) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 4.397265
STATE:
Heap: 
	
Store: 	
	(v1: #s_8)
	(xret: (#s_8 = #s_9))
	(v2: #s_9)
Pure Formulae: 	
	(! (typeOf(#s_8) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of create_default_object
----------------------------------
--0--
TIME: 4.397561
STATE:
Heap: 
	_$l_0 |-> [(\"@extensible\": #s_16), (\"@class\": #s_15), (\"@proto\": #s_14), (default: $$unknown)]
Store: 	
	(pr: #s_13)
	(ext: $$undefined)
	(cl: $$undefined)
	(l: #s_12)
Pure Formulae: 	
	(#s_10 == $$undefined)
	(#s_11 == $$undefined)
	(#s_12 == _$l_0)
Gamma: 	
	(#s_12: $$object_type)
	(ext: $$undefined_type)
	(cl: $$undefined_type)
	(#s_10: $$undefined_type)
	(l: $$object_type)
	(#s_11: $$undefined_type)
Preds: 
CMD: goto [(cl = $$undefined)] 1 2
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 4.397721
STATE:
Heap: 
	_$l_0 |-> [(\"@extensible\": #s_16), (\"@class\": #s_15), (\"@proto\": #s_14), (default: $$unknown)]
Store: 	
	(pr: #s_13)
	(ext: $$undefined)
	(cl: $$undefined)
	(l: #s_12)
Pure Formulae: 	
	(#s_10 == $$undefined)
	(#s_11 == $$undefined)
	(#s_12 == _$l_0)
Gamma: 	
	(#s_12: $$object_type)
	(ext: $$undefined_type)
	(#s_10: $$undefined_type)
	(cl: $$undefined_type)
	(l: $$object_type)
	(#s_11: $$undefined_type)
Preds: 
CMD: cl := "Object"
----------------------------------
----------------------------------
--2--
TIME: 4.397836
STATE:
Heap: 
	_$l_0 |-> [(\"@extensible\": #s_16), (\"@class\": #s_15), (\"@proto\": #s_14), (default: $$unknown)]
Store: 	
	(pr: #s_13)
	(ext: $$undefined)
	(cl: \"Object\")
	(l: #s_12)
Pure Formulae: 	
	(#s_10 == $$undefined)
	(#s_11 == $$undefined)
	(#s_12 == _$l_0)
Gamma: 	
	(#s_12: $$object_type)
	(ext: $$undefined_type)
	(cl: $$string_type)
	(#s_10: $$undefined_type)
	(l: $$object_type)
	(#s_11: $$undefined_type)
Preds: 
CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 4.397997
STATE:
Heap: 
	_$l_0 |-> [(\"@extensible\": #s_16), (\"@class\": #s_15), (\"@proto\": #s_14), (default: $$unknown)]
Store: 	
	(pr: #s_13)
	(ext: $$undefined)
	(cl: \"Object\")
	(l: #s_12)
Pure Formulae: 	
	(#s_10 == $$undefined)
	(#s_11 == $$undefined)
	(#s_12 == _$l_0)
Gamma: 	
	(#s_12: $$object_type)
	(ext: $$undefined_type)
	(#s_10: $$undefined_type)
	(cl: $$string_type)
	(l: $$object_type)
	(#s_11: $$undefined_type)
Preds: 
CMD: ext := $$t
----------------------------------
----------------------------------
--4--
TIME: 4.398109
STATE:
Heap: 
	_$l_0 |-> [(\"@extensible\": #s_16), (\"@class\": #s_15), (\"@proto\": #s_14), (default: $$unknown)]
Store: 	
	(pr: #s_13)
	(ext: $$t)
	(cl: \"Object\")
	(l: #s_12)
Pure Formulae: 	
	(#s_10 == $$undefined)
	(#s_11 == $$undefined)
	(#s_12 == _$l_0)
Gamma: 	
	(#s_12: $$object_type)
	(ext: $$boolean_type)
	(cl: $$string_type)
	(#s_10: $$undefined_type)
	(l: $$object_type)
	(#s_11: $$undefined_type)
Preds: 
CMD: [l, "@proto"] := pr
----------------------------------
----------------------------------
--5--
TIME: 4.399405
STATE:
Heap: 
	_$l_0 |-> [(\"@proto\": #s_13), (\"@class\": #s_15), (\"@extensible\": #s_16), (default: $$unknown)]
Store: 	
	(pr: #s_13)
	(ext: $$t)
	(cl: \"Object\")
	(l: #s_12)
Pure Formulae: 	
	(#s_10 == $$undefined)
	(#s_11 == $$undefined)
	(#s_12 == _$l_0)
Gamma: 	
	(#s_12: $$object_type)
	(ext: $$boolean_type)
	(#s_10: $$undefined_type)
	(cl: $$string_type)
	(l: $$object_type)
	(#s_11: $$undefined_type)
Preds: 
CMD: [l, "@class"] := cl
----------------------------------
----------------------------------
--6--
TIME: 4.399542
STATE:
Heap: 
	_$l_0 |-> [(\"@class\": \"Object\"), (\"@proto\": #s_13), (\"@extensible\": #s_16), (default: $$unknown)]
Store: 	
	(pr: #s_13)
	(ext: $$t)
	(cl: \"Object\")
	(l: #s_12)
Pure Formulae: 	
	(#s_10 == $$undefined)
	(#s_11 == $$undefined)
	(#s_12 == _$l_0)
Gamma: 	
	(#s_12: $$object_type)
	(ext: $$boolean_type)
	(cl: $$string_type)
	(#s_10: $$undefined_type)
	(l: $$object_type)
	(#s_11: $$undefined_type)
Preds: 
CMD: [l, "@extensible"] := ext
----------------------------------
----------------------------------
--7--
TIME: 4.399677
STATE:
Heap: 
	_$l_0 |-> [(\"@extensible\": $$t), (\"@proto\": #s_13), (\"@class\": \"Object\"), (default: $$unknown)]
Store: 	
	(pr: #s_13)
	(ext: $$t)
	(cl: \"Object\")
	(l: #s_12)
Pure Formulae: 	
	(#s_10 == $$undefined)
	(#s_11 == $$undefined)
	(#s_12 == _$l_0)
Gamma: 	
	(#s_12: $$object_type)
	(ext: $$boolean_type)
	(#s_10: $$undefined_type)
	(cl: $$string_type)
	(l: $$object_type)
	(#s_11: $$undefined_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_default_object
----------------------------------
----------------------------------
Symbolic execution of create_default_object
----------------------------------
--0--
TIME: 4.400059
STATE:
Heap: 
	_$l_1 |-> [(\"@extensible\": #s_23), (\"@class\": #s_22), (\"@proto\": #s_21), (default: $$unknown)]
Store: 	
	(pr: #s_20)
	(ext: #s_18)
	(cl: $$undefined)
	(l: #s_19)
Pure Formulae: 	
	(! (#s_18 == $$undefined))
	(#s_17 == $$undefined)
	(#s_19 == _$l_1)
Gamma: 	
	(#s_19: $$object_type)
	(cl: $$undefined_type)
	(l: $$object_type)
	(#s_17: $$undefined_type)
Preds: 
CMD: goto [(cl = $$undefined)] 1 2
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 4.411264
STATE:
Heap: 
	_$l_1 |-> [(\"@extensible\": #s_23), (\"@class\": #s_22), (\"@proto\": #s_21), (default: $$unknown)]
Store: 	
	(pr: #s_20)
	(ext: #s_18)
	(cl: $$undefined)
	(l: #s_19)
Pure Formulae: 	
	(! (#s_18 == $$undefined))
	(#s_17 == $$undefined)
	(#s_19 == _$l_1)
Gamma: 	
	(#s_19: $$object_type)
	(cl: $$undefined_type)
	(l: $$object_type)
	(#s_17: $$undefined_type)
Preds: 
CMD: cl := "Object"
----------------------------------
----------------------------------
--2--
TIME: 4.411412
STATE:
Heap: 
	_$l_1 |-> [(\"@extensible\": #s_23), (\"@class\": #s_22), (\"@proto\": #s_21), (default: $$unknown)]
Store: 	
	(pr: #s_20)
	(ext: #s_18)
	(cl: \"Object\")
	(l: #s_19)
Pure Formulae: 	
	(! (#s_18 == $$undefined))
	(#s_17 == $$undefined)
	(#s_19 == _$l_1)
Gamma: 	
	(#s_19: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
	(#s_17: $$undefined_type)
Preds: 
CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 4.412347
STATE:
Heap: 
	_$l_1 |-> [(\"@extensible\": #s_23), (\"@class\": #s_22), (\"@proto\": #s_21), (default: $$unknown)]
Store: 	
	(pr: #s_20)
	(ext: #s_18)
	(cl: \"Object\")
	(l: #s_19)
Pure Formulae: 	
	(! (#s_18 == $$undefined))
	(#s_17 == $$undefined)
	(#s_19 == _$l_1)
Gamma: 	
	(#s_19: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
	(#s_17: $$undefined_type)
Preds: 
CMD: [l, "@proto"] := pr
----------------------------------
----------------------------------
--5--
TIME: 4.412461
STATE:
Heap: 
	_$l_1 |-> [(\"@proto\": #s_20), (\"@class\": #s_22), (\"@extensible\": #s_23), (default: $$unknown)]
Store: 	
	(pr: #s_20)
	(ext: #s_18)
	(cl: \"Object\")
	(l: #s_19)
Pure Formulae: 	
	(! (#s_18 == $$undefined))
	(#s_17 == $$undefined)
	(#s_19 == _$l_1)
Gamma: 	
	(#s_19: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
	(#s_17: $$undefined_type)
Preds: 
CMD: [l, "@class"] := cl
----------------------------------
----------------------------------
--6--
TIME: 4.412568
STATE:
Heap: 
	_$l_1 |-> [(\"@class\": \"Object\"), (\"@proto\": #s_20), (\"@extensible\": #s_23), (default: $$unknown)]
Store: 	
	(pr: #s_20)
	(ext: #s_18)
	(cl: \"Object\")
	(l: #s_19)
Pure Formulae: 	
	(! (#s_18 == $$undefined))
	(#s_17 == $$undefined)
	(#s_19 == _$l_1)
Gamma: 	
	(#s_19: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
	(#s_17: $$undefined_type)
Preds: 
CMD: [l, "@extensible"] := ext
----------------------------------
----------------------------------
--7--
TIME: 4.412692
STATE:
Heap: 
	_$l_1 |-> [(\"@extensible\": #s_18), (\"@proto\": #s_20), (\"@class\": \"Object\"), (default: $$unknown)]
Store: 	
	(pr: #s_20)
	(ext: #s_18)
	(cl: \"Object\")
	(l: #s_19)
Pure Formulae: 	
	(! (#s_18 == $$undefined))
	(#s_17 == $$undefined)
	(#s_19 == _$l_1)
Gamma: 	
	(#s_19: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
	(#s_17: $$undefined_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_default_object
----------------------------------
----------------------------------
Symbolic execution of create_default_object
----------------------------------
--0--
TIME: 4.413062
STATE:
Heap: 
	_$l_2 |-> [(\"@extensible\": #s_30), (\"@class\": #s_29), (\"@proto\": #s_28), (default: $$unknown)]
Store: 	
	(pr: #s_27)
	(ext: $$undefined)
	(cl: #s_24)
	(l: #s_26)
Pure Formulae: 	
	(! (#s_24 == $$undefined))
	(#s_26 == _$l_2)
	(#s_25 == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#s_25: $$undefined_type)
	(l: $$object_type)
	(#s_26: $$object_type)
Preds: 
CMD: goto [(cl = $$undefined)] 1 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.424175
STATE:
Heap: 
	_$l_2 |-> [(\"@extensible\": #s_30), (\"@class\": #s_29), (\"@proto\": #s_28), (default: $$unknown)]
Store: 	
	(pr: #s_27)
	(ext: $$undefined)
	(cl: #s_24)
	(l: #s_26)
Pure Formulae: 	
	(! (#s_24 == $$undefined))
	(#s_26 == _$l_2)
	(#s_25 == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#s_25: $$undefined_type)
	(#s_26: $$object_type)
	(l: $$object_type)
Preds: 
CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 4.427100
STATE:
Heap: 
	_$l_2 |-> [(\"@extensible\": #s_30), (\"@class\": #s_29), (\"@proto\": #s_28), (default: $$unknown)]
Store: 	
	(pr: #s_27)
	(ext: $$undefined)
	(cl: #s_24)
	(l: #s_26)
Pure Formulae: 	
	(! (#s_24 == $$undefined))
	(#s_26 == _$l_2)
	(#s_25 == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#s_25: $$undefined_type)
	(l: $$object_type)
	(#s_26: $$object_type)
Preds: 
CMD: ext := $$t
----------------------------------
----------------------------------
--4--
TIME: 4.427254
STATE:
Heap: 
	_$l_2 |-> [(\"@extensible\": #s_30), (\"@class\": #s_29), (\"@proto\": #s_28), (default: $$unknown)]
Store: 	
	(pr: #s_27)
	(ext: $$t)
	(cl: #s_24)
	(l: #s_26)
Pure Formulae: 	
	(! (#s_24 == $$undefined))
	(#s_26 == _$l_2)
	(#s_25 == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#s_25: $$undefined_type)
	(#s_26: $$object_type)
	(l: $$object_type)
Preds: 
CMD: [l, "@proto"] := pr
----------------------------------
----------------------------------
--5--
TIME: 4.427380
STATE:
Heap: 
	_$l_2 |-> [(\"@proto\": #s_27), (\"@class\": #s_29), (\"@extensible\": #s_30), (default: $$unknown)]
Store: 	
	(pr: #s_27)
	(ext: $$t)
	(cl: #s_24)
	(l: #s_26)
Pure Formulae: 	
	(! (#s_24 == $$undefined))
	(#s_26 == _$l_2)
	(#s_25 == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#s_25: $$undefined_type)
	(l: $$object_type)
	(#s_26: $$object_type)
Preds: 
CMD: [l, "@class"] := cl
----------------------------------
----------------------------------
--6--
TIME: 4.427505
STATE:
Heap: 
	_$l_2 |-> [(\"@class\": #s_24), (\"@proto\": #s_27), (\"@extensible\": #s_30), (default: $$unknown)]
Store: 	
	(pr: #s_27)
	(ext: $$t)
	(cl: #s_24)
	(l: #s_26)
Pure Formulae: 	
	(! (#s_24 == $$undefined))
	(#s_26 == _$l_2)
	(#s_25 == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#s_25: $$undefined_type)
	(#s_26: $$object_type)
	(l: $$object_type)
Preds: 
CMD: [l, "@extensible"] := ext
----------------------------------
----------------------------------
--7--
TIME: 4.427656
STATE:
Heap: 
	_$l_2 |-> [(\"@extensible\": $$t), (\"@proto\": #s_27), (\"@class\": #s_24), (default: $$unknown)]
Store: 	
	(pr: #s_27)
	(ext: $$t)
	(cl: #s_24)
	(l: #s_26)
Pure Formulae: 	
	(! (#s_24 == $$undefined))
	(#s_26 == _$l_2)
	(#s_25 == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#s_25: $$undefined_type)
	(l: $$object_type)
	(#s_26: $$object_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_default_object
----------------------------------
----------------------------------
Symbolic execution of create_default_object
----------------------------------
--0--
TIME: 4.428069
STATE:
Heap: 
	_$l_3 |-> [(\"@extensible\": #s_37), (\"@class\": #s_36), (\"@proto\": #s_35), (default: $$unknown)]
Store: 	
	(pr: #s_34)
	(ext: #s_32)
	(cl: #s_31)
	(l: #s_33)
Pure Formulae: 	
	(! (#s_31 == $$undefined))
	(! (#s_32 == $$undefined))
	(#s_33 == _$l_3)
Gamma: 	
	(#s_33: $$object_type)
Preds: 
CMD: goto [(cl = $$undefined)] 1 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.440087
STATE:
Heap: 
	_$l_3 |-> [(\"@extensible\": #s_37), (\"@class\": #s_36), (\"@proto\": #s_35), (default: $$unknown)]
Store: 	
	(pr: #s_34)
	(ext: #s_32)
	(cl: #s_31)
	(l: #s_33)
Pure Formulae: 	
	(! (#s_31 == $$undefined))
	(! (#s_32 == $$undefined))
	(#s_33 == _$l_3)
Gamma: 	
	(#s_33: $$object_type)
Preds: 
CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 4.441879
STATE:
Heap: 
	_$l_3 |-> [(\"@extensible\": #s_37), (\"@class\": #s_36), (\"@proto\": #s_35), (default: $$unknown)]
Store: 	
	(pr: #s_34)
	(ext: #s_32)
	(cl: #s_31)
	(l: #s_33)
Pure Formulae: 	
	(! (#s_31 == $$undefined))
	(! (#s_32 == $$undefined))
	(#s_33 == _$l_3)
Gamma: 	
	(#s_33: $$object_type)
Preds: 
CMD: [l, "@proto"] := pr
----------------------------------
----------------------------------
--5--
TIME: 4.441980
STATE:
Heap: 
	_$l_3 |-> [(\"@proto\": #s_34), (\"@class\": #s_36), (\"@extensible\": #s_37), (default: $$unknown)]
Store: 	
	(pr: #s_34)
	(ext: #s_32)
	(cl: #s_31)
	(l: #s_33)
Pure Formulae: 	
	(! (#s_31 == $$undefined))
	(! (#s_32 == $$undefined))
	(#s_33 == _$l_3)
Gamma: 	
	(#s_33: $$object_type)
Preds: 
CMD: [l, "@class"] := cl
----------------------------------
----------------------------------
--6--
TIME: 4.442071
STATE:
Heap: 
	_$l_3 |-> [(\"@class\": #s_31), (\"@proto\": #s_34), (\"@extensible\": #s_37), (default: $$unknown)]
Store: 	
	(pr: #s_34)
	(ext: #s_32)
	(cl: #s_31)
	(l: #s_33)
Pure Formulae: 	
	(! (#s_31 == $$undefined))
	(! (#s_32 == $$undefined))
	(#s_33 == _$l_3)
Gamma: 	
	(#s_33: $$object_type)
Preds: 
CMD: [l, "@extensible"] := ext
----------------------------------
----------------------------------
--7--
TIME: 4.442160
STATE:
Heap: 
	_$l_3 |-> [(\"@extensible\": #s_32), (\"@proto\": #s_34), (\"@class\": #s_31), (default: $$unknown)]
Store: 	
	(pr: #s_34)
	(ext: #s_32)
	(cl: #s_31)
	(l: #s_33)
Pure Formulae: 	
	(! (#s_31 == $$undefined))
	(! (#s_32 == $$undefined))
	(#s_33 == _$l_3)
Gamma: 	
	(#s_33: $$object_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_default_object
----------------------------------
----------------------------------
Symbolic execution of create_object_with_call_construct
----------------------------------
--0--
TIME: 4.442536
STATE:
Heap: 
	_$l_4 |-> [(\"@call\": #s_46), (\"length\": #s_44), (\"@scope\": #s_42), (\"@extensible\": #s_41), (\"@class\": #s_40), (\"@proto\": #s_39), (default: $$unknown)]
Store: 	
	(len: #s_43)
	(call: #s_45)
	(l: #s_38)
	(construct: $$empty)
Pure Formulae: 	
	(#s_47 == $$empty)
	(#s_38 == _$l_4)
Gamma: 	
	(#s_47: $$empty_type)
	(l: $$object_type)
	(#s_38: $$object_type)
	(construct: $$empty_type)
Preds: 
CMD: xret := "create_default_object"(l, $lfun_proto, "Function", $$t) 
----------------------------------
----------------------------------
--1--
TIME: 4.444520
STATE:
Heap: 
	_$l_4 |-> [(\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #s_42), (\"length\": #s_44), (\"@call\": #s_46), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_43)
	(call: #s_45)
	(l: #s_38)
	(construct: $$empty)
Pure Formulae: 	
	(#s_47 == $$empty)
	(#s_38 == _$l_4)
Gamma: 	
	(xret: $$object_type)
	(#s_47: $$empty_type)
	(l: $$object_type)
	(#s_38: $$object_type)
	(construct: $$empty_type)
Preds: 
CMD: [xret, "@scope"] := $$empty
----------------------------------
----------------------------------
--2--
TIME: 4.444685
STATE:
Heap: 
	_$l_4 |-> [(\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": #s_44), (\"@call\": #s_46), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_43)
	(call: #s_45)
	(l: #s_38)
	(construct: $$empty)
Pure Formulae: 	
	(#s_47 == $$empty)
	(#s_38 == _$l_4)
Gamma: 	
	(xret: $$object_type)
	(#s_47: $$empty_type)
	(l: $$object_type)
	(#s_38: $$object_type)
	(construct: $$empty_type)
Preds: 
CMD: [xret, "length"] := {{ "d", len, $$f, $$f, $$f }}
----------------------------------
----------------------------------
--3--
TIME: 4.444820
STATE:
Heap: 
	_$l_4 |-> [(\"length\": {{ \"d\", #s_43, $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"@call\": #s_46), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_43)
	(call: #s_45)
	(l: #s_38)
	(construct: $$empty)
Pure Formulae: 	
	(#s_47 == $$empty)
	(#s_38 == _$l_4)
Gamma: 	
	(xret: $$object_type)
	(#s_47: $$empty_type)
	(l: $$object_type)
	(#s_38: $$object_type)
	(construct: $$empty_type)
Preds: 
CMD: [xret, "@call"] := call
----------------------------------
----------------------------------
--4--
TIME: 4.444954
STATE:
Heap: 
	_$l_4 |-> [(\"@call\": #s_45), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", #s_43, $$f, $$f, $$f }}), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_43)
	(call: #s_45)
	(l: #s_38)
	(construct: $$empty)
Pure Formulae: 	
	(#s_47 == $$empty)
	(#s_38 == _$l_4)
Gamma: 	
	(xret: $$object_type)
	(#s_47: $$empty_type)
	(l: $$object_type)
	(#s_38: $$object_type)
	(construct: $$empty_type)
Preds: 
CMD: goto [(construct = $$empty)] 6 5
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 4.445129
STATE:
Heap: 
	_$l_4 |-> [(\"@call\": #s_45), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", #s_43, $$f, $$f, $$f }}), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_43)
	(call: #s_45)
	(l: #s_38)
	(construct: $$empty)
Pure Formulae: 	
	(#s_47 == $$empty)
	(#s_38 == _$l_4)
Gamma: 	
	(xret: $$object_type)
	(#s_47: $$empty_type)
	(l: $$object_type)
	(#s_38: $$object_type)
	(construct: $$empty_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_object_with_call_construct
----------------------------------
----------------------------------
Symbolic execution of create_object_with_call_construct
----------------------------------
--0--
TIME: 4.445920
STATE:
Heap: 
	_$l_4 |-> [(\"@construct\": #s_58), (\"@call\": #s_56), (\"length\": #s_54), (\"@scope\": #s_52), (\"@extensible\": #s_51), (\"@class\": #s_50), (\"@proto\": #s_49), (default: $$unknown)]
Store: 	
	(len: #s_53)
	(call: #s_55)
	(l: #s_48)
	(construct: #s_57)
Pure Formulae: 	
	(! (#s_57 == $$empty))
	(#s_48 == _$l_4)
Gamma: 	
	(#s_48: $$object_type)
Preds: 
CMD: xret := "create_default_object"(l, $lfun_proto, "Function", $$t) 
----------------------------------
----------------------------------
--1--
TIME: 4.457551
STATE:
Heap: 
	_$l_4 |-> [(\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #s_52), (\"length\": #s_54), (\"@call\": #s_56), (\"@construct\": #s_58), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_53)
	(call: #s_55)
	(l: #s_48)
	(construct: #s_57)
Pure Formulae: 	
	(! (#s_57 == $$empty))
	(#s_48 == _$l_4)
Gamma: 	
	(#s_48: $$object_type)
	(xret: $$object_type)
Preds: 
CMD: [xret, "@scope"] := $$empty
----------------------------------
----------------------------------
--2--
TIME: 4.457744
STATE:
Heap: 
	_$l_4 |-> [(\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": #s_54), (\"@call\": #s_56), (\"@construct\": #s_58), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_53)
	(call: #s_55)
	(l: #s_48)
	(construct: #s_57)
Pure Formulae: 	
	(! (#s_57 == $$empty))
	(#s_48 == _$l_4)
Gamma: 	
	(#s_48: $$object_type)
	(xret: $$object_type)
Preds: 
CMD: [xret, "length"] := {{ "d", len, $$f, $$f, $$f }}
----------------------------------
----------------------------------
--3--
TIME: 4.457909
STATE:
Heap: 
	_$l_4 |-> [(\"length\": {{ \"d\", #s_53, $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"@call\": #s_56), (\"@construct\": #s_58), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_53)
	(call: #s_55)
	(l: #s_48)
	(construct: #s_57)
Pure Formulae: 	
	(! (#s_57 == $$empty))
	(#s_48 == _$l_4)
Gamma: 	
	(#s_48: $$object_type)
	(xret: $$object_type)
Preds: 
CMD: [xret, "@call"] := call
----------------------------------
----------------------------------
--4--
TIME: 4.458017
STATE:
Heap: 
	_$l_4 |-> [(\"@call\": #s_55), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", #s_53, $$f, $$f, $$f }}), (\"@construct\": #s_58), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_53)
	(call: #s_55)
	(l: #s_48)
	(construct: #s_57)
Pure Formulae: 	
	(! (#s_57 == $$empty))
	(#s_48 == _$l_4)
Gamma: 	
	(#s_48: $$object_type)
	(xret: $$object_type)
Preds: 
CMD: goto [(construct = $$empty)] 6 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.458178
STATE:
Heap: 
	_$l_4 |-> [(\"@call\": #s_55), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", #s_53, $$f, $$f, $$f }}), (\"@construct\": #s_58), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_53)
	(call: #s_55)
	(l: #s_48)
	(construct: #s_57)
Pure Formulae: 	
	(! (#s_57 == $$empty))
	(#s_48 == _$l_4)
Gamma: 	
	(#s_48: $$object_type)
	(xret: $$object_type)
Preds: 
CMD: [xret, "@construct"] := construct
----------------------------------
----------------------------------
--6--
TIME: 4.459907
STATE:
Heap: 
	_$l_4 |-> [(\"@construct\": #s_57), (\"length\": {{ \"d\", #s_53, $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"@call\": #s_55), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_53)
	(call: #s_55)
	(l: #s_48)
	(construct: #s_57)
Pure Formulae: 	
	(! (#s_57 == $$empty))
	(#s_48 == _$l_4)
Gamma: 	
	(#s_48: $$object_type)
	(xret: $$object_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_object_with_call_construct
----------------------------------
----------------------------------
Symbolic execution of setupInitialHeap
----------------------------------
--0--
TIME: 4.460374
STATE:
Heap: 
	_$l_14 |-> [(\"@extensible\": #s_83), (\"@class\": #s_82), (\"@proto\": #s_81), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": #s_78), (\"@call\": #s_77), (\"length\": #s_76), (\"@scope\": #s_75), (\"@extensible\": #s_74), (\"@class\": #s_73), (\"@proto\": #s_72), (default: $$unknown)]
	$lerr_proto |-> [(\"message\": #s_84), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": #s_70), (\"length\": #s_69), (\"@scope\": #s_68), (\"@extensible\": #s_67), (\"@class\": #s_66), (\"@proto\": #s_65), (default: $$unknown)]
	$lg |-> [(\"Error\": #s_79), (default: $$unknown)]
	$lerr |-> [(\"prototype\": #s_80), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": #s_61), (\"@class\": #s_60), (\"@proto\": #s_59), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": #s_71), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": #s_64), (\"@class\": #s_63), (\"@proto\": #s_62), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	($lerr_proto == _$l_14)
	($lerr == _$l_12)
	($lfun_proto == _$l_11)
	($lobj_proto == _$l_8)
	($lg == _$l_6)
Gamma: 	
Preds: 
CMD: xret := "create_default_object"($lg, $lobj_proto, "Object", $$t) 
----------------------------------
The EVALUATION OF THIS PROC GAVE AN ERROR: 0 No precondition found for procedure create_default_object.!!!!
----------------------------------
----------------------------------
Symbolic execution of create_function_object
----------------------------------
--0--
TIME: 4.460748
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
Store: 	
	(params: #s_85)
	(call: #s_86)
	(xsc: #s_95)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(! (#s_87 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(#s_85: $$list_type)
Preds: 
CMD: len := (l-len params)
----------------------------------
----------------------------------
--1--
TIME: 4.460844
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
Store: 	
	(params: #s_85)
	(len: (l-len #s_85))
	(call: #s_86)
	(xsc: #s_95)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(! (#s_87 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(len: $$number_type)
	(#s_85: $$list_type)
Preds: 
CMD: l := new()
----------------------------------
----------------------------------
--2--
TIME: 4.460946
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
	_$l_27 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(params: #s_85)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_27)
	(xsc: #s_95)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(! (#s_87 == $$empty))
	(_$l_16 == _$l_17)
	(! (_$l_27 == $lg))
Gamma: 	
	(len: $$number_type)
	(l: $$object_type)
	(#s_85: $$list_type)
Preds: 
CMD: l := "create_object_with_call_construct"(l, call, construct, len) 
----------------------------------
----------------------------------
--3--
TIME: 4.474543
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
	_$l_27 |-> [(\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@call\": #s_86), (\"@construct\": #s_87), (default: None)]
Store: 	
	(params: #s_85)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_27)
	(xsc: #s_95)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(_$l_16 == _$l_17)
	(! (_$l_27 == $lg))
	(! (#s_87 == $$empty))
Gamma: 	
	(len: $$number_type)
	(l: $$object_type)
	(#s_85: $$list_type)
Preds: 
CMD: [l, "@scope"] := xsc
----------------------------------
----------------------------------
--4--
TIME: 4.475760
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
	_$l_27 |-> [(\"@scope\": #s_95), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@call\": #s_86), (\"@construct\": #s_87), (default: None)]
Store: 	
	(params: #s_85)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_27)
	(xsc: #s_95)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(_$l_16 == _$l_17)
	(! (_$l_27 == $lg))
	(! (#s_87 == $$empty))
Gamma: 	
	(len: $$number_type)
	(l: $$object_type)
	(#s_85: $$list_type)
Preds: 
CMD: prototype := new()
----------------------------------
----------------------------------
--5--
TIME: 4.475897
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_28 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
	_$l_27 |-> [(\"@scope\": #s_95), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@call\": #s_86), (\"@construct\": #s_87), (default: None)]
Store: 	
	(params: #s_85)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_27)
	(xsc: #s_95)
	(prototype: _$l_28)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(_$l_16 == _$l_17)
	(! (_$l_27 == $lg))
	(! (#s_87 == $$empty))
	(! (_$l_28 == $lg))
Gamma: 	
	(len: $$number_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(#s_85: $$list_type)
Preds: 
CMD: prototype := "create_default_object"(prototype, $lobj_proto, "Object", $$t) 
----------------------------------
----------------------------------
--6--
TIME: 4.487466
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_28 |-> [(\"@proto\": $lobj_proto), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
	_$l_27 |-> [(\"@scope\": #s_95), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@call\": #s_86), (\"@construct\": #s_87), (default: None)]
Store: 	
	(params: #s_85)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_27)
	(xsc: #s_95)
	(prototype: _$l_28)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(_$l_16 == _$l_17)
	(! (_$l_27 == $lg))
	(! (#s_87 == $$empty))
	(! (_$l_28 == $lg))
Gamma: 	
	(len: $$number_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(#s_85: $$list_type)
Preds: 
CMD: [prototype, "constructor"] := {{ "d", l, $$t, $$f, $$t }}
----------------------------------
----------------------------------
--7--
TIME: 4.487706
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_28 |-> [(\"constructor\": {{ \"d\", _$l_27, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
	_$l_27 |-> [(\"@scope\": #s_95), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@call\": #s_86), (\"@construct\": #s_87), (default: None)]
Store: 	
	(params: #s_85)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_27)
	(xsc: #s_95)
	(prototype: _$l_28)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(_$l_16 == _$l_17)
	(! (_$l_27 == $lg))
	(! (#s_87 == $$empty))
	(! (_$l_28 == $lg))
Gamma: 	
	(len: $$number_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(#s_85: $$list_type)
Preds: 
CMD: [l, "prototype"] := {{ "d", prototype, $$t, $$f, $$f }}
----------------------------------
----------------------------------
--8--
TIME: 4.487945
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_28 |-> [(\"constructor\": {{ \"d\", _$l_27, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
	_$l_27 |-> [(\"prototype\": {{ \"d\", _$l_28, $$t, $$f, $$f }}), (\"@construct\": #s_87), (\"@call\": #s_86), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #s_95), (default: None)]
Store: 	
	(params: #s_85)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_27)
	(xsc: #s_95)
	(prototype: _$l_28)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(_$l_16 == _$l_17)
	(! (_$l_27 == $lg))
	(! (#s_87 == $$empty))
	(! (_$l_28 == $lg))
Gamma: 	
	(len: $$number_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(#s_85: $$list_type)
Preds: 
CMD: [l, "caller"] := {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}
----------------------------------
----------------------------------
--9--
TIME: 4.488163
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_28 |-> [(\"constructor\": {{ \"d\", _$l_27, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
	_$l_27 |-> [(\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"@scope\": #s_95), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@call\": #s_86), (\"@construct\": #s_87), (\"prototype\": {{ \"d\", _$l_28, $$t, $$f, $$f }}), (default: None)]
Store: 	
	(params: #s_85)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_27)
	(xsc: #s_95)
	(prototype: _$l_28)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(_$l_16 == _$l_17)
	(! (_$l_27 == $lg))
	(! (#s_87 == $$empty))
	(! (_$l_28 == $lg))
Gamma: 	
	(len: $$number_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(#s_85: $$list_type)
Preds: 
CMD: [l, "arguments"] := {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}
----------------------------------
----------------------------------
--10--
TIME: 4.488377
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_28 |-> [(\"constructor\": {{ \"d\", _$l_27, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
	_$l_27 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_28, $$t, $$f, $$f }}), (\"@construct\": #s_87), (\"@call\": #s_86), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #s_95), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (default: None)]
Store: 	
	(params: #s_85)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_27)
	(xsc: #s_95)
	(prototype: _$l_28)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(_$l_16 == _$l_17)
	(! (_$l_27 == $lg))
	(! (#s_87 == $$empty))
	(! (_$l_28 == $lg))
Gamma: 	
	(len: $$number_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(#s_85: $$list_type)
Preds: 
CMD: xret := l
----------------------------------
----------------------------------
--11--
TIME: 4.490529
STATE:
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_28 |-> [(\"constructor\": {{ \"d\", _$l_27, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
	_$l_27 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_28, $$t, $$f, $$f }}), (\"@construct\": #s_87), (\"@call\": #s_86), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #s_95), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (default: None)]
Store: 	
	(params: #s_85)
	(xret: _$l_27)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_27)
	(xsc: #s_95)
	(prototype: _$l_28)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(_$l_16 == _$l_17)
	(! (_$l_27 == $lg))
	(! (#s_87 == $$empty))
	(! (_$l_28 == $lg))
Gamma: 	
	(xret: $$object_type)
	(len: $$number_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(#s_85: $$list_type)
Preds: 
CMD: skip
----------------------------------
Failed to verify a spec of proc create_function_object -- Non_unifiable symbolic states
Final symbolic state: Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_28 |-> [(\"constructor\": {{ \"d\", _$l_27, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
	_$l_27 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_28, $$t, $$f, $$f }}), (\"@construct\": #s_87), (\"@call\": #s_86), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #s_95), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (default: None)]
Store: 	
	(params: #s_85)
	(xret: _$l_27)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_27)
	(xsc: #s_95)
	(prototype: _$l_28)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(_$l_16 == _$l_17)
	(! (_$l_27 == $lg))
	(! (#s_87 == $$empty))
	(! (_$l_28 == $lg))
Gamma: 	
	(xret: $$object_type)
	(len: $$number_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(#s_85: $$list_type)
Preds: 

Post condition: Post 0: 
Heap: 
	_$l_17 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_20, $$t, $$f, $$f }}), (\"@scope\": #s_95), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@call\": #s_86), (\"@construct\": #s_87), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"constructor\": {{ \"d\", _$l_17, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: #s_85)
	(xret: _$l_17)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_17)
	(xsc: #s_95)
	(prototype: _$l_20)
	(construct: #s_87)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (#s_87 == $$empty))
	(! (_$l_19 == $lg))
	(_$l_19 == _$l_20)
Gamma: 	
	(xret: $$object_type)
	(len: $$number_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(#s_85: $$list_type)
Preds: 
;

The EVALUATION OF THIS PROC GAVE AN ERROR: 0 post condition is not unifiable!!!!
----------------------------------
----------------------------------
Symbolic execution of create_function_object
----------------------------------
--0--
TIME: 4.491916
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(call: #s_104)
	(xsc: #s_112)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(#s_120: $$empty_type)
	(#s_105: $$empty_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
Preds: 
CMD: len := (l-len params)
----------------------------------
----------------------------------
--1--
TIME: 4.492121
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(len: (l-len #s_103))
	(call: #s_104)
	(xsc: #s_112)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(#s_120: $$empty_type)
	(len: $$number_type)
	(#s_105: $$empty_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
Preds: 
CMD: l := new()
----------------------------------
----------------------------------
--2--
TIME: 4.492287
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_29 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_29)
	(xsc: #s_112)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(! (_$l_29 == $lg))
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(#s_120: $$empty_type)
	(#s_105: $$empty_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
Preds: 
CMD: l := "create_object_with_call_construct"(l, call, construct, len) 
----------------------------------
----------------------------------
--3--
TIME: 4.506749
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_29 |-> [(\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@call\": #s_104), (default: None)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_29)
	(xsc: #s_112)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(! (_$l_29 == $lg))
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(#s_120: $$empty_type)
	(#s_105: $$empty_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
Preds: 
CMD: [l, "@scope"] := xsc
----------------------------------
----------------------------------
--4--
TIME: 4.506945
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_29 |-> [(\"@scope\": #s_112), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@call\": #s_104), (default: None)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_29)
	(xsc: #s_112)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(! (_$l_29 == $lg))
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(#s_120: $$empty_type)
	(len: $$number_type)
	(#s_105: $$empty_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
Preds: 
CMD: prototype := new()
----------------------------------
----------------------------------
--5--
TIME: 4.507107
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_30 |-> [(\"@proto\": $$null), (default: None)]
	_$l_29 |-> [(\"@scope\": #s_112), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@call\": #s_104), (default: None)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_29)
	(xsc: #s_112)
	(prototype: _$l_30)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(! (_$l_29 == $lg))
	(! (_$l_30 == $lg))
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(#s_120: $$empty_type)
	(#s_105: $$empty_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 
CMD: prototype := "create_default_object"(prototype, $lobj_proto, "Object", $$t) 
----------------------------------
----------------------------------
--6--
TIME: 4.517644
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_30 |-> [(\"@proto\": $lobj_proto), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	_$l_29 |-> [(\"@scope\": #s_112), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@call\": #s_104), (default: None)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_29)
	(xsc: #s_112)
	(prototype: _$l_30)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(! (_$l_29 == $lg))
	(! (_$l_30 == $lg))
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(#s_120: $$empty_type)
	(#s_105: $$empty_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 
CMD: [prototype, "constructor"] := {{ "d", l, $$t, $$f, $$t }}
----------------------------------
----------------------------------
--7--
TIME: 4.517845
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_30 |-> [(\"constructor\": {{ \"d\", _$l_29, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_29 |-> [(\"@scope\": #s_112), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@call\": #s_104), (default: None)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_29)
	(xsc: #s_112)
	(prototype: _$l_30)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(! (_$l_29 == $lg))
	(! (_$l_30 == $lg))
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(#s_120: $$empty_type)
	(len: $$number_type)
	(#s_105: $$empty_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(prototype: $$object_type)
	(construct: $$empty_type)
Preds: 
CMD: [l, "prototype"] := {{ "d", prototype, $$t, $$f, $$f }}
----------------------------------
----------------------------------
--8--
TIME: 4.519723
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_30 |-> [(\"constructor\": {{ \"d\", _$l_29, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_29 |-> [(\"prototype\": {{ \"d\", _$l_30, $$t, $$f, $$f }}), (\"@call\": #s_104), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #s_112), (default: None)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_29)
	(xsc: #s_112)
	(prototype: _$l_30)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(! (_$l_29 == $lg))
	(! (_$l_30 == $lg))
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(#s_120: $$empty_type)
	(#s_105: $$empty_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 
CMD: [l, "caller"] := {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}
----------------------------------
----------------------------------
--9--
TIME: 4.520098
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_30 |-> [(\"constructor\": {{ \"d\", _$l_29, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_29 |-> [(\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"@scope\": #s_112), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@call\": #s_104), (\"prototype\": {{ \"d\", _$l_30, $$t, $$f, $$f }}), (default: None)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_29)
	(xsc: #s_112)
	(prototype: _$l_30)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(! (_$l_29 == $lg))
	(! (_$l_30 == $lg))
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(#s_120: $$empty_type)
	(len: $$number_type)
	(#s_105: $$empty_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(prototype: $$object_type)
	(construct: $$empty_type)
Preds: 
CMD: [l, "arguments"] := {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}
----------------------------------
----------------------------------
--10--
TIME: 4.520455
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_30 |-> [(\"constructor\": {{ \"d\", _$l_29, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_29 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_30, $$t, $$f, $$f }}), (\"@call\": #s_104), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #s_112), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (default: None)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_29)
	(xsc: #s_112)
	(prototype: _$l_30)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(! (_$l_29 == $lg))
	(! (_$l_30 == $lg))
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(len: $$number_type)
	(#s_120: $$empty_type)
	(#s_105: $$empty_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 
CMD: xret := l
----------------------------------
----------------------------------
--11--
TIME: 4.520776
STATE:
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_30 |-> [(\"constructor\": {{ \"d\", _$l_29, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_29 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_30, $$t, $$f, $$f }}), (\"@call\": #s_104), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #s_112), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (default: None)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(xret: _$l_29)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_29)
	(xsc: #s_112)
	(prototype: _$l_30)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(! (_$l_29 == $lg))
	(! (_$l_30 == $lg))
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(xret: $$object_type)
	(#s_120: $$empty_type)
	(len: $$number_type)
	(#s_105: $$empty_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(prototype: $$object_type)
	(construct: $$empty_type)
Preds: 
CMD: skip
----------------------------------
Failed to verify a spec of proc create_function_object -- Non_unifiable symbolic states
Final symbolic state: Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_30 |-> [(\"constructor\": {{ \"d\", _$l_29, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_29 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_30, $$t, $$f, $$f }}), (\"@call\": #s_104), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #s_112), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (default: None)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(xret: _$l_29)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_29)
	(xsc: #s_112)
	(prototype: _$l_30)
	(construct: $$empty)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(! (_$l_29 == $lg))
	(! (_$l_30 == $lg))
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(xret: $$object_type)
	(len: $$number_type)
	(#s_120: $$empty_type)
	(#s_105: $$empty_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 

Post condition: Post 0: 
Heap: 
	_$l_18 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_23, $$t, $$f, $$f }}), (\"@scope\": #s_112), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@call\": #s_104), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"constructor\": {{ \"d\", _$l_18, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(xret: _$l_18)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_18)
	(xsc: #s_112)
	(prototype: _$l_23)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
	(_$l_22 == _$l_23)
	(construct == $$empty)
Gamma: 	
	(params: $$list_type)
	(xret: $$object_type)
	(len: $$number_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 
;

The EVALUATION OF THIS PROC GAVE AN ERROR: 1 post condition is not unifiable!!!!
----------------------------------
----------------------------------
Symbolic execution of i__isDataDescriptor
----------------------------------
--0--
TIME: 4.522240
STATE:
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
	(#s_121 == $$undefined)
Gamma: 	
	(desc: $$undefined_type)
	(#s_121: $$undefined_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 4.522456
STATE:
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
	(#s_121 == $$undefined)
Gamma: 	
	(desc: $$undefined_type)
	(#s_121: $$undefined_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 4.522604
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
	(#s_121 == $$undefined)
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
	(#s_121: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isDataDescriptor
----------------------------------
--0--
TIME: 4.523162
STATE:
Heap: 
	
Store: 	
	(desc: #s_122)
Pure Formulae: 	
	(! (#s_122 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_122))
	(l-nth(#s_122, 0.) == \"d\")
Gamma: 	
	(#s_122: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 4.535482
STATE:
Heap: 
	
Store: 	
	(desc: #s_122)
Pure Formulae: 	
	(! (#s_122 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_122))
	(l-nth(#s_122, 0.) == \"d\")
Gamma: 	
	(#s_122: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 4.535696
STATE:
Heap: 
	
Store: 	
	(desc: #s_122)
	(d: l-nth(#s_122, 0.))
Pure Formulae: 	
	(! (#s_122 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_122))
	(l-nth(#s_122, 0.) == \"d\")
Gamma: 	
	(#s_122: $$list_type)
Preds: 
CMD: goto [(d = "d")] 7 3
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 4.535945
STATE:
Heap: 
	
Store: 	
	(desc: #s_122)
	(d: l-nth(#s_122, 0.))
Pure Formulae: 	
	(! (#s_122 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_122))
	(l-nth(#s_122, 0.) == \"d\")
Gamma: 	
	(#s_122: $$list_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 4.536029
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: #s_122)
	(d: l-nth(#s_122, 0.))
Pure Formulae: 	
	(! (#s_122 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_122))
	(l-nth(#s_122, 0.) == \"d\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_122: $$list_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 4.536111
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: #s_122)
	(d: l-nth(#s_122, 0.))
Pure Formulae: 	
	(! (#s_122 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_122))
	(l-nth(#s_122, 0.) == \"d\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_122: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isDataDescriptor
----------------------------------
--0--
TIME: 4.536561
STATE:
Heap: 
	
Store: 	
	(desc: #s_123)
Pure Formulae: 	
	(! (#s_123 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_123))
	(! (l-nth(#s_123, 0.) == \"d\"))
	(l-nth(#s_123, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_123))
	(! (4. <# 0.))
	(4. <# (l-len #s_123))
	(l-nth(#s_123, 3.) == $$empty)
	(l-nth(#s_123, 4.) == $$empty)
Gamma: 	
	(#s_123: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 4.549234
STATE:
Heap: 
	
Store: 	
	(desc: #s_123)
Pure Formulae: 	
	(! (#s_123 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_123))
	(! (l-nth(#s_123, 0.) == \"d\"))
	(l-nth(#s_123, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_123))
	(! (4. <# 0.))
	(4. <# (l-len #s_123))
	(l-nth(#s_123, 3.) == $$empty)
	(l-nth(#s_123, 4.) == $$empty)
Gamma: 	
	(#s_123: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 4.549400
STATE:
Heap: 
	
Store: 	
	(desc: #s_123)
	(d: l-nth(#s_123, 0.))
Pure Formulae: 	
	(! (#s_123 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_123))
	(! (l-nth(#s_123, 0.) == \"d\"))
	(l-nth(#s_123, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_123))
	(! (4. <# 0.))
	(4. <# (l-len #s_123))
	(l-nth(#s_123, 3.) == $$empty)
	(l-nth(#s_123, 4.) == $$empty)
Gamma: 	
	(#s_123: $$list_type)
Preds: 
CMD: goto [(d = "d")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 4.549600
STATE:
Heap: 
	
Store: 	
	(desc: #s_123)
	(d: l-nth(#s_123, 0.))
Pure Formulae: 	
	(! (#s_123 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_123))
	(! (l-nth(#s_123, 0.) == \"d\"))
	(l-nth(#s_123, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_123))
	(! (4. <# 0.))
	(4. <# (l-len #s_123))
	(l-nth(#s_123, 3.) == $$empty)
	(l-nth(#s_123, 4.) == $$empty)
Gamma: 	
	(#s_123: $$list_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 4.552070
STATE:
Heap: 
	
Store: 	
	(desc: #s_123)
	(d: l-nth(#s_123, 0.))
Pure Formulae: 	
	(! (#s_123 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_123))
	(! (l-nth(#s_123, 0.) == \"d\"))
	(l-nth(#s_123, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_123))
	(! (4. <# 0.))
	(4. <# (l-len #s_123))
	(l-nth(#s_123, 3.) == $$empty)
	(l-nth(#s_123, 4.) == $$empty)
Gamma: 	
	(#s_123: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--5--
TIME: 4.552346
STATE:
Heap: 
	
Store: 	
	(desc: #s_123)
	(d: l-nth(#s_123, 0.))
	(v: l-nth(#s_123, 3.))
Pure Formulae: 	
	(! (#s_123 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_123))
	(! (l-nth(#s_123, 0.) == \"d\"))
	(l-nth(#s_123, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_123))
	(! (4. <# 0.))
	(4. <# (l-len #s_123))
	(l-nth(#s_123, 3.) == $$empty)
	(l-nth(#s_123, 4.) == $$empty)
Gamma: 	
	(#s_123: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--6--
TIME: 4.552532
STATE:
Heap: 
	
Store: 	
	(w: l-nth(#s_123, 4.))
	(desc: #s_123)
	(d: l-nth(#s_123, 0.))
	(v: l-nth(#s_123, 3.))
Pure Formulae: 	
	(! (#s_123 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_123))
	(! (l-nth(#s_123, 0.) == \"d\"))
	(l-nth(#s_123, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_123))
	(! (4. <# 0.))
	(4. <# (l-len #s_123))
	(l-nth(#s_123, 3.) == $$empty)
	(l-nth(#s_123, 4.) == $$empty)
Gamma: 	
	(#s_123: $$list_type)
Preds: 
CMD: goto [((v = $$empty) and (w = $$empty))] 9 7
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 4.552730
STATE:
Heap: 
	
Store: 	
	(w: l-nth(#s_123, 4.))
	(desc: #s_123)
	(d: l-nth(#s_123, 0.))
	(v: l-nth(#s_123, 3.))
Pure Formulae: 	
	(! (#s_123 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_123))
	(! (l-nth(#s_123, 0.) == \"d\"))
	(l-nth(#s_123, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_123))
	(! (4. <# 0.))
	(4. <# (l-len #s_123))
	(l-nth(#s_123, 3.) == $$empty)
	(l-nth(#s_123, 4.) == $$empty)
Gamma: 	
	(#s_123: $$list_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 4.552837
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(w: l-nth(#s_123, 4.))
	(desc: #s_123)
	(d: l-nth(#s_123, 0.))
	(v: l-nth(#s_123, 3.))
Pure Formulae: 	
	(! (#s_123 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_123))
	(! (l-nth(#s_123, 0.) == \"d\"))
	(l-nth(#s_123, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_123))
	(! (4. <# 0.))
	(4. <# (l-len #s_123))
	(l-nth(#s_123, 3.) == $$empty)
	(l-nth(#s_123, 4.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(#s_123: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isDataDescriptor
----------------------------------
--0--
TIME: 4.553354
STATE:
Heap: 
	
Store: 	
	(desc: #s_124)
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(#s_124: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 4.565886
STATE:
Heap: 
	
Store: 	
	(desc: #s_124)
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(#s_124: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 4.567155
STATE:
Heap: 
	
Store: 	
	(desc: #s_124)
	(d: l-nth(#s_124, 0.))
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(#s_124: $$list_type)
Preds: 
CMD: goto [(d = "d")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 4.567393
STATE:
Heap: 
	
Store: 	
	(desc: #s_124)
	(d: l-nth(#s_124, 0.))
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(#s_124: $$list_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 4.567564
STATE:
Heap: 
	
Store: 	
	(desc: #s_124)
	(d: l-nth(#s_124, 0.))
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(#s_124: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--5--
TIME: 4.567725
STATE:
Heap: 
	
Store: 	
	(desc: #s_124)
	(d: l-nth(#s_124, 0.))
	(v: l-nth(#s_124, 3.))
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(#s_124: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--6--
TIME: 4.567925
STATE:
Heap: 
	
Store: 	
	(w: l-nth(#s_124, 4.))
	(desc: #s_124)
	(d: l-nth(#s_124, 0.))
	(v: l-nth(#s_124, 3.))
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(#s_124: $$list_type)
Preds: 
CMD: goto [((v = $$empty) and (w = $$empty))] 9 7
----------------------------------
I found the model: 

(define-fun |#s_124| () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) (String 16)
    Undefined))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 5.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
in the ELSE branch
----------------------------------
--7--
TIME: 4.586669
STATE:
Heap: 
	
Store: 	
	(w: l-nth(#s_124, 4.))
	(desc: #s_124)
	(d: l-nth(#s_124, 0.))
	(v: l-nth(#s_124, 3.))
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(#s_124: $$list_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 4.586770
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(w: l-nth(#s_124, 4.))
	(desc: #s_124)
	(d: l-nth(#s_124, 0.))
	(v: l-nth(#s_124, 3.))
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(#s_124: $$list_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 4.586862
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(w: l-nth(#s_124, 4.))
	(desc: #s_124)
	(d: l-nth(#s_124, 0.))
	(v: l-nth(#s_124, 3.))
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(#s_124: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isDataDescriptor
----------------------------------
--0--
TIME: 4.588856
STATE:
Heap: 
	
Store: 	
	(desc: #s_125)
Pure Formulae: 	
	(! (#s_125 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_125))
	(! (l-nth(#s_125, 0.) == \"d\"))
	(! (l-nth(#s_125, 0.) == \"g\"))
Gamma: 	
	(#s_125: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 4.599167
STATE:
Heap: 
	
Store: 	
	(desc: #s_125)
Pure Formulae: 	
	(! (#s_125 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_125))
	(! (l-nth(#s_125, 0.) == \"d\"))
	(! (l-nth(#s_125, 0.) == \"g\"))
Gamma: 	
	(#s_125: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 4.599297
STATE:
Heap: 
	
Store: 	
	(desc: #s_125)
	(d: l-nth(#s_125, 0.))
Pure Formulae: 	
	(! (#s_125 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_125))
	(! (l-nth(#s_125, 0.) == \"d\"))
	(! (l-nth(#s_125, 0.) == \"g\"))
Gamma: 	
	(#s_125: $$list_type)
Preds: 
CMD: goto [(d = "d")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 4.599502
STATE:
Heap: 
	
Store: 	
	(desc: #s_125)
	(d: l-nth(#s_125, 0.))
Pure Formulae: 	
	(! (#s_125 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_125))
	(! (l-nth(#s_125, 0.) == \"d\"))
	(! (l-nth(#s_125, 0.) == \"g\"))
Gamma: 	
	(#s_125: $$list_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 4.599649
STATE:
Heap: 
	
Store: 	
	(desc: #s_125)
	(d: l-nth(#s_125, 0.))
Pure Formulae: 	
	(! (#s_125 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_125))
	(! (l-nth(#s_125, 0.) == \"d\"))
	(! (l-nth(#s_125, 0.) == \"g\"))
Gamma: 	
	(#s_125: $$list_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 4.599719
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: #s_125)
	(d: l-nth(#s_125, 0.))
Pure Formulae: 	
	(! (#s_125 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_125))
	(! (l-nth(#s_125, 0.) == \"d\"))
	(! (l-nth(#s_125, 0.) == \"g\"))
Gamma: 	
	(xret: $$boolean_type)
	(#s_125: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isAccessorDescriptor
----------------------------------
--0--
TIME: 4.600034
STATE:
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
	(#s_126 == $$undefined)
Gamma: 	
	(desc: $$undefined_type)
	(#s_126: $$undefined_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 4.600140
STATE:
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
	(#s_126 == $$undefined)
Gamma: 	
	(desc: $$undefined_type)
	(#s_126: $$undefined_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 4.600218
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
	(#s_126 == $$undefined)
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
	(#s_126: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isAccessorDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isAccessorDescriptor
----------------------------------
--0--
TIME: 4.600482
STATE:
Heap: 
	
Store: 	
	(desc: #s_127)
Pure Formulae: 	
	(! (#s_127 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_127))
	(l-nth(#s_127, 0.) == \"a\")
Gamma: 	
	(#s_127: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 4.614985
STATE:
Heap: 
	
Store: 	
	(desc: #s_127)
Pure Formulae: 	
	(! (#s_127 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_127))
	(l-nth(#s_127, 0.) == \"a\")
Gamma: 	
	(#s_127: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 4.615179
STATE:
Heap: 
	
Store: 	
	(desc: #s_127)
	(d: l-nth(#s_127, 0.))
Pure Formulae: 	
	(! (#s_127 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_127))
	(l-nth(#s_127, 0.) == \"a\")
Gamma: 	
	(#s_127: $$list_type)
Preds: 
CMD: goto [(d = "a")] 7 3
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 4.615375
STATE:
Heap: 
	
Store: 	
	(desc: #s_127)
	(d: l-nth(#s_127, 0.))
Pure Formulae: 	
	(! (#s_127 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_127))
	(l-nth(#s_127, 0.) == \"a\")
Gamma: 	
	(#s_127: $$list_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 4.615493
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: #s_127)
	(d: l-nth(#s_127, 0.))
Pure Formulae: 	
	(! (#s_127 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_127))
	(l-nth(#s_127, 0.) == \"a\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_127: $$list_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 4.615597
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: #s_127)
	(d: l-nth(#s_127, 0.))
Pure Formulae: 	
	(! (#s_127 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_127))
	(l-nth(#s_127, 0.) == \"a\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_127: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isAccessorDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isAccessorDescriptor
----------------------------------
--0--
TIME: 4.616137
STATE:
Heap: 
	
Store: 	
	(desc: #s_128)
Pure Formulae: 	
	(! (#s_128 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_128))
	(! (l-nth(#s_128, 0.) == \"a\"))
	(l-nth(#s_128, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_128))
	(! (6. <# 0.))
	(6. <# (l-len #s_128))
	(l-nth(#s_128, 5.) == $$empty)
	(l-nth(#s_128, 6.) == $$empty)
Gamma: 	
	(#s_128: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 4.630441
STATE:
Heap: 
	
Store: 	
	(desc: #s_128)
Pure Formulae: 	
	(! (#s_128 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_128))
	(! (l-nth(#s_128, 0.) == \"a\"))
	(l-nth(#s_128, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_128))
	(! (6. <# 0.))
	(6. <# (l-len #s_128))
	(l-nth(#s_128, 5.) == $$empty)
	(l-nth(#s_128, 6.) == $$empty)
Gamma: 	
	(#s_128: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 4.630609
STATE:
Heap: 
	
Store: 	
	(desc: #s_128)
	(d: l-nth(#s_128, 0.))
Pure Formulae: 	
	(! (#s_128 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_128))
	(! (l-nth(#s_128, 0.) == \"a\"))
	(l-nth(#s_128, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_128))
	(! (6. <# 0.))
	(6. <# (l-len #s_128))
	(l-nth(#s_128, 5.) == $$empty)
	(l-nth(#s_128, 6.) == $$empty)
Gamma: 	
	(#s_128: $$list_type)
Preds: 
CMD: goto [(d = "a")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 4.630815
STATE:
Heap: 
	
Store: 	
	(desc: #s_128)
	(d: l-nth(#s_128, 0.))
Pure Formulae: 	
	(! (#s_128 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_128))
	(! (l-nth(#s_128, 0.) == \"a\"))
	(l-nth(#s_128, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_128))
	(! (6. <# 0.))
	(6. <# (l-len #s_128))
	(l-nth(#s_128, 5.) == $$empty)
	(l-nth(#s_128, 6.) == $$empty)
Gamma: 	
	(#s_128: $$list_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 4.630997
STATE:
Heap: 
	
Store: 	
	(desc: #s_128)
	(d: l-nth(#s_128, 0.))
Pure Formulae: 	
	(! (#s_128 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_128))
	(! (l-nth(#s_128, 0.) == \"a\"))
	(l-nth(#s_128, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_128))
	(! (6. <# 0.))
	(6. <# (l-len #s_128))
	(l-nth(#s_128, 5.) == $$empty)
	(l-nth(#s_128, 6.) == $$empty)
Gamma: 	
	(#s_128: $$list_type)
Preds: 
CMD: g := l-nth(desc, 5.)
----------------------------------
----------------------------------
--5--
TIME: 4.633837
STATE:
Heap: 
	
Store: 	
	(desc: #s_128)
	(g: l-nth(#s_128, 5.))
	(d: l-nth(#s_128, 0.))
Pure Formulae: 	
	(! (#s_128 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_128))
	(! (l-nth(#s_128, 0.) == \"a\"))
	(l-nth(#s_128, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_128))
	(! (6. <# 0.))
	(6. <# (l-len #s_128))
	(l-nth(#s_128, 5.) == $$empty)
	(l-nth(#s_128, 6.) == $$empty)
Gamma: 	
	(#s_128: $$list_type)
Preds: 
CMD: s := l-nth(desc, 6.)
----------------------------------
----------------------------------
--6--
TIME: 4.634014
STATE:
Heap: 
	
Store: 	
	(desc: #s_128)
	(g: l-nth(#s_128, 5.))
	(d: l-nth(#s_128, 0.))
	(s: l-nth(#s_128, 6.))
Pure Formulae: 	
	(! (#s_128 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_128))
	(! (l-nth(#s_128, 0.) == \"a\"))
	(l-nth(#s_128, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_128))
	(! (6. <# 0.))
	(6. <# (l-len #s_128))
	(l-nth(#s_128, 5.) == $$empty)
	(l-nth(#s_128, 6.) == $$empty)
Gamma: 	
	(#s_128: $$list_type)
Preds: 
CMD: goto [((g = $$empty) and (s = $$empty))] 9 7
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 4.634194
STATE:
Heap: 
	
Store: 	
	(desc: #s_128)
	(g: l-nth(#s_128, 5.))
	(d: l-nth(#s_128, 0.))
	(s: l-nth(#s_128, 6.))
Pure Formulae: 	
	(! (#s_128 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_128))
	(! (l-nth(#s_128, 0.) == \"a\"))
	(l-nth(#s_128, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_128))
	(! (6. <# 0.))
	(6. <# (l-len #s_128))
	(l-nth(#s_128, 5.) == $$empty)
	(l-nth(#s_128, 6.) == $$empty)
Gamma: 	
	(#s_128: $$list_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 4.634292
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: #s_128)
	(g: l-nth(#s_128, 5.))
	(d: l-nth(#s_128, 0.))
	(s: l-nth(#s_128, 6.))
Pure Formulae: 	
	(! (#s_128 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_128))
	(! (l-nth(#s_128, 0.) == \"a\"))
	(l-nth(#s_128, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_128))
	(! (6. <# 0.))
	(6. <# (l-len #s_128))
	(l-nth(#s_128, 5.) == $$empty)
	(l-nth(#s_128, 6.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(#s_128: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isAccessorDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isAccessorDescriptor
----------------------------------
--0--
TIME: 4.634761
STATE:
Heap: 
	
Store: 	
	(desc: #s_129)
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(#s_129: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 4.646298
STATE:
Heap: 
	
Store: 	
	(desc: #s_129)
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(#s_129: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 4.647546
STATE:
Heap: 
	
Store: 	
	(desc: #s_129)
	(d: l-nth(#s_129, 0.))
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(#s_129: $$list_type)
Preds: 
CMD: goto [(d = "a")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 4.647760
STATE:
Heap: 
	
Store: 	
	(desc: #s_129)
	(d: l-nth(#s_129, 0.))
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(#s_129: $$list_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 4.647918
STATE:
Heap: 
	
Store: 	
	(desc: #s_129)
	(d: l-nth(#s_129, 0.))
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(#s_129: $$list_type)
Preds: 
CMD: g := l-nth(desc, 5.)
----------------------------------
----------------------------------
--5--
TIME: 4.648067
STATE:
Heap: 
	
Store: 	
	(desc: #s_129)
	(g: l-nth(#s_129, 5.))
	(d: l-nth(#s_129, 0.))
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(#s_129: $$list_type)
Preds: 
CMD: s := l-nth(desc, 6.)
----------------------------------
----------------------------------
--6--
TIME: 4.648220
STATE:
Heap: 
	
Store: 	
	(desc: #s_129)
	(g: l-nth(#s_129, 5.))
	(d: l-nth(#s_129, 0.))
	(s: l-nth(#s_129, 6.))
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(#s_129: $$list_type)
Preds: 
CMD: goto [((g = $$empty) and (s = $$empty))] 9 7
----------------------------------
I found the model: 

(define-fun |#s_129| () Extended_JSIL_Literal
  (Elem (List Nil)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 16.0) (= x!1 0.0)) 16.0
    17.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (ite (and (= x!0 Nil) (= x!1 0.0)) (String 16)
    Null))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 Nil) 7.0
    0.0))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 17.0) 1.0
  (ite (= x!0 16.0) 1.0
    0.0)))
in the ELSE branch
----------------------------------
--7--
TIME: 4.668562
STATE:
Heap: 
	
Store: 	
	(desc: #s_129)
	(g: l-nth(#s_129, 5.))
	(d: l-nth(#s_129, 0.))
	(s: l-nth(#s_129, 6.))
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(#s_129: $$list_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 4.668769
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: #s_129)
	(g: l-nth(#s_129, 5.))
	(d: l-nth(#s_129, 0.))
	(s: l-nth(#s_129, 6.))
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(#s_129: $$list_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 4.668901
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: #s_129)
	(g: l-nth(#s_129, 5.))
	(d: l-nth(#s_129, 0.))
	(s: l-nth(#s_129, 6.))
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(#s_129: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isAccessorDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isAccessorDescriptor
----------------------------------
--0--
TIME: 4.670947
STATE:
Heap: 
	
Store: 	
	(desc: #s_130)
Pure Formulae: 	
	(! (#s_130 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_130))
	(! (l-nth(#s_130, 0.) == \"a\"))
	(! (l-nth(#s_130, 0.) == \"g\"))
Gamma: 	
	(#s_130: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 4.681837
STATE:
Heap: 
	
Store: 	
	(desc: #s_130)
Pure Formulae: 	
	(! (#s_130 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_130))
	(! (l-nth(#s_130, 0.) == \"a\"))
	(! (l-nth(#s_130, 0.) == \"g\"))
Gamma: 	
	(#s_130: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 4.681957
STATE:
Heap: 
	
Store: 	
	(desc: #s_130)
	(d: l-nth(#s_130, 0.))
Pure Formulae: 	
	(! (#s_130 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_130))
	(! (l-nth(#s_130, 0.) == \"a\"))
	(! (l-nth(#s_130, 0.) == \"g\"))
Gamma: 	
	(#s_130: $$list_type)
Preds: 
CMD: goto [(d = "a")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 4.682125
STATE:
Heap: 
	
Store: 	
	(desc: #s_130)
	(d: l-nth(#s_130, 0.))
Pure Formulae: 	
	(! (#s_130 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_130))
	(! (l-nth(#s_130, 0.) == \"a\"))
	(! (l-nth(#s_130, 0.) == \"g\"))
Gamma: 	
	(#s_130: $$list_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 4.682261
STATE:
Heap: 
	
Store: 	
	(desc: #s_130)
	(d: l-nth(#s_130, 0.))
Pure Formulae: 	
	(! (#s_130 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_130))
	(! (l-nth(#s_130, 0.) == \"a\"))
	(! (l-nth(#s_130, 0.) == \"g\"))
Gamma: 	
	(#s_130: $$list_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 4.682330
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: #s_130)
	(d: l-nth(#s_130, 0.))
Pure Formulae: 	
	(! (#s_130 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_130))
	(! (l-nth(#s_130, 0.) == \"a\"))
	(! (l-nth(#s_130, 0.) == \"g\"))
Gamma: 	
	(#s_130: $$list_type)
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isAccessorDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__strictEquality
----------------------------------
--0--
TIME: 4.682614
STATE:
Heap: 
	
Store: 	
	(v1: #s_131)
	(v2: #s_132)
Pure Formulae: 	
Gamma: 	
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
LVAR LHS: #s_131 
----------------------------------
--1--
TIME: 4.682669
STATE:
Heap: 
	
Store: 	
	(v1: #s_131)
	(xret: (#s_131 = #s_132))
	(v2: #s_132)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__strictEquality
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 4.682879
STATE:
Heap: 
	
Store: 	
	(v: #s_133)
Pure Formulae: 	
	(((((#s_133 == $$undefined) \/ (#s_133 == $$null)) \/ (typeOf(#s_133) == $$boolean_type)) \/ (typeOf(#s_133) == $$number_type)) \/ (typeOf(#s_133) == $$string_type))
Gamma: 	
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 4.682948
STATE:
Heap: 
	
Store: 	
	(tv: typeOf(#s_133))
	(v: #s_133)
Pure Formulae: 	
	(((((#s_133 == $$undefined) \/ (#s_133 == $$null)) \/ (typeOf(#s_133) == $$boolean_type)) \/ (typeOf(#s_133) == $$number_type)) \/ (typeOf(#s_133) == $$string_type))
Gamma: 	
	(tv: $$type_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 4.694729
STATE:
Heap: 
	
Store: 	
	(tv: typeOf(#s_133))
	(v: #s_133)
Pure Formulae: 	
	(((((#s_133 == $$undefined) \/ (#s_133 == $$null)) \/ (typeOf(#s_133) == $$boolean_type)) \/ (typeOf(#s_133) == $$number_type)) \/ (typeOf(#s_133) == $$string_type))
Gamma: 	
	(tv: $$type_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--3--
TIME: 4.694800
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(#s_133))
	(v: #s_133)
Pure Formulae: 	
	(((((#s_133 == $$undefined) \/ (#s_133 == $$null)) \/ (typeOf(#s_133) == $$boolean_type)) \/ (typeOf(#s_133) == $$number_type)) \/ (typeOf(#s_133) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
CMD: goto 5
----------------------------------
----------------------------------
--5--
TIME: 4.694862
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(#s_133))
	(v: #s_133)
Pure Formulae: 	
	(((((#s_133 == $$undefined) \/ (#s_133 == $$null)) \/ (typeOf(#s_133) == $$boolean_type)) \/ (typeOf(#s_133) == $$number_type)) \/ (typeOf(#s_133) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 4.695129
STATE:
Heap: 
	
Store: 	
	(v: #s_134)
Pure Formulae: 	
	(! (#s_134 == $$undefined))
	(! (typeOf(#s_134) == $$string_type))
	(! (typeOf(#s_134) == $$number_type))
	(! (typeOf(#s_134) == $$boolean_type))
	(! (#s_134 == $$null))
Gamma: 	
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 4.695200
STATE:
Heap: 
	
Store: 	
	(tv: typeOf(#s_134))
	(v: #s_134)
Pure Formulae: 	
	(! (#s_134 == $$undefined))
	(! (typeOf(#s_134) == $$string_type))
	(! (typeOf(#s_134) == $$number_type))
	(! (typeOf(#s_134) == $$boolean_type))
	(! (#s_134 == $$null))
Gamma: 	
	(tv: $$type_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
I found the model: 

(define-fun |#s_134| () Extended_JSIL_Literal
  (Set (_ as-array k!1001)))
(define-fun k!1001 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
in the ELSE branch
----------------------------------
--4--
TIME: 4.732068
STATE:
Heap: 
	
Store: 	
	(tv: typeOf(#s_134))
	(v: #s_134)
Pure Formulae: 	
	(! (#s_134 == $$undefined))
	(! (typeOf(#s_134) == $$string_type))
	(! (typeOf(#s_134) == $$number_type))
	(! (typeOf(#s_134) == $$boolean_type))
	(! (#s_134 == $$null))
Gamma: 	
	(tv: $$type_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--5--
TIME: 4.745042
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(#s_134))
	(v: #s_134)
Pure Formulae: 	
	(! (#s_134 == $$undefined))
	(! (typeOf(#s_134) == $$string_type))
	(! (typeOf(#s_134) == $$number_type))
	(! (typeOf(#s_134) == $$boolean_type))
	(! (#s_134 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.745344
STATE:
Heap: 
	
Store: 	
	(desc: #s_135)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_135))
	(l-nth(#s_135, 0.) == \"d\")
Gamma: 	
	(#s_135: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 4.754986
STATE:
Heap: 
	
Store: 	
	(desc: #s_135)
	(d: l-nth(#s_135, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_135))
	(l-nth(#s_135, 0.) == \"d\")
Gamma: 	
	(#s_135: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the THEN branch
----------------------------------
--19--
TIME: 4.755110
STATE:
Heap: 
	
Store: 	
	(desc: #s_135)
	(d: l-nth(#s_135, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_135))
	(l-nth(#s_135, 0.) == \"d\")
Gamma: 	
	(#s_135: $$list_type)
Preds: 
CMD: xret := desc
----------------------------------
----------------------------------
--20--
TIME: 4.755172
STATE:
Heap: 
	
Store: 	
	(xret: #s_135)
	(desc: #s_135)
	(d: l-nth(#s_135, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_135))
	(l-nth(#s_135, 0.) == \"d\")
Gamma: 	
	(xret: $$list_type)
	(#s_135: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.755790
STATE:
Heap: 
	
Store: 	
	(desc: #s_136)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_136))
	(! (l-nth(#s_136, 0.) == \"d\"))
	(l-nth(#s_136, 0.) == \"a\")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(#s_136, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(#s_136, 0.)))
	(#s_137 == l-nth(#s_136, 0.))
	(#s_138 == l-nth(#s_136, 0.))
Gamma: 	
	(#s_137: $$list_type)
	(#s_138: $$list_type)
	(#s_136: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 4.755924
STATE:
Heap: 
	
Store: 	
	(desc: #s_136)
	(d: #s_138)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_136))
	(! (l-nth(#s_136, 0.) == \"d\"))
	(l-nth(#s_136, 0.) == \"a\")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(#s_136, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(#s_136, 0.)))
	(#s_137 == l-nth(#s_136, 0.))
	(#s_138 == l-nth(#s_136, 0.))
Gamma: 	
	(#s_137: $$list_type)
	(d: $$list_type)
	(#s_138: $$list_type)
	(#s_136: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.767360
STATE:
Heap: 
	
Store: 	
	(desc: #s_136)
	(d: #s_138)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_136))
	(! (l-nth(#s_136, 0.) == \"d\"))
	(l-nth(#s_136, 0.) == \"a\")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(#s_136, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(#s_136, 0.)))
	(#s_137 == l-nth(#s_136, 0.))
	(#s_138 == l-nth(#s_136, 0.))
Gamma: 	
	(#s_137: $$list_type)
	(d: $$list_type)
	(#s_138: $$list_type)
	(#s_136: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.767616
STATE:
Heap: 
	
Store: 	
	(desc: #s_136)
	(d: #s_138)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_136))
	(! (l-nth(#s_136, 0.) == \"d\"))
	(l-nth(#s_136, 0.) == \"a\")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(#s_136, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(#s_136, 0.)))
	(#s_137 == l-nth(#s_136, 0.))
	(#s_138 == l-nth(#s_136, 0.))
Gamma: 	
	(#s_137: $$list_type)
	(d: $$list_type)
	(#s_138: $$list_type)
	(#s_136: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
I found the model: 

(define-fun |#s_136| () Extended_JSIL_Literal
  (Elem (List (Cons Empty Nil))))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 17.0) (= x!1 0.0)) 17.0
    15.0))
(define-fun l-nth ((x!0 JSIL_Literal_List) (x!1 Real)) JSIL_Literal
  (String 17))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  (ite (= x!0 (Cons Empty Nil)) 1.0
  (ite (= x!0 Nil) 5.0
    0.0)))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 15.0) 1.0
  (ite (= x!0 17.0) 1.0
    0.0)))
The EVALUATION OF THIS PROC GAVE AN ERROR: 1 The logical expression l-nth(#s_136, 1.) is not typable in the typing enviroment: 	
	(#s_137: $$list_type)
	(d: $$list_type)
	(#s_138: $$list_type)
	(#s_136: $$list_type) 
 with the pure formulae 	
	(! (0. <# 0.))
	(0. <# (l-len #s_136))
	(! (l-nth(#s_136, 0.) == "d"))
	(l-nth(#s_136, 0.) == "a")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(#s_136, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(#s_136, 0.)))
	(#s_137 == l-nth(#s_136, 0.))
	(#s_138 == l-nth(#s_136, 0.))!!!!
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.788499
STATE:
Heap: 
	
Store: 	
	(desc: #s_139)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(#s_139: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 4.802035
STATE:
Heap: 
	
Store: 	
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(#s_139: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.802644
STATE:
Heap: 
	
Store: 	
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(#s_139: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.802927
STATE:
Heap: 
	
Store: 	
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(#s_139: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 4.803147
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_139, 1.))
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(#s_139: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 4.808221
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_139, 1.))
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(c: l-nth(#s_139, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(#s_139: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 4.808446
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_139, 1.))
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: l-nth(#s_139, 3.))
	(c: l-nth(#s_139, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(#s_139: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 4.808644
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_139, 1.))
	(w: l-nth(#s_139, 4.))
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: l-nth(#s_139, 3.))
	(c: l-nth(#s_139, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(#s_139: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 4.808935
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_139, 1.))
	(w: l-nth(#s_139, 4.))
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: l-nth(#s_139, 3.))
	(c: l-nth(#s_139, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(#s_139: $$list_type)
Preds: 
CMD: e := $$f
----------------------------------
----------------------------------
--11--
TIME: 4.809051
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_139, 4.))
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: l-nth(#s_139, 3.))
	(c: l-nth(#s_139, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_139: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 4.809269
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_139, 4.))
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: l-nth(#s_139, 3.))
	(c: l-nth(#s_139, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_139: $$list_type)
Preds: 
CMD: c := $$f
----------------------------------
----------------------------------
--13--
TIME: 4.809402
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_139, 4.))
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: l-nth(#s_139, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_139: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the THEN branch
----------------------------------
--14--
TIME: 4.809649
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_139, 4.))
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: l-nth(#s_139, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_139: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 4.809796
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_139, 4.))
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(desc: $$list_type)
	(#s_139: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 4.810038
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_139, 4.))
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(desc: $$list_type)
	(#s_139: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 4.810405
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: $$f)
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(#s_139: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 4.810564
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, $$f }})
	(w: $$f)
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(#s_139: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 4.810706
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, $$f }})
	(w: $$f)
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(#s_139: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.811373
STATE:
Heap: 
	
Store: 	
	(desc: #s_140)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 4.826162
STATE:
Heap: 
	
Store: 	
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.827599
STATE:
Heap: 
	
Store: 	
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.827860
STATE:
Heap: 
	
Store: 	
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 4.829255
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_140, 1.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 4.829472
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_140, 1.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(c: l-nth(#s_140, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 4.829663
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_140, 1.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: l-nth(#s_140, 3.))
	(c: l-nth(#s_140, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 4.829896
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_140, 1.))
	(w: l-nth(#s_140, 4.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: l-nth(#s_140, 3.))
	(c: l-nth(#s_140, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 4.830106
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_140, 1.))
	(w: l-nth(#s_140, 4.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: l-nth(#s_140, 3.))
	(c: l-nth(#s_140, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
Preds: 
CMD: e := $$f
----------------------------------
----------------------------------
--11--
TIME: 4.830233
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_140, 4.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: l-nth(#s_140, 3.))
	(c: l-nth(#s_140, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
	(e: $$boolean_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 4.830441
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_140, 4.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: l-nth(#s_140, 3.))
	(c: l-nth(#s_140, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
	(e: $$boolean_type)
Preds: 
CMD: c := $$f
----------------------------------
----------------------------------
--13--
TIME: 4.830591
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_140, 4.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: l-nth(#s_140, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
	(e: $$boolean_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the THEN branch
----------------------------------
--14--
TIME: 4.830793
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_140, 4.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: l-nth(#s_140, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
	(e: $$boolean_type)
	(c: $$boolean_type)
Preds: 
CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 4.830941
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_140, 4.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
	(e: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 4.831395
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_140, 4.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
	(e: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 4.831630
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(#s_140, 4.), $$f, $$f }})
	(w: l-nth(#s_140, 4.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
	(e: $$boolean_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 4.831778
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(#s_140, 4.), $$f, $$f }})
	(w: l-nth(#s_140, 4.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
	(e: $$boolean_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.832450
STATE:
Heap: 
	
Store: 	
	(desc: #s_141)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(#s_141: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 4.846240
STATE:
Heap: 
	
Store: 	
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(#s_141: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.846513
STATE:
Heap: 
	
Store: 	
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(#s_141: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.847911
STATE:
Heap: 
	
Store: 	
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(#s_141: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 4.848123
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_141, 1.))
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(#s_141: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 4.848313
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_141, 1.))
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(c: l-nth(#s_141, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(#s_141: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 4.848501
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_141, 1.))
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: l-nth(#s_141, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(#s_141: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 4.848694
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_141, 1.))
	(w: l-nth(#s_141, 4.))
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: l-nth(#s_141, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(#s_141: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 4.848900
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_141, 1.))
	(w: l-nth(#s_141, 4.))
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: l-nth(#s_141, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(#s_141: $$list_type)
Preds: 
CMD: e := $$f
----------------------------------
----------------------------------
--11--
TIME: 4.849027
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_141, 4.))
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: l-nth(#s_141, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_141: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 4.849280
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_141, 4.))
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: l-nth(#s_141, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_141: $$list_type)
Preds: 
CMD: c := $$f
----------------------------------
----------------------------------
--13--
TIME: 4.849391
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_141, 4.))
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_141: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 4.849639
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_141, 4.))
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_141: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 4.849882
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_141, 4.))
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_141: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 4.849999
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: $$f)
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_141: $$list_type)
	(w: $$boolean_type)
	(c: $$boolean_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 4.850195
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_141, 3.), $$f, $$f, $$f }})
	(w: $$f)
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_141: $$list_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(c: $$boolean_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 4.850311
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_141, 3.), $$f, $$f, $$f }})
	(w: $$f)
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_141: $$list_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(c: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.851255
STATE:
Heap: 
	
Store: 	
	(desc: #s_142)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 4.866700
STATE:
Heap: 
	
Store: 	
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.867299
STATE:
Heap: 
	
Store: 	
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.869788
STATE:
Heap: 
	
Store: 	
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 4.870297
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_142, 1.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 4.870832
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_142, 1.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(c: l-nth(#s_142, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 4.871319
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_142, 1.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(v: l-nth(#s_142, 3.))
	(c: l-nth(#s_142, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 4.871679
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_142, 1.))
	(w: l-nth(#s_142, 4.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(v: l-nth(#s_142, 3.))
	(c: l-nth(#s_142, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 4.872222
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_142, 1.))
	(w: l-nth(#s_142, 4.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(v: l-nth(#s_142, 3.))
	(c: l-nth(#s_142, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
Preds: 
CMD: e := $$f
----------------------------------
----------------------------------
--11--
TIME: 4.872404
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_142, 4.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(v: l-nth(#s_142, 3.))
	(c: l-nth(#s_142, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
	(e: $$boolean_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 4.872693
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_142, 4.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(v: l-nth(#s_142, 3.))
	(c: l-nth(#s_142, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
	(e: $$boolean_type)
Preds: 
CMD: c := $$f
----------------------------------
----------------------------------
--13--
TIME: 4.872810
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_142, 4.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(v: l-nth(#s_142, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
	(e: $$boolean_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 4.873079
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_142, 4.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(v: l-nth(#s_142, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
	(e: $$boolean_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 4.873388
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_142, 4.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(v: l-nth(#s_142, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
	(e: $$boolean_type)
	(c: $$boolean_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 4.873609
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_142, 3.), l-nth(#s_142, 4.), $$f, $$f }})
	(w: l-nth(#s_142, 4.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(v: l-nth(#s_142, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
	(e: $$boolean_type)
	(xret: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 4.873724
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_142, 3.), l-nth(#s_142, 4.), $$f, $$f }})
	(w: l-nth(#s_142, 4.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(v: l-nth(#s_142, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
	(e: $$boolean_type)
	(xret: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.874357
STATE:
Heap: 
	
Store: 	
	(desc: #s_143)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(#s_143: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 4.890515
STATE:
Heap: 
	
Store: 	
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(#s_143: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.890802
STATE:
Heap: 
	
Store: 	
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(#s_143: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.892525
STATE:
Heap: 
	
Store: 	
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(#s_143: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 4.892721
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_143, 1.))
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(#s_143: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 4.892918
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_143, 1.))
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(#s_143: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 4.893121
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_143, 1.))
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: l-nth(#s_143, 3.))
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(#s_143: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 4.893314
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_143, 1.))
	(w: l-nth(#s_143, 4.))
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: l-nth(#s_143, 3.))
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(#s_143: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 4.893523
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_143, 1.))
	(w: l-nth(#s_143, 4.))
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: l-nth(#s_143, 3.))
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(#s_143: $$list_type)
Preds: 
CMD: e := $$f
----------------------------------
----------------------------------
--11--
TIME: 4.893706
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_143, 4.))
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: l-nth(#s_143, 3.))
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_143: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 4.893960
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_143, 4.))
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: l-nth(#s_143, 3.))
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_143: $$list_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the THEN branch
----------------------------------
--14--
TIME: 4.894164
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_143, 4.))
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: l-nth(#s_143, 3.))
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_143: $$list_type)
Preds: 
CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 4.894366
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_143, 4.))
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: $$undefined)
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(desc: $$list_type)
	(#s_143: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 4.894608
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_143, 4.))
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: $$undefined)
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(desc: $$list_type)
	(#s_143: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 4.894760
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: $$f)
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: $$undefined)
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(#s_143: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 4.895049
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, l-nth(#s_143, 2.) }})
	(w: $$f)
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: $$undefined)
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(#s_143: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 4.895263
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, l-nth(#s_143, 2.) }})
	(w: $$f)
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: $$undefined)
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(#s_143: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.895960
STATE:
Heap: 
	
Store: 	
	(desc: #s_144)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(#s_144: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 4.910526
STATE:
Heap: 
	
Store: 	
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(#s_144: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.911884
STATE:
Heap: 
	
Store: 	
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(#s_144: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.912171
STATE:
Heap: 
	
Store: 	
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(#s_144: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 4.912365
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_144, 1.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(#s_144: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 4.912643
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_144, 1.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(#s_144: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 4.912835
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_144, 1.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(v: l-nth(#s_144, 3.))
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(#s_144: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 4.913028
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_144, 1.))
	(w: l-nth(#s_144, 4.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(v: l-nth(#s_144, 3.))
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(#s_144: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 4.913279
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_144, 1.))
	(w: l-nth(#s_144, 4.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(v: l-nth(#s_144, 3.))
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(#s_144: $$list_type)
Preds: 
CMD: e := $$f
----------------------------------
----------------------------------
--11--
TIME: 4.913400
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_144, 4.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(v: l-nth(#s_144, 3.))
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(#s_144: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 4.913652
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_144, 4.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(v: l-nth(#s_144, 3.))
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(#s_144: $$list_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the THEN branch
----------------------------------
--14--
TIME: 4.913860
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_144, 4.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(v: l-nth(#s_144, 3.))
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(#s_144: $$list_type)
Preds: 
CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 4.914011
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_144, 4.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(v: $$undefined)
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(#s_144: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 4.914294
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_144, 4.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(v: $$undefined)
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(#s_144: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 4.914592
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(#s_144, 4.), $$f, l-nth(#s_144, 2.) }})
	(w: l-nth(#s_144, 4.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(v: $$undefined)
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(#s_144: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 4.914755
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(#s_144, 4.), $$f, l-nth(#s_144, 2.) }})
	(w: l-nth(#s_144, 4.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(v: $$undefined)
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(#s_144: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.915548
STATE:
Heap: 
	
Store: 	
	(desc: #s_145)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(#s_145: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 4.930992
STATE:
Heap: 
	
Store: 	
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(#s_145: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.932634
STATE:
Heap: 
	
Store: 	
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(#s_145: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.933216
STATE:
Heap: 
	
Store: 	
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(#s_145: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 4.933686
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_145, 1.))
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(#s_145: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 4.934071
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_145, 1.))
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(#s_145: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 4.934377
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_145, 1.))
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(v: l-nth(#s_145, 3.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(#s_145: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 4.934795
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_145, 1.))
	(w: l-nth(#s_145, 4.))
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(v: l-nth(#s_145, 3.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(#s_145: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 4.935182
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_145, 1.))
	(w: l-nth(#s_145, 4.))
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(v: l-nth(#s_145, 3.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(#s_145: $$list_type)
Preds: 
CMD: e := $$f
----------------------------------
----------------------------------
--11--
TIME: 4.935444
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_145, 4.))
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(v: l-nth(#s_145, 3.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_145: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 4.936267
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_145, 4.))
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(v: l-nth(#s_145, 3.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_145: $$list_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 4.936878
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_145, 4.))
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(v: l-nth(#s_145, 3.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_145: $$list_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 4.937371
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_145, 4.))
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(v: l-nth(#s_145, 3.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(#s_145: $$list_type)
Preds: 
CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 4.937886
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: $$f)
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(v: l-nth(#s_145, 3.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(#s_145: $$list_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 4.938125
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_145, 3.), $$f, $$f, l-nth(#s_145, 2.) }})
	(w: $$f)
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(v: l-nth(#s_145, 3.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(#s_145: $$list_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 4.938251
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_145, 3.), $$f, $$f, l-nth(#s_145, 2.) }})
	(w: $$f)
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(v: l-nth(#s_145, 3.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(#s_145: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.939110
STATE:
Heap: 
	
Store: 	
	(desc: #s_146)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(#s_146: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 4.956003
STATE:
Heap: 
	
Store: 	
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(#s_146: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.956294
STATE:
Heap: 
	
Store: 	
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(#s_146: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.956539
STATE:
Heap: 
	
Store: 	
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(#s_146: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 4.957935
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_146, 1.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(#s_146: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 4.958139
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_146, 1.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
	(c: l-nth(#s_146, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(#s_146: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 4.958332
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_146, 1.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
	(v: l-nth(#s_146, 3.))
	(c: l-nth(#s_146, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(#s_146: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 4.958570
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_146, 1.))
	(w: l-nth(#s_146, 4.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
	(v: l-nth(#s_146, 3.))
	(c: l-nth(#s_146, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(#s_146: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 4.958782
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_146, 1.))
	(w: l-nth(#s_146, 4.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
	(v: l-nth(#s_146, 3.))
	(c: l-nth(#s_146, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(#s_146: $$list_type)
Preds: 
CMD: e := $$f
----------------------------------
----------------------------------
--11--
TIME: 4.958895
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_146, 4.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
	(v: l-nth(#s_146, 3.))
	(c: l-nth(#s_146, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(#s_146: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 4.959202
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_146, 4.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
	(v: l-nth(#s_146, 3.))
	(c: l-nth(#s_146, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(#s_146: $$list_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 4.959450
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_146, 4.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
	(v: l-nth(#s_146, 3.))
	(c: l-nth(#s_146, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(#s_146: $$list_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 4.959764
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(w: l-nth(#s_146, 4.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
	(v: l-nth(#s_146, 3.))
	(c: l-nth(#s_146, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(#s_146: $$list_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 4.959973
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_146, 3.), l-nth(#s_146, 4.), $$f, l-nth(#s_146, 2.) }})
	(w: l-nth(#s_146, 4.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
	(v: l-nth(#s_146, 3.))
	(c: l-nth(#s_146, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(#s_146: $$list_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 4.960090
STATE:
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_146, 3.), l-nth(#s_146, 4.), $$f, l-nth(#s_146, 2.) }})
	(w: l-nth(#s_146, 4.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
	(v: l-nth(#s_146, 3.))
	(c: l-nth(#s_146, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(#s_146: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.960709
STATE:
Heap: 
	
Store: 	
	(desc: #s_147)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 4.976571
STATE:
Heap: 
	
Store: 	
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 4.976844
STATE:
Heap: 
	
Store: 	
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 4.977223
STATE:
Heap: 
	
Store: 	
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 4.978599
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 4.978798
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(c: l-nth(#s_147, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 4.979006
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: l-nth(#s_147, 3.))
	(c: l-nth(#s_147, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 4.979345
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(w: l-nth(#s_147, 4.))
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: l-nth(#s_147, 3.))
	(c: l-nth(#s_147, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 4.979597
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(w: l-nth(#s_147, 4.))
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: l-nth(#s_147, 3.))
	(c: l-nth(#s_147, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 4.979839
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(w: l-nth(#s_147, 4.))
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: l-nth(#s_147, 3.))
	(c: l-nth(#s_147, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
Preds: 
CMD: c := $$f
----------------------------------
----------------------------------
--13--
TIME: 4.979949
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(w: l-nth(#s_147, 4.))
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: l-nth(#s_147, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the THEN branch
----------------------------------
--14--
TIME: 4.980160
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(w: l-nth(#s_147, 4.))
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: l-nth(#s_147, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 4.980308
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(w: l-nth(#s_147, 4.))
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 4.980788
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(w: l-nth(#s_147, 4.))
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 4.980940
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(w: $$f)
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 4.981458
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(#s_147, 1.), $$f }})
	(w: $$f)
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
	(w: $$boolean_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 4.981800
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(#s_147, 1.), $$f }})
	(w: $$f)
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
	(xret: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 4.986026
STATE:
Heap: 
	
Store: 	
	(desc: #s_148)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 5.002734
STATE:
Heap: 
	
Store: 	
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 5.003056
STATE:
Heap: 
	
Store: 	
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 5.004605
STATE:
Heap: 
	
Store: 	
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 5.004807
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 5.005023
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(c: l-nth(#s_148, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 5.005218
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(v: l-nth(#s_148, 3.))
	(c: l-nth(#s_148, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 5.005412
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(w: l-nth(#s_148, 4.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(v: l-nth(#s_148, 3.))
	(c: l-nth(#s_148, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 5.005707
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(w: l-nth(#s_148, 4.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(v: l-nth(#s_148, 3.))
	(c: l-nth(#s_148, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 5.005913
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(w: l-nth(#s_148, 4.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(v: l-nth(#s_148, 3.))
	(c: l-nth(#s_148, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
Preds: 
CMD: c := $$f
----------------------------------
----------------------------------
--13--
TIME: 5.006026
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(w: l-nth(#s_148, 4.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(v: l-nth(#s_148, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the THEN branch
----------------------------------
--14--
TIME: 5.006239
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(w: l-nth(#s_148, 4.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(v: l-nth(#s_148, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 5.006436
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(w: l-nth(#s_148, 4.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(desc: $$list_type)
	(v: $$undefined_type)
	(#s_148: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 5.006769
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(w: l-nth(#s_148, 4.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(desc: $$list_type)
	(v: $$undefined_type)
	(#s_148: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 5.007071
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(#s_148, 4.), l-nth(#s_148, 1.), $$f }})
	(w: l-nth(#s_148, 4.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(#s_148: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 5.007220
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(#s_148, 4.), l-nth(#s_148, 1.), $$f }})
	(w: l-nth(#s_148, 4.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(#s_148: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 5.008216
STATE:
Heap: 
	
Store: 	
	(desc: #s_149)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 5.024808
STATE:
Heap: 
	
Store: 	
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 5.026129
STATE:
Heap: 
	
Store: 	
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 5.026382
STATE:
Heap: 
	
Store: 	
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 5.026570
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 5.027020
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(c: l-nth(#s_149, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 5.027228
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(v: l-nth(#s_149, 3.))
	(c: l-nth(#s_149, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 5.027419
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(w: l-nth(#s_149, 4.))
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(v: l-nth(#s_149, 3.))
	(c: l-nth(#s_149, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 5.027712
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(w: l-nth(#s_149, 4.))
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(v: l-nth(#s_149, 3.))
	(c: l-nth(#s_149, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 5.027917
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(w: l-nth(#s_149, 4.))
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(v: l-nth(#s_149, 3.))
	(c: l-nth(#s_149, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
Preds: 
CMD: c := $$f
----------------------------------
----------------------------------
--13--
TIME: 5.028027
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(w: l-nth(#s_149, 4.))
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(v: l-nth(#s_149, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 5.028322
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(w: l-nth(#s_149, 4.))
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(v: l-nth(#s_149, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 5.028522
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(w: l-nth(#s_149, 4.))
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(v: l-nth(#s_149, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 5.028631
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(w: $$f)
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(v: l-nth(#s_149, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(#s_149: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 5.028868
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(xret: {{ \"d\", l-nth(#s_149, 3.), $$f, l-nth(#s_149, 1.), $$f }})
	(w: $$f)
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(v: l-nth(#s_149, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(#s_149: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 5.028981
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(xret: {{ \"d\", l-nth(#s_149, 3.), $$f, l-nth(#s_149, 1.), $$f }})
	(w: $$f)
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(v: l-nth(#s_149, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(#s_149: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 5.029912
STATE:
Heap: 
	
Store: 	
	(desc: #s_150)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 5.046445
STATE:
Heap: 
	
Store: 	
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 5.049949
STATE:
Heap: 
	
Store: 	
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 5.050611
STATE:
Heap: 
	
Store: 	
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 5.051242
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 5.051585
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
	(c: l-nth(#s_150, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 5.051812
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
	(v: l-nth(#s_150, 3.))
	(c: l-nth(#s_150, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 5.052078
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(w: l-nth(#s_150, 4.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
	(v: l-nth(#s_150, 3.))
	(c: l-nth(#s_150, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 5.052357
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(w: l-nth(#s_150, 4.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
	(v: l-nth(#s_150, 3.))
	(c: l-nth(#s_150, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 5.052787
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(w: l-nth(#s_150, 4.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
	(v: l-nth(#s_150, 3.))
	(c: l-nth(#s_150, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
Preds: 
CMD: c := $$f
----------------------------------
----------------------------------
--13--
TIME: 5.052959
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(w: l-nth(#s_150, 4.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
	(v: l-nth(#s_150, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 5.053271
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(w: l-nth(#s_150, 4.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
	(v: l-nth(#s_150, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 5.053607
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(w: l-nth(#s_150, 4.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
	(v: l-nth(#s_150, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 5.053864
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(xret: {{ \"d\", l-nth(#s_150, 3.), l-nth(#s_150, 4.), l-nth(#s_150, 1.), $$f }})
	(w: l-nth(#s_150, 4.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
	(v: l-nth(#s_150, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(#s_150: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 5.053983
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(xret: {{ \"d\", l-nth(#s_150, 3.), l-nth(#s_150, 4.), l-nth(#s_150, 1.), $$f }})
	(w: l-nth(#s_150, 4.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
	(v: l-nth(#s_150, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(#s_150: $$list_type)
	(c: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 5.054600
STATE:
Heap: 
	
Store: 	
	(desc: #s_151)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 5.071436
STATE:
Heap: 
	
Store: 	
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 5.072795
STATE:
Heap: 
	
Store: 	
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 5.073044
STATE:
Heap: 
	
Store: 	
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 5.073306
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 5.073493
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 5.073681
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(v: l-nth(#s_151, 3.))
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 5.073908
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(w: l-nth(#s_151, 4.))
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(v: l-nth(#s_151, 3.))
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 5.074200
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(w: l-nth(#s_151, 4.))
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(v: l-nth(#s_151, 3.))
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 5.074458
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(w: l-nth(#s_151, 4.))
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(v: l-nth(#s_151, 3.))
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the THEN branch
----------------------------------
--14--
TIME: 5.074662
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(w: l-nth(#s_151, 4.))
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(v: l-nth(#s_151, 3.))
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 
CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 5.074810
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(w: l-nth(#s_151, 4.))
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(v: $$undefined)
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(desc: $$list_type)
	(#s_151: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 5.075050
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(w: l-nth(#s_151, 4.))
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(v: $$undefined)
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(desc: $$list_type)
	(#s_151: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 5.075292
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(w: $$f)
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(v: $$undefined)
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(desc: $$list_type)
	(#s_151: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 5.075557
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(#s_151, 1.), l-nth(#s_151, 2.) }})
	(w: $$f)
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(v: $$undefined)
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(#s_151: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 5.075710
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(#s_151, 1.), l-nth(#s_151, 2.) }})
	(w: $$f)
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(v: $$undefined)
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(desc: $$list_type)
	(#s_151: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 5.076443
STATE:
Heap: 
	
Store: 	
	(desc: #s_152)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 5.092336
STATE:
Heap: 
	
Store: 	
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 5.092632
STATE:
Heap: 
	
Store: 	
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 5.092992
STATE:
Heap: 
	
Store: 	
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 5.093195
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 5.093397
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
	(c: l-nth(#s_152, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 5.095031
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
	(v: l-nth(#s_152, 3.))
	(c: l-nth(#s_152, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 5.095609
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(w: l-nth(#s_152, 4.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
	(v: l-nth(#s_152, 3.))
	(c: l-nth(#s_152, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 5.096111
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(w: l-nth(#s_152, 4.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
	(v: l-nth(#s_152, 3.))
	(c: l-nth(#s_152, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 5.096488
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(w: l-nth(#s_152, 4.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
	(v: l-nth(#s_152, 3.))
	(c: l-nth(#s_152, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the THEN branch
----------------------------------
--14--
TIME: 5.096771
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(w: l-nth(#s_152, 4.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
	(v: l-nth(#s_152, 3.))
	(c: l-nth(#s_152, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 
CMD: v := $$undefined
----------------------------------
----------------------------------
--15--
TIME: 5.096979
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(w: l-nth(#s_152, 4.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
	(v: $$undefined)
	(c: l-nth(#s_152, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 5.097700
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(w: l-nth(#s_152, 4.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
	(v: $$undefined)
	(c: l-nth(#s_152, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 5.098532
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(#s_152, 4.), l-nth(#s_152, 1.), l-nth(#s_152, 2.) }})
	(w: l-nth(#s_152, 4.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
	(v: $$undefined)
	(c: l-nth(#s_152, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(#s_152: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 5.099509
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(#s_152, 4.), l-nth(#s_152, 1.), l-nth(#s_152, 2.) }})
	(w: l-nth(#s_152, 4.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
	(v: $$undefined)
	(c: l-nth(#s_152, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(#s_152: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 5.101476
STATE:
Heap: 
	
Store: 	
	(desc: #s_153)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 5.117047
STATE:
Heap: 
	
Store: 	
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 5.118591
STATE:
Heap: 
	
Store: 	
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 5.118874
STATE:
Heap: 
	
Store: 	
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 5.119090
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 5.119412
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
	(c: l-nth(#s_153, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 5.119606
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
	(v: l-nth(#s_153, 3.))
	(c: l-nth(#s_153, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 5.119802
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(w: l-nth(#s_153, 4.))
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
	(v: l-nth(#s_153, 3.))
	(c: l-nth(#s_153, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 5.120096
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(w: l-nth(#s_153, 4.))
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
	(v: l-nth(#s_153, 3.))
	(c: l-nth(#s_153, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 5.120344
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(w: l-nth(#s_153, 4.))
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
	(v: l-nth(#s_153, 3.))
	(c: l-nth(#s_153, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 5.120714
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(w: l-nth(#s_153, 4.))
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
	(v: l-nth(#s_153, 3.))
	(c: l-nth(#s_153, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 5.120969
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(w: l-nth(#s_153, 4.))
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
	(v: l-nth(#s_153, 3.))
	(c: l-nth(#s_153, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 
CMD: w := $$f
----------------------------------
----------------------------------
--17--
TIME: 5.121084
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(w: $$f)
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
	(v: l-nth(#s_153, 3.))
	(c: l-nth(#s_153, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(#s_153: $$list_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 5.121337
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(xret: {{ \"d\", l-nth(#s_153, 3.), $$f, l-nth(#s_153, 1.), l-nth(#s_153, 2.) }})
	(w: $$f)
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
	(v: l-nth(#s_153, 3.))
	(c: l-nth(#s_153, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(#s_153: $$list_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 5.121454
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(xret: {{ \"d\", l-nth(#s_153, 3.), $$f, l-nth(#s_153, 1.), l-nth(#s_153, 2.) }})
	(w: $$f)
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
	(v: l-nth(#s_153, 3.))
	(c: l-nth(#s_153, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(xret: $$list_type)
	(w: $$boolean_type)
	(#s_153: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 5.122231
STATE:
Heap: 
	
Store: 	
	(desc: #s_154)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 5.137995
STATE:
Heap: 
	
Store: 	
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 5.139354
STATE:
Heap: 
	
Store: 	
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: goto [(d = "a")] 3 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 5.139628
STATE:
Heap: 
	
Store: 	
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: e := l-nth(desc, 1.)
----------------------------------
----------------------------------
--6--
TIME: 5.139823
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_154, 1.))
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: c := l-nth(desc, 2.)
----------------------------------
----------------------------------
--7--
TIME: 5.140404
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_154, 1.))
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
	(c: l-nth(#s_154, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--8--
TIME: 5.140621
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_154, 1.))
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
	(v: l-nth(#s_154, 3.))
	(c: l-nth(#s_154, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--9--
TIME: 5.140866
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_154, 1.))
	(w: l-nth(#s_154, 4.))
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
	(v: l-nth(#s_154, 3.))
	(c: l-nth(#s_154, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: goto [(e = $$empty)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 5.141178
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_154, 1.))
	(w: l-nth(#s_154, 4.))
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
	(v: l-nth(#s_154, 3.))
	(c: l-nth(#s_154, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: goto [(c = $$empty)] 12 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 5.141429
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_154, 1.))
	(w: l-nth(#s_154, 4.))
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
	(v: l-nth(#s_154, 3.))
	(c: l-nth(#s_154, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: goto [(v = $$empty)] 14 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 5.141728
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_154, 1.))
	(w: l-nth(#s_154, 4.))
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
	(v: l-nth(#s_154, 3.))
	(c: l-nth(#s_154, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: goto [(w = $$empty)] 16 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 5.141989
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_154, 1.))
	(w: l-nth(#s_154, 4.))
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
	(v: l-nth(#s_154, 3.))
	(c: l-nth(#s_154, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 
CMD: xret := {{ "d", v, w, e, c }}
----------------------------------
----------------------------------
--18--
TIME: 5.142231
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_154, 1.))
	(xret: {{ \"d\", l-nth(#s_154, 3.), l-nth(#s_154, 4.), l-nth(#s_154, 1.), l-nth(#s_154, 2.) }})
	(w: l-nth(#s_154, 4.))
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
	(v: l-nth(#s_154, 3.))
	(c: l-nth(#s_154, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(#s_154: $$list_type)
Preds: 
CMD: goto 20
----------------------------------
----------------------------------
--20--
TIME: 5.142350
STATE:
Heap: 
	
Store: 	
	(e: l-nth(#s_154, 1.))
	(xret: {{ \"d\", l-nth(#s_154, 3.), l-nth(#s_154, 4.), l-nth(#s_154, 1.), l-nth(#s_154, 2.) }})
	(w: l-nth(#s_154, 4.))
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
	(v: l-nth(#s_154, 3.))
	(c: l-nth(#s_154, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(#s_154: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 5.143005
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
	(#s_155 == $$undefined)
Gamma: 	
	(#s_155: $$undefined_type)
	(v: $$undefined_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 5.143111
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
	(#s_155 == $$undefined)
Gamma: 	
	(#s_155: $$undefined_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--2--
TIME: 5.143267
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$undefined)
Pure Formulae: 	
	(#s_155 == $$undefined)
Gamma: 	
	(#s_155: $$undefined_type)
	(xret: $$boolean_type)
	(v: $$undefined_type)
Preds: 
CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 5.143416
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$undefined)
Pure Formulae: 	
	(#s_155 == $$undefined)
Gamma: 	
	(#s_155: $$undefined_type)
	(xret: $$boolean_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 5.144016
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
	(#s_156 == $$null)
Gamma: 	
	(#s_156: $$null_type)
	(v: $$null_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 5.144382
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
	(#s_156 == $$null)
Gamma: 	
	(#s_156: $$null_type)
	(v: $$null_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 5.144512
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
	(#s_156 == $$null)
Gamma: 	
	(#s_156: $$null_type)
	(v: $$null_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--5--
TIME: 5.144615
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$null)
Pure Formulae: 	
	(#s_156 == $$null)
Gamma: 	
	(xret: $$boolean_type)
	(#s_156: $$null_type)
	(v: $$null_type)
Preds: 
CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 5.144720
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$null)
Pure Formulae: 	
	(#s_156 == $$null)
Gamma: 	
	(xret: $$boolean_type)
	(#s_156: $$null_type)
	(v: $$null_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 5.145035
STATE:
Heap: 
	
Store: 	
	(v: #s_157)
Pure Formulae: 	
	(! (#s_157 == $$undefined))
	(! (#s_157 == $$null))
	(typeOf(#s_157) == $$boolean_type)
Gamma: 	
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 5.159776
STATE:
Heap: 
	
Store: 	
	(v: #s_157)
Pure Formulae: 	
	(! (#s_157 == $$undefined))
	(! (#s_157 == $$null))
	(typeOf(#s_157) == $$boolean_type)
Gamma: 	
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 5.159927
STATE:
Heap: 
	
Store: 	
	(v: #s_157)
Pure Formulae: 	
	(! (#s_157 == $$undefined))
	(! (#s_157 == $$null))
	(typeOf(#s_157) == $$boolean_type)
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 5.160024
STATE:
Heap: 
	
Store: 	
	(v: #s_157)
Pure Formulae: 	
	(! (#s_157 == $$undefined))
	(! (#s_157 == $$null))
	(typeOf(#s_157) == $$boolean_type)
Gamma: 	
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--8--
TIME: 5.160088
STATE:
Heap: 
	
Store: 	
	(xret: #s_157)
	(v: #s_157)
Pure Formulae: 	
	(! (#s_157 == $$undefined))
	(! (#s_157 == $$null))
	(typeOf(#s_157) == $$boolean_type)
Gamma: 	
Preds: 
CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 5.160150
STATE:
Heap: 
	
Store: 	
	(xret: #s_157)
	(v: #s_157)
Pure Formulae: 	
	(! (#s_157 == $$undefined))
	(! (#s_157 == $$null))
	(typeOf(#s_157) == $$boolean_type)
Gamma: 	
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 5.160640
STATE:
Heap: 
	
Store: 	
	(v: #s_158)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
	(#s_158 == 0.)
Gamma: 	
	(#s_158: $$number_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 5.160834
STATE:
Heap: 
	
Store: 	
	(v: #s_158)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
	(#s_158 == 0.)
Gamma: 	
	(#s_158: $$number_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 5.161082
STATE:
Heap: 
	
Store: 	
	(v: #s_158)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
	(#s_158 == 0.)
Gamma: 	
	(#s_158: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 5.161298
STATE:
Heap: 
	
Store: 	
	(v: #s_158)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
	(#s_158 == 0.)
Gamma: 	
	(#s_158: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 5.161432
STATE:
Heap: 
	
Store: 	
	(v: #s_158)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
	(#s_158 == 0.)
Gamma: 	
	(#s_158: $$number_type)
Preds: 
CMD: goto [((v = 0.) or (not (v = v)))] 19 17
----------------------------------
in the THEN branch
----------------------------------
--19--
TIME: 5.165521
STATE:
Heap: 
	
Store: 	
	(v: #s_158)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
	(#s_158 == 0.)
Gamma: 	
	(#s_158: $$number_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--20--
TIME: 5.165611
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_158)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
	(#s_158 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_158: $$number_type)
Preds: 
CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 5.165692
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_158)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
	(#s_158 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#s_158: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 5.166006
STATE:
Heap: 
	
Store: 	
	(v: #s_159)
Pure Formulae: 	
	(! (#s_159 == $$undefined))
	(! (#s_159 == $$null))
	(! (typeOf(#s_159) == $$boolean_type))
	(typeOf(#s_159) == $$number_type)
	(! (#s_159 == 0.))
Gamma: 	
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 5.180126
STATE:
Heap: 
	
Store: 	
	(v: #s_159)
Pure Formulae: 	
	(! (#s_159 == $$undefined))
	(! (#s_159 == $$null))
	(! (typeOf(#s_159) == $$boolean_type))
	(typeOf(#s_159) == $$number_type)
	(! (#s_159 == 0.))
Gamma: 	
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 5.180349
STATE:
Heap: 
	
Store: 	
	(v: #s_159)
Pure Formulae: 	
	(! (#s_159 == $$undefined))
	(! (#s_159 == $$null))
	(! (typeOf(#s_159) == $$boolean_type))
	(typeOf(#s_159) == $$number_type)
	(! (#s_159 == 0.))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 5.180593
STATE:
Heap: 
	
Store: 	
	(v: #s_159)
Pure Formulae: 	
	(! (#s_159 == $$undefined))
	(! (#s_159 == $$null))
	(! (typeOf(#s_159) == $$boolean_type))
	(typeOf(#s_159) == $$number_type)
	(! (#s_159 == 0.))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 5.183738
STATE:
Heap: 
	
Store: 	
	(v: #s_159)
Pure Formulae: 	
	(! (#s_159 == $$undefined))
	(! (#s_159 == $$null))
	(! (typeOf(#s_159) == $$boolean_type))
	(typeOf(#s_159) == $$number_type)
	(! (#s_159 == 0.))
Gamma: 	
Preds: 
CMD: goto [((v = 0.) or (not (v = v)))] 19 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 5.183884
STATE:
Heap: 
	
Store: 	
	(v: #s_159)
Pure Formulae: 	
	(! (#s_159 == $$undefined))
	(! (#s_159 == $$null))
	(! (typeOf(#s_159) == $$boolean_type))
	(typeOf(#s_159) == $$number_type)
	(! (#s_159 == 0.))
Gamma: 	
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--18--
TIME: 5.183955
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_159)
Pure Formulae: 	
	(! (#s_159 == $$undefined))
	(! (#s_159 == $$null))
	(! (typeOf(#s_159) == $$boolean_type))
	(typeOf(#s_159) == $$number_type)
	(! (#s_159 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 5.184036
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_159)
Pure Formulae: 	
	(! (#s_159 == $$undefined))
	(! (#s_159 == $$null))
	(! (typeOf(#s_159) == $$boolean_type))
	(typeOf(#s_159) == $$number_type)
	(! (#s_159 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 5.184345
STATE:
Heap: 
	
Store: 	
	(v: #s_160)
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
	(#s_160 == \"\")
Gamma: 	
	(#s_160: $$string_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 5.184495
STATE:
Heap: 
	
Store: 	
	(v: #s_160)
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
	(#s_160 == \"\")
Gamma: 	
	(#s_160: $$string_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 5.184713
STATE:
Heap: 
	
Store: 	
	(v: #s_160)
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
	(#s_160 == \"\")
Gamma: 	
	(#s_160: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 5.184837
STATE:
Heap: 
	
Store: 	
	(v: #s_160)
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
	(#s_160 == \"\")
Gamma: 	
	(#s_160: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 5.184957
STATE:
Heap: 
	
Store: 	
	(v: #s_160)
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
	(#s_160 == \"\")
Gamma: 	
	(#s_160: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$string_type)] 12 14
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 5.185062
STATE:
Heap: 
	
Store: 	
	(v: #s_160)
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
	(#s_160 == \"\")
Gamma: 	
	(#s_160: $$string_type)
Preds: 
CMD: goto [(v = "")] 19 17
----------------------------------
in the THEN branch
----------------------------------
--19--
TIME: 5.185167
STATE:
Heap: 
	
Store: 	
	(v: #s_160)
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
	(#s_160 == \"\")
Gamma: 	
	(#s_160: $$string_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--20--
TIME: 5.185242
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_160)
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
	(#s_160 == \"\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_160: $$string_type)
Preds: 
CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 5.185316
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: #s_160)
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
	(#s_160 == \"\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_160: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 5.185649
STATE:
Heap: 
	
Store: 	
	(v: #s_161)
Pure Formulae: 	
	(! (#s_161 == $$undefined))
	(! (#s_161 == $$null))
	(! (typeOf(#s_161) == $$boolean_type))
	(! (typeOf(#s_161) == $$number_type))
	(typeOf(#s_161) == $$string_type)
	(! (#s_161 == \"\"))
Gamma: 	
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 5.199792
STATE:
Heap: 
	
Store: 	
	(v: #s_161)
Pure Formulae: 	
	(! (#s_161 == $$undefined))
	(! (#s_161 == $$null))
	(! (typeOf(#s_161) == $$boolean_type))
	(! (typeOf(#s_161) == $$number_type))
	(typeOf(#s_161) == $$string_type)
	(! (#s_161 == \"\"))
Gamma: 	
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 5.199941
STATE:
Heap: 
	
Store: 	
	(v: #s_161)
Pure Formulae: 	
	(! (#s_161 == $$undefined))
	(! (#s_161 == $$null))
	(! (typeOf(#s_161) == $$boolean_type))
	(! (typeOf(#s_161) == $$number_type))
	(typeOf(#s_161) == $$string_type)
	(! (#s_161 == \"\"))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 5.200071
STATE:
Heap: 
	
Store: 	
	(v: #s_161)
Pure Formulae: 	
	(! (#s_161 == $$undefined))
	(! (#s_161 == $$null))
	(! (typeOf(#s_161) == $$boolean_type))
	(! (typeOf(#s_161) == $$number_type))
	(typeOf(#s_161) == $$string_type)
	(! (#s_161 == \"\"))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 5.200199
STATE:
Heap: 
	
Store: 	
	(v: #s_161)
Pure Formulae: 	
	(! (#s_161 == $$undefined))
	(! (#s_161 == $$null))
	(! (typeOf(#s_161) == $$boolean_type))
	(! (typeOf(#s_161) == $$number_type))
	(typeOf(#s_161) == $$string_type)
	(! (#s_161 == \"\"))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$string_type)] 12 14
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 5.200303
STATE:
Heap: 
	
Store: 	
	(v: #s_161)
Pure Formulae: 	
	(! (#s_161 == $$undefined))
	(! (#s_161 == $$null))
	(! (typeOf(#s_161) == $$boolean_type))
	(! (typeOf(#s_161) == $$number_type))
	(typeOf(#s_161) == $$string_type)
	(! (#s_161 == \"\"))
Gamma: 	
Preds: 
CMD: goto [(v = "")] 19 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 5.200429
STATE:
Heap: 
	
Store: 	
	(v: #s_161)
Pure Formulae: 	
	(! (#s_161 == $$undefined))
	(! (#s_161 == $$null))
	(! (typeOf(#s_161) == $$boolean_type))
	(! (typeOf(#s_161) == $$number_type))
	(typeOf(#s_161) == $$string_type)
	(! (#s_161 == \"\"))
Gamma: 	
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--18--
TIME: 5.200495
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_161)
Pure Formulae: 	
	(! (#s_161 == $$undefined))
	(! (#s_161 == $$null))
	(! (typeOf(#s_161) == $$boolean_type))
	(! (typeOf(#s_161) == $$number_type))
	(typeOf(#s_161) == $$string_type)
	(! (#s_161 == \"\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 5.200556
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_161)
Pure Formulae: 	
	(! (#s_161 == $$undefined))
	(! (#s_161 == $$null))
	(! (typeOf(#s_161) == $$boolean_type))
	(! (typeOf(#s_161) == $$number_type))
	(typeOf(#s_161) == $$string_type)
	(! (#s_161 == \"\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 5.200964
STATE:
Heap: 
	
Store: 	
	(v: #s_162)
Pure Formulae: 	
	(! (#s_162 == $$undefined))
	(! (#s_162 == $$null))
	(! (typeOf(#s_162) == $$boolean_type))
	(! (typeOf(#s_162) == $$number_type))
	(! (typeOf(#s_162) == $$string_type))
	(typeOf(#s_162) == $$object_type)
Gamma: 	
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 5.217613
STATE:
Heap: 
	
Store: 	
	(v: #s_162)
Pure Formulae: 	
	(! (#s_162 == $$undefined))
	(! (#s_162 == $$null))
	(! (typeOf(#s_162) == $$boolean_type))
	(! (typeOf(#s_162) == $$number_type))
	(! (typeOf(#s_162) == $$string_type))
	(typeOf(#s_162) == $$object_type)
Gamma: 	
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 5.220657
STATE:
Heap: 
	
Store: 	
	(v: #s_162)
Pure Formulae: 	
	(! (#s_162 == $$undefined))
	(! (#s_162 == $$null))
	(! (typeOf(#s_162) == $$boolean_type))
	(! (typeOf(#s_162) == $$number_type))
	(! (typeOf(#s_162) == $$string_type))
	(typeOf(#s_162) == $$object_type)
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 5.220827
STATE:
Heap: 
	
Store: 	
	(v: #s_162)
Pure Formulae: 	
	(! (#s_162 == $$undefined))
	(! (#s_162 == $$null))
	(! (typeOf(#s_162) == $$boolean_type))
	(! (typeOf(#s_162) == $$number_type))
	(! (typeOf(#s_162) == $$string_type))
	(typeOf(#s_162) == $$object_type)
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 5.221037
STATE:
Heap: 
	
Store: 	
	(v: #s_162)
Pure Formulae: 	
	(! (#s_162 == $$undefined))
	(! (#s_162 == $$null))
	(! (typeOf(#s_162) == $$boolean_type))
	(! (typeOf(#s_162) == $$number_type))
	(! (typeOf(#s_162) == $$string_type))
	(typeOf(#s_162) == $$object_type)
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$string_type)] 12 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 5.221262
STATE:
Heap: 
	
Store: 	
	(v: #s_162)
Pure Formulae: 	
	(! (#s_162 == $$undefined))
	(! (#s_162 == $$null))
	(! (typeOf(#s_162) == $$boolean_type))
	(! (typeOf(#s_162) == $$number_type))
	(! (typeOf(#s_162) == $$string_type))
	(typeOf(#s_162) == $$object_type)
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$object_type)] 15 21
----------------------------------
in the THEN branch
----------------------------------
--15--
TIME: 5.221410
STATE:
Heap: 
	
Store: 	
	(v: #s_162)
Pure Formulae: 	
	(! (#s_162 == $$undefined))
	(! (#s_162 == $$null))
	(! (typeOf(#s_162) == $$boolean_type))
	(! (typeOf(#s_162) == $$number_type))
	(! (typeOf(#s_162) == $$string_type))
	(typeOf(#s_162) == $$object_type)
Gamma: 	
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--16--
TIME: 5.221588
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_162)
Pure Formulae: 	
	(! (#s_162 == $$undefined))
	(! (#s_162 == $$null))
	(! (typeOf(#s_162) == $$boolean_type))
	(! (typeOf(#s_162) == $$number_type))
	(! (typeOf(#s_162) == $$string_type))
	(typeOf(#s_162) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 5.221690
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_162)
Pure Formulae: 	
	(! (#s_162 == $$undefined))
	(! (#s_162 == $$null))
	(! (typeOf(#s_162) == $$boolean_type))
	(! (typeOf(#s_162) == $$number_type))
	(! (typeOf(#s_162) == $$string_type))
	(typeOf(#s_162) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 5.222457
STATE:
Heap: 
	
Store: 	
	(v: #s_163)
Pure Formulae: 	
	(! (#s_163 == $$undefined))
	(! (#s_163 == $$null))
	(! (typeOf(#s_163) == $$boolean_type))
	(! (typeOf(#s_163) == $$number_type))
	(! (typeOf(#s_163) == $$string_type))
	(! (typeOf(#s_163) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 5.240066
STATE:
Heap: 
	
Store: 	
	(v: #s_163)
Pure Formulae: 	
	(! (#s_163 == $$undefined))
	(! (#s_163 == $$null))
	(! (typeOf(#s_163) == $$boolean_type))
	(! (typeOf(#s_163) == $$number_type))
	(! (typeOf(#s_163) == $$string_type))
	(! (typeOf(#s_163) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 5.240225
STATE:
Heap: 
	
Store: 	
	(v: #s_163)
Pure Formulae: 	
	(! (#s_163 == $$undefined))
	(! (#s_163 == $$null))
	(! (typeOf(#s_163) == $$boolean_type))
	(! (typeOf(#s_163) == $$number_type))
	(! (typeOf(#s_163) == $$string_type))
	(! (typeOf(#s_163) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 5.240364
STATE:
Heap: 
	
Store: 	
	(v: #s_163)
Pure Formulae: 	
	(! (#s_163 == $$undefined))
	(! (#s_163 == $$null))
	(! (typeOf(#s_163) == $$boolean_type))
	(! (typeOf(#s_163) == $$number_type))
	(! (typeOf(#s_163) == $$string_type))
	(! (typeOf(#s_163) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 5.241909
STATE:
Heap: 
	
Store: 	
	(v: #s_163)
Pure Formulae: 	
	(! (#s_163 == $$undefined))
	(! (#s_163 == $$null))
	(! (typeOf(#s_163) == $$boolean_type))
	(! (typeOf(#s_163) == $$number_type))
	(! (typeOf(#s_163) == $$string_type))
	(! (typeOf(#s_163) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$string_type)] 12 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 5.242432
STATE:
Heap: 
	
Store: 	
	(v: #s_163)
Pure Formulae: 	
	(! (#s_163 == $$undefined))
	(! (#s_163 == $$null))
	(! (typeOf(#s_163) == $$boolean_type))
	(! (typeOf(#s_163) == $$number_type))
	(! (typeOf(#s_163) == $$string_type))
	(! (typeOf(#s_163) == $$object_type))
Gamma: 	
Preds: 
CMD: goto [(typeOf(v) = $$object_type)] 15 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 5.242874
STATE:
Heap: 
	
Store: 	
	(v: #s_163)
Pure Formulae: 	
	(! (#s_163 == $$undefined))
	(! (#s_163 == $$null))
	(! (typeOf(#s_163) == $$boolean_type))
	(! (typeOf(#s_163) == $$number_type))
	(! (typeOf(#s_163) == $$string_type))
	(! (typeOf(#s_163) == $$object_type))
Gamma: 	
Preds: 
CMD: xret := "ToBoolean: This should not happen."
----------------------------------
----------------------------------
--22--
TIME: 5.243010
STATE:
Heap: 
	
Store: 	
	(xret: \"ToBoolean: This should not happen.\")
	(v: #s_163)
Pure Formulae: 	
	(! (#s_163 == $$undefined))
	(! (#s_163 == $$null))
	(! (typeOf(#s_163) == $$boolean_type))
	(! (typeOf(#s_163) == $$number_type))
	(! (typeOf(#s_163) == $$string_type))
	(! (typeOf(#s_163) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of o__getOwnProperty
----------------------------------
--0--
TIME: 5.243675
STATE:
Heap: 
	_$l_25 |-> [(#s_165: #s_166), (default: $$unknown)]
Store: 	
	(prop: #s_165)
	(l: #s_164)
Pure Formulae: 	
	(! (#s_166 == None))
	(#s_164 == _$l_25)
Gamma: 	
	(#s_164: $$object_type)
Preds: 
CMD: x := hasField(l,prop)
----------------------------------
----------------------------------
--1--
TIME: 5.254663
STATE:
Heap: 
	_$l_25 |-> [(#s_165: #s_166), (default: $$unknown)]
Store: 	
	(prop: #s_165)
	(l: #s_164)
	(x: $$t)
Pure Formulae: 	
	(! (#s_166 == None))
	(#s_164 == _$l_25)
Gamma: 	
	(#s_164: $$object_type)
	(x: $$boolean_type)
Preds: 
CMD: goto [x] 4 2
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 5.254786
STATE:
Heap: 
	_$l_25 |-> [(#s_165: #s_166), (default: $$unknown)]
Store: 	
	(prop: #s_165)
	(l: #s_164)
	(x: $$t)
Pure Formulae: 	
	(! (#s_166 == None))
	(#s_164 == _$l_25)
Gamma: 	
	(#s_164: $$object_type)
	(x: $$boolean_type)
Preds: 
CMD: xret := [l, prop]
----------------------------------
----------------------------------
--5--
TIME: 5.254879
STATE:
Heap: 
	_$l_25 |-> [(#s_165: #s_166), (default: $$unknown)]
Store: 	
	(xret: #s_166)
	(prop: #s_165)
	(l: #s_164)
	(x: $$t)
Pure Formulae: 	
	(! (#s_166 == None))
	(#s_164 == _$l_25)
Gamma: 	
	(#s_164: $$object_type)
	(x: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__getOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__getOwnProperty
----------------------------------
--0--
TIME: 5.267794
STATE:
Heap: 
	_$l_25 |-> [(#s_168: None), (default: $$unknown)]
Store: 	
	(prop: #s_168)
	(l: #s_167)
Pure Formulae: 	
	(#s_169 == None)
	(#s_167 == _$l_25)
Gamma: 	
	(#s_167: $$object_type)
	(l: $$object_type)
	(#s_169: $$none_type)
Preds: 
CMD: x := hasField(l,prop)
----------------------------------
----------------------------------
--1--
TIME: 5.267900
STATE:
Heap: 
	_$l_25 |-> [(#s_168: None), (default: $$unknown)]
Store: 	
	(prop: #s_168)
	(l: #s_167)
	(x: $$f)
Pure Formulae: 	
	(#s_169 == None)
	(#s_167 == _$l_25)
Gamma: 	
	(#s_167: $$object_type)
	(l: $$object_type)
	(#s_169: $$none_type)
	(x: $$boolean_type)
Preds: 
CMD: goto [x] 4 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 5.268065
STATE:
Heap: 
	_$l_25 |-> [(#s_168: None), (default: $$unknown)]
Store: 	
	(prop: #s_168)
	(l: #s_167)
	(x: $$f)
Pure Formulae: 	
	(#s_169 == None)
	(#s_167 == _$l_25)
Gamma: 	
	(#s_167: $$object_type)
	(l: $$object_type)
	(x: $$boolean_type)
	(#s_169: $$none_type)
Preds: 
CMD: xret := $$undefined
----------------------------------
----------------------------------
--3--
TIME: 5.268169
STATE:
Heap: 
	_$l_25 |-> [(#s_168: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #s_168)
	(l: #s_167)
	(x: $$f)
Pure Formulae: 	
	(#s_169 == None)
	(#s_167 == _$l_25)
Gamma: 	
	(xret: $$undefined_type)
	(#s_167: $$object_type)
	(l: $$object_type)
	(#s_169: $$none_type)
	(x: $$boolean_type)
Preds: 
CMD: goto 5
----------------------------------
----------------------------------
--5--
TIME: 5.268269
STATE:
Heap: 
	_$l_25 |-> [(#s_168: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #s_168)
	(l: #s_167)
	(x: $$f)
Pure Formulae: 	
	(#s_169 == None)
	(#s_167 == _$l_25)
Gamma: 	
	(xret: $$undefined_type)
	(#s_167: $$object_type)
	(l: $$object_type)
	(x: $$boolean_type)
	(#s_169: $$none_type)
Preds: 
CMD: skip
----------------------------------
typing the jsil equality. t1: $$none_type. t2: $$none_type.
typing the jsil equality. t1: $$none_type. t2: $$none_type.
Verified one spec of proc o__getOwnProperty
----------------------------------
----------------------------------
Symbolic execution of i__isCallable
----------------------------------
--0--
TIME: 5.281483
STATE:
Heap: 
	_$l_26 |-> [(\"@call\": #s_171), (default: $$unknown)]
Store: 	
	(l: #s_170)
Pure Formulae: 	
	(typeOf(_$l_26) == $$object_type)
	(#s_170 == _$l_26)
Gamma: 	
	(#s_170: $$object_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 5.285667
STATE:
Heap: 
	_$l_26 |-> [(\"@call\": #s_171), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(l: #s_170)
Pure Formulae: 	
	(typeOf(_$l_26) == $$object_type)
	(#s_170 == _$l_26)
Gamma: 	
	(xret: $$boolean_type)
	(#s_170: $$object_type)
Preds: 
CMD: goto [(typeOf(l) = $$object_type)] 2 3
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 5.285790
STATE:
Heap: 
	_$l_26 |-> [(\"@call\": #s_171), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(l: #s_170)
Pure Formulae: 	
	(typeOf(_$l_26) == $$object_type)
	(#s_170 == _$l_26)
Gamma: 	
	(xret: $$boolean_type)
	(#s_170: $$object_type)
Preds: 
CMD: xret := hasField(l,"@call")
----------------------------------
I found the model: 

(define-fun _$l_26 () Extended_JSIL_Literal
  (Elem (Loc 0)))
(define-fun |#s_171| () Extended_JSIL_Literal
  (Set (_ as-array k!1068)))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1068 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun _$l_26 () Extended_JSIL_Literal
  (Elem (Loc 0)))
(define-fun |#s_171| () Extended_JSIL_Literal
  (Elem None))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
----------------------------------
--3--
TIME: 5.320825
STATE:
Heap: 
	_$l_26 |-> [(\"@call\": #s_171), (default: $$unknown)]
Store: 	
	(xret: (not (#s_171 = None)))
	(l: #s_170)
Pure Formulae: 	
	(typeOf(_$l_26) == $$object_type)
	(#s_170 == _$l_26)
Gamma: 	
	(xret: $$boolean_type)
	(#s_170: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isCallable
----------------------------------
----------------------------------
Symbolic execution of i__isCallable
----------------------------------
--0--
TIME: 5.321103
STATE:
Heap: 
	
Store: 	
	(l: #s_172)
Pure Formulae: 	
	(! (typeOf(#s_172) == $$object_type))
Gamma: 	
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 5.321168
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(l: #s_172)
Pure Formulae: 	
	(! (typeOf(#s_172) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(typeOf(l) = $$object_type)] 2 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 5.335944
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(l: #s_172)
Pure Formulae: 	
	(! (typeOf(#s_172) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isCallable

Verified: 53.		Prunings: 5.

RESULTS
Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v1: #s_0)
	(v2: #s_1)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(#s_1 == 0.)
	(#s_0 == 0.)
Gamma: 	
	(#s_1: $$number_type)
	(#s_0: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(v1: 0.)
	(xret: $$t)
	(v2: 0.)
	(sv2: 1.)
	(sv1: 1.)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv2: $$number_type)
	(sv1: $$number_type)
Preds: 
;
 -- FAILED with msg: SMT encoding: Construct not supported yet - unop - m_sgn!

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v1: #s_2)
	(v2: #s_3)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(#s_3) == $$number_type)
	(! (#s_3 == 0.))
	(#s_2 == 0.)
Gamma: 	
	(#s_2: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(v1: 0.)
	(xret: (0. = #s_3))
	(v2: #s_3)
Pure Formulae: 	
	(typeOf(0.) == $$number_type)
	(typeOf(#s_3) == $$number_type)
	(! (#s_3 == 0.))
Gamma: 	
	(v1: $$number_type)
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v1: #s_4)
	(v2: #s_5)
Pure Formulae: 	
	(typeOf(#s_4) == $$number_type)
	(typeOf(#s_5) == $$number_type)
	(! (#s_4 == 0.))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(v1: #s_4)
	(xret: (#s_4 = #s_5))
	(v2: #s_5)
Pure Formulae: 	
	(typeOf(#s_4) == $$number_type)
	(typeOf(#s_5) == $$number_type)
	(! (#s_4 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v1: #s_6)
	(v2: #s_7)
Pure Formulae: 	
	(typeOf(#s_6) == $$number_type)
	(! (typeOf(#s_7) == $$number_type))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(v1: #s_6)
	(xret: (#s_6 = #s_7))
	(v2: #s_7)
Pure Formulae: 	
	(typeOf(#s_6) == $$number_type)
	(! (typeOf(#s_7) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v1: #s_8)
	(v2: #s_9)
Pure Formulae: 	
	(! (typeOf(#s_8) == $$number_type))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(v1: #s_8)
	(xret: (#s_8 = #s_9))
	(v2: #s_9)
Pure Formulae: 	
	(! (typeOf(#s_8) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc create_default_object  - Single Spec - normal

Precondition
Heap: 
	_$l_0 |-> [(\"@extensible\": #s_16), (\"@class\": #s_15), (\"@proto\": #s_14), (default: $$unknown)]
Store: 	
	(pr: #s_13)
	(ext: #s_11)
	(cl: #s_10)
	(l: #s_12)
Pure Formulae: 	
	(#s_12 == _$l_0)
	(#s_10 == $$undefined)
	(#s_11 == $$undefined)
Gamma: 	
	(#s_12: $$object_type)
	(#s_10: $$undefined_type)
	(#s_11: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_0 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": #s_13), (default: $$unknown)]
Store: 	
	(pr: #s_13)
	(ext: $$t)
	(xret: _$l_0)
	(cl: \"Object\")
	(l: _$l_0)
Pure Formulae: 	
Gamma: 	
	(ext: $$boolean_type)
	(xret: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc create_default_object  - Single Spec - normal

Precondition
Heap: 
	_$l_1 |-> [(\"@extensible\": #s_23), (\"@class\": #s_22), (\"@proto\": #s_21), (default: $$unknown)]
Store: 	
	(pr: #s_20)
	(ext: #s_18)
	(cl: #s_17)
	(l: #s_19)
Pure Formulae: 	
	(! (#s_18 == $$undefined))
	(#s_17 == $$undefined)
	(#s_19 == _$l_1)
Gamma: 	
	(#s_19: $$object_type)
	(#s_17: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_1 |-> [(\"@extensible\": #s_18), (\"@class\": \"Object\"), (\"@proto\": #s_20), (default: $$unknown)]
Store: 	
	(pr: #s_20)
	(ext: #s_18)
	(xret: _$l_1)
	(cl: \"Object\")
	(l: _$l_1)
Pure Formulae: 	
	(! (#s_18 == $$undefined))
Gamma: 	
	(xret: $$object_type)
	(cl: $$string_type)
	(l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc create_default_object  - Single Spec - normal

Precondition
Heap: 
	_$l_2 |-> [(\"@extensible\": #s_30), (\"@class\": #s_29), (\"@proto\": #s_28), (default: $$unknown)]
Store: 	
	(pr: #s_27)
	(ext: #s_25)
	(cl: #s_24)
	(l: #s_26)
Pure Formulae: 	
	(! (#s_24 == $$undefined))
	(#s_25 == $$undefined)
	(#s_26 == _$l_2)
Gamma: 	
	(#s_25: $$undefined_type)
	(#s_26: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_2 |-> [(\"@extensible\": $$t), (\"@class\": #s_24), (\"@proto\": #s_27), (default: $$unknown)]
Store: 	
	(pr: #s_27)
	(ext: $$t)
	(xret: _$l_2)
	(cl: #s_24)
	(l: _$l_2)
Pure Formulae: 	
	(! (#s_24 == $$undefined))
Gamma: 	
	(ext: $$boolean_type)
	(xret: $$object_type)
	(l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc create_default_object  - Single Spec - normal

Precondition
Heap: 
	_$l_3 |-> [(\"@extensible\": #s_37), (\"@class\": #s_36), (\"@proto\": #s_35), (default: $$unknown)]
Store: 	
	(pr: #s_34)
	(ext: #s_32)
	(cl: #s_31)
	(l: #s_33)
Pure Formulae: 	
	(! (#s_31 == $$undefined))
	(! (#s_32 == $$undefined))
	(#s_33 == _$l_3)
Gamma: 	
	(#s_33: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_3 |-> [(\"@extensible\": #s_32), (\"@class\": #s_31), (\"@proto\": #s_34), (default: $$unknown)]
Store: 	
	(pr: #s_34)
	(ext: #s_32)
	(xret: _$l_3)
	(cl: #s_31)
	(l: _$l_3)
Pure Formulae: 	
	(! (#s_31 == $$undefined))
	(! (#s_32 == $$undefined))
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc create_object_with_call_construct  - Single Spec - normal

Precondition
Heap: 
	_$l_4 |-> [(\"@call\": #s_46), (\"length\": #s_44), (\"@scope\": #s_42), (\"@extensible\": #s_41), (\"@class\": #s_40), (\"@proto\": #s_39), (default: $$unknown)]
Store: 	
	(len: #s_43)
	(call: #s_45)
	(l: #s_38)
	(construct: #s_47)
Pure Formulae: 	
	(#s_47 == $$empty)
	(#s_38 == _$l_4)
Gamma: 	
	(#s_47: $$empty_type)
	(#s_38: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_4 |-> [(\"@call\": #s_45), (\"length\": {{ \"d\", #s_43, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_43)
	(call: #s_45)
	(l: _$l_4)
	(construct: $$empty)
Pure Formulae: 	
	(construct == $$empty)
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
	(construct: $$empty_type)
Preds: 
;
 -- VERIFIED

Proc create_object_with_call_construct  - Single Spec - normal

Precondition
Heap: 
	_$l_4 |-> [(\"@construct\": #s_58), (\"@call\": #s_56), (\"length\": #s_54), (\"@scope\": #s_52), (\"@extensible\": #s_51), (\"@class\": #s_50), (\"@proto\": #s_49), (default: $$unknown)]
Store: 	
	(len: #s_53)
	(call: #s_55)
	(l: #s_48)
	(construct: #s_57)
Pure Formulae: 	
	(! (#s_57 == $$empty))
	(#s_48 == _$l_4)
Gamma: 	
	(#s_48: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_4 |-> [(\"@construct\": #s_57), (\"@call\": #s_55), (\"length\": {{ \"d\", #s_53, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
Store: 	
	(xret: _$l_4)
	(len: #s_53)
	(call: #s_55)
	(l: _$l_4)
	(construct: #s_57)
Pure Formulae: 	
	(! (#s_57 == $$empty))
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc setupInitialHeap  - Single Spec - normal

Precondition
Heap: 
	_$l_14 |-> [(\"@extensible\": #s_83), (\"@class\": #s_82), (\"@proto\": #s_81), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": #s_78), (\"@call\": #s_77), (\"length\": #s_76), (\"@scope\": #s_75), (\"@extensible\": #s_74), (\"@class\": #s_73), (\"@proto\": #s_72), (default: $$unknown)]
	$lerr_proto |-> [(\"message\": #s_84), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": #s_70), (\"length\": #s_69), (\"@scope\": #s_68), (\"@extensible\": #s_67), (\"@class\": #s_66), (\"@proto\": #s_65), (default: $$unknown)]
	$lg |-> [(\"Error\": #s_79), (default: $$unknown)]
	$lerr |-> [(\"prototype\": #s_80), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": #s_61), (\"@class\": #s_60), (\"@proto\": #s_59), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": #s_71), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": #s_64), (\"@class\": #s_63), (\"@proto\": #s_62), (default: $$unknown)]
Store: 	
Pure Formulae: 	
	($lerr_proto == _$l_14)
	($lerr == _$l_12)
	($lfun_proto == _$l_11)
	($lobj_proto == _$l_8)
	($lg == _$l_6)
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_14 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_12 |-> [(\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lerr_proto |-> [(\"message\": {{ \"d\", \"\", $$t, $$f, $$t }}), (default: $$unknown)]
	_$l_11 |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (default: $$unknown)]
	$lerr |-> [(\"prototype\": {{ \"d\", $lerr_proto, $$f, $$f, $$f }}), (default: $$unknown)]
	_$l_6 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (default: $$unknown)]
	_$l_8 |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
	($lg == _$l_6)
	($lobj_proto == _$l_8)
	($lfun_proto == _$l_11)
	($lerr == _$l_12)
	($lerr_proto == _$l_14)
	(xret == $$empty)
Gamma: 	
	(xret: $$empty_type)
Preds: 
;
 -- FAILED with msg: No precondition found for procedure create_default_object.

Proc create_function_object  - Single Spec - normal

Precondition
Heap: 
	_$l_17 |-> [(\"arguments\": #s_102), (\"caller\": #s_101), (\"prototype\": #s_100), (\"@construct\": #s_94), (\"@call\": #s_93), (\"length\": #s_92), (\"@scope\": #s_91), (\"@extensible\": #s_90), (\"@class\": #s_89), (\"@proto\": #s_88), (default: $$unknown)]
	_$l_20 |-> [(\"constructor\": #s_99), (\"@extensible\": #s_98), (\"@class\": #s_97), (\"@proto\": #s_96), (default: $$unknown)]
Store: 	
	(params: #s_85)
	(call: #s_86)
	(xsc: #s_95)
	(construct: #s_87)
Pure Formulae: 	
	(_$l_19 == _$l_20)
	(! (#s_87 == $$empty))
	(_$l_16 == _$l_17)
Gamma: 	
	(#s_85: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_17 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_20, $$t, $$f, $$f }}), (\"@scope\": #s_95), (\"length\": {{ \"d\", (l-len #s_85), $$f, $$f, $$f }}), (\"@call\": #s_86), (\"@construct\": #s_87), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_19 |-> [(\"@proto\": $$null), (default: None)]
	_$l_20 |-> [(\"constructor\": {{ \"d\", _$l_17, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: #s_85)
	(xret: _$l_17)
	(len: (l-len #s_85))
	(call: #s_86)
	(l: _$l_17)
	(xsc: #s_95)
	(prototype: _$l_20)
	(construct: #s_87)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_17)
	(! (#s_87 == $$empty))
	(! (_$l_19 == $lg))
	(_$l_19 == _$l_20)
Gamma: 	
	(xret: $$object_type)
	(len: $$number_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(#s_85: $$list_type)
Preds: 
;
 -- FAILED with msg: post condition is not unifiable

Proc create_function_object  - Single Spec - normal

Precondition
Heap: 
	_$l_18 |-> [(\"arguments\": #s_119), (\"caller\": #s_118), (\"prototype\": #s_117), (\"@call\": #s_111), (\"length\": #s_110), (\"@scope\": #s_109), (\"@extensible\": #s_108), (\"@class\": #s_107), (\"@proto\": #s_106), (default: $$unknown)]
	_$l_23 |-> [(\"constructor\": #s_116), (\"@extensible\": #s_115), (\"@class\": #s_114), (\"@proto\": #s_113), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(call: #s_104)
	(xsc: #s_112)
	(construct: #s_120)
Pure Formulae: 	
	(_$l_22 == _$l_23)
	(_$l_16 == _$l_18)
	(#s_105 == $$empty)
	(#s_120 == $$empty)
Gamma: 	
	(params: $$list_type)
	(#s_120: $$empty_type)
	(#s_105: $$empty_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_18 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_23, $$t, $$f, $$f }}), (\"@scope\": #s_112), (\"length\": {{ \"d\", (l-len #s_103), $$f, $$f, $$f }}), (\"@call\": #s_104), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: $$unknown)]
	_$l_22 |-> [(\"@proto\": $$null), (default: None)]
	_$l_16 |-> [(\"@proto\": $$null), (default: None)]
	_$l_23 |-> [(\"constructor\": {{ \"d\", _$l_18, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: $$unknown)]
Store: 	
	(params: #s_103)
	(xret: _$l_18)
	(len: (l-len #s_103))
	(call: #s_104)
	(l: _$l_18)
	(xsc: #s_112)
	(prototype: _$l_23)
	(construct: $$empty)
Pure Formulae: 	
	(! (_$l_16 == $lg))
	(_$l_16 == _$l_18)
	(! (_$l_22 == $lg))
	(_$l_22 == _$l_23)
	(construct == $$empty)
Gamma: 	
	(params: $$list_type)
	(xret: $$object_type)
	(len: $$number_type)
	(l: $$object_type)
	(#s_103: $$list_type)
	(construct: $$empty_type)
	(prototype: $$object_type)
Preds: 
;
 -- FAILED with msg: post condition is not unifiable

Proc i__isDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_121)
Pure Formulae: 	
	(#s_121 == $$undefined)
Gamma: 	
	(#s_121: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
	(desc == $$undefined)
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc i__isDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_122)
Pure Formulae: 	
	(! (#s_122 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_122))
	(l-nth(#s_122, 0.) == \"d\")
Gamma: 	
	(#s_122: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: #s_122)
	(d: l-nth(#s_122, 0.))
Pure Formulae: 	
	(! (#s_122 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_122))
	(l-nth(#s_122, 0.) == \"d\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_122: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__isDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_123)
Pure Formulae: 	
	(! (#s_123 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_123))
	(! (l-nth(#s_123, 0.) == \"d\"))
	(l-nth(#s_123, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_123))
	(! (4. <# 0.))
	(4. <# (l-len #s_123))
	(l-nth(#s_123, 3.) == $$empty)
	(l-nth(#s_123, 4.) == $$empty)
Gamma: 	
	(#s_123: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(w: l-nth(#s_123, 4.))
	(desc: #s_123)
	(d: l-nth(#s_123, 0.))
	(v: l-nth(#s_123, 3.))
Pure Formulae: 	
	(! (#s_123 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_123))
	(! (l-nth(#s_123, 0.) == \"d\"))
	(l-nth(#s_123, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_123))
	(! (4. <# 0.))
	(4. <# (l-len #s_123))
	(l-nth(#s_123, 3.) == $$empty)
	(l-nth(#s_123, 4.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(#s_123: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__isDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_124)
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(#s_124: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(w: l-nth(#s_124, 4.))
	(desc: #s_124)
	(d: l-nth(#s_124, 0.))
	(v: l-nth(#s_124, 3.))
Pure Formulae: 	
	(! (#s_124 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_124))
	(! (l-nth(#s_124, 0.) == \"d\"))
	(l-nth(#s_124, 0.) == \"g\")
	(! (3. <# 0.))
	(3. <# (l-len #s_124))
	(! (4. <# 0.))
	(4. <# (l-len #s_124))
	((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(#s_124: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__isDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_125)
Pure Formulae: 	
	(! (#s_125 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_125))
	(! (l-nth(#s_125, 0.) == \"d\"))
	(! (l-nth(#s_125, 0.) == \"g\"))
Gamma: 	
	(#s_125: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: #s_125)
	(d: l-nth(#s_125, 0.))
Pure Formulae: 	
	(! (#s_125 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_125))
	(! (l-nth(#s_125, 0.) == \"d\"))
	(! (l-nth(#s_125, 0.) == \"g\"))
Gamma: 	
	(xret: $$boolean_type)
	(#s_125: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__isAccessorDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_126)
Pure Formulae: 	
	(#s_126 == $$undefined)
Gamma: 	
	(#s_126: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
	(desc == $$undefined)
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc i__isAccessorDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_127)
Pure Formulae: 	
	(! (#s_127 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_127))
	(l-nth(#s_127, 0.) == \"a\")
Gamma: 	
	(#s_127: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: #s_127)
	(d: l-nth(#s_127, 0.))
Pure Formulae: 	
	(! (#s_127 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_127))
	(l-nth(#s_127, 0.) == \"a\")
Gamma: 	
	(xret: $$boolean_type)
	(#s_127: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__isAccessorDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_128)
Pure Formulae: 	
	(! (#s_128 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_128))
	(! (l-nth(#s_128, 0.) == \"a\"))
	(l-nth(#s_128, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_128))
	(! (6. <# 0.))
	(6. <# (l-len #s_128))
	(l-nth(#s_128, 5.) == $$empty)
	(l-nth(#s_128, 6.) == $$empty)
Gamma: 	
	(#s_128: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: #s_128)
	(g: l-nth(#s_128, 5.))
	(d: l-nth(#s_128, 0.))
	(s: l-nth(#s_128, 6.))
Pure Formulae: 	
	(! (#s_128 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_128))
	(! (l-nth(#s_128, 0.) == \"a\"))
	(l-nth(#s_128, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_128))
	(! (6. <# 0.))
	(6. <# (l-len #s_128))
	(l-nth(#s_128, 5.) == $$empty)
	(l-nth(#s_128, 6.) == $$empty)
Gamma: 	
	(xret: $$boolean_type)
	(#s_128: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__isAccessorDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_129)
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(#s_129: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: #s_129)
	(g: l-nth(#s_129, 5.))
	(d: l-nth(#s_129, 0.))
	(s: l-nth(#s_129, 6.))
Pure Formulae: 	
	(! (#s_129 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_129))
	(! (l-nth(#s_129, 0.) == \"a\"))
	(l-nth(#s_129, 0.) == \"g\")
	(! (5. <# 0.))
	(5. <# (l-len #s_129))
	(! (6. <# 0.))
	(6. <# (l-len #s_129))
	((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty)))
Gamma: 	
	(xret: $$boolean_type)
	(#s_129: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__isAccessorDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_130)
Pure Formulae: 	
	(! (#s_130 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_130))
	(! (l-nth(#s_130, 0.) == \"a\"))
	(! (l-nth(#s_130, 0.) == \"g\"))
Gamma: 	
	(#s_130: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: #s_130)
	(d: l-nth(#s_130, 0.))
Pure Formulae: 	
	(! (#s_130 == $$undefined))
	(! (0. <# 0.))
	(0. <# (l-len #s_130))
	(! (l-nth(#s_130, 0.) == \"a\"))
	(! (l-nth(#s_130, 0.) == \"g\"))
Gamma: 	
	(#s_130: $$list_type)
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__strictEquality  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v1: #s_131)
	(v2: #s_132)
Pure Formulae: 	
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(v1: #s_131)
	(xret: (#s_131 = #s_132))
	(v2: #s_132)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_133)
Pure Formulae: 	
	(((((#s_133 == $$undefined) \/ (#s_133 == $$null)) \/ (typeOf(#s_133) == $$boolean_type)) \/ (typeOf(#s_133) == $$number_type)) \/ (typeOf(#s_133) == $$string_type))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: typeOf(#s_133))
	(v: #s_133)
Pure Formulae: 	
	(((((#s_133 == $$undefined) \/ (#s_133 == $$null)) \/ (typeOf(#s_133) == $$boolean_type)) \/ (typeOf(#s_133) == $$number_type)) \/ (typeOf(#s_133) == $$string_type))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
;
 -- VERIFIED

Proc i__isPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_134)
Pure Formulae: 	
	(! (#s_134 == $$undefined))
	(! (typeOf(#s_134) == $$string_type))
	(! (typeOf(#s_134) == $$number_type))
	(! (typeOf(#s_134) == $$boolean_type))
	(! (#s_134 == $$null))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(tv: typeOf(#s_134))
	(v: #s_134)
Pure Formulae: 	
	(! (#s_134 == $$undefined))
	(! (typeOf(#s_134) == $$string_type))
	(! (typeOf(#s_134) == $$number_type))
	(! (typeOf(#s_134) == $$boolean_type))
	(! (#s_134 == $$null))
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_135)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_135))
	(l-nth(#s_135, 0.) == \"d\")
Gamma: 	
	(#s_135: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #s_135)
	(desc: #s_135)
	(d: l-nth(#s_135, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_135))
	(l-nth(#s_135, 0.) == \"d\")
Gamma: 	
	(#s_135: $$list_type)
	(xret: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_136)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_136))
	(! (l-nth(#s_136, 0.) == \"d\"))
	(l-nth(#s_136, 0.) == \"a\")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(#s_136, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(#s_136, 0.)))
	(#s_138 == l-nth(#s_136, 0.))
	(#s_137 == l-nth(#s_136, 0.))
Gamma: 	
	(#s_137: $$list_type)
	(#s_138: $$list_type)
	(#s_136: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: {{ \"d\", $$undefined, $$f, l-nth(l-nth(#s_136, 0.), 3.), l-nth(l-nth(#s_136, 0.), 4.) }})
	(desc: #s_136)
	(d: l-nth(#s_136, 0.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_136))
	(! (l-nth(#s_136, 0.) == \"d\"))
	(l-nth(#s_136, 0.) == \"a\")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(#s_136, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(#s_136, 0.)))
Gamma: 	
	(xret: $$list_type)
	(desc: $$list_type)
	(#s_136: $$list_type)
Preds: 
;
 -- FAILED with msg: The logical expression l-nth(#s_136, 1.) is not typable in the typing enviroment: 	
	(#s_137: $$list_type)
	(d: $$list_type)
	(#s_138: $$list_type)
	(#s_136: $$list_type) 
 with the pure formulae 	
	(! (0. <# 0.))
	(0. <# (l-len #s_136))
	(! (l-nth(#s_136, 0.) == "d"))
	(l-nth(#s_136, 0.) == "a")
	(! (4. <# 0.))
	(4. <# (l-len l-nth(#s_136, 0.)))
	(! (3. <# 0.))
	(3. <# (l-len l-nth(#s_136, 0.)))
	(#s_137 == l-nth(#s_136, 0.))
	(#s_138 == l-nth(#s_136, 0.))

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_139)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
Gamma: 	
	(#s_139: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, $$f }})
	(w: $$f)
	(desc: #s_139)
	(d: l-nth(#s_139, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_139))
	(! (l-nth(#s_139, 0.) == \"d\"))
	(! (l-nth(#s_139, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_139))
	(! (2. <# 0.))
	(2. <# (l-len #s_139))
	(! (3. <# 0.))
	(3. <# (l-len #s_139))
	(! (4. <# 0.))
	(4. <# (l-len #s_139))
	(l-nth(#s_139, 1.) == $$empty)
	(l-nth(#s_139, 2.) == $$empty)
	(l-nth(#s_139, 3.) == $$empty)
	(l-nth(#s_139, 4.) == $$empty)
	(v == $$undefined)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(#s_139: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_140)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
Gamma: 	
	(#s_140: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(#s_140, 4.), $$f, $$f }})
	(w: l-nth(#s_140, 4.))
	(desc: #s_140)
	(d: l-nth(#s_140, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_140))
	(! (l-nth(#s_140, 0.) == \"d\"))
	(! (l-nth(#s_140, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_140))
	(! (2. <# 0.))
	(2. <# (l-len #s_140))
	(! (3. <# 0.))
	(3. <# (l-len #s_140))
	(! (4. <# 0.))
	(4. <# (l-len #s_140))
	(l-nth(#s_140, 1.) == $$empty)
	(l-nth(#s_140, 2.) == $$empty)
	(l-nth(#s_140, 3.) == $$empty)
	(! (l-nth(#s_140, 4.) == $$empty))
	(v == $$undefined)
Gamma: 	
	(#s_140: $$list_type)
	(e: $$boolean_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_141)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(#s_141: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_141, 3.), $$f, $$f, $$f }})
	(w: $$f)
	(desc: #s_141)
	(d: l-nth(#s_141, 0.))
	(v: l-nth(#s_141, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_141))
	(! (l-nth(#s_141, 0.) == \"d\"))
	(! (l-nth(#s_141, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_141))
	(! (2. <# 0.))
	(2. <# (l-len #s_141))
	(! (3. <# 0.))
	(3. <# (l-len #s_141))
	(! (4. <# 0.))
	(4. <# (l-len #s_141))
	(l-nth(#s_141, 1.) == $$empty)
	(l-nth(#s_141, 2.) == $$empty)
	(! (l-nth(#s_141, 3.) == $$empty))
	(l-nth(#s_141, 4.) == $$empty)
Gamma: 	
	(#s_141: $$list_type)
	(e: $$boolean_type)
	(w: $$boolean_type)
	(xret: $$list_type)
	(c: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_142)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_142, 3.), l-nth(#s_142, 4.), $$f, $$f }})
	(w: l-nth(#s_142, 4.))
	(desc: #s_142)
	(d: l-nth(#s_142, 0.))
	(v: l-nth(#s_142, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_142))
	(! (l-nth(#s_142, 0.) == \"d\"))
	(! (l-nth(#s_142, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_142))
	(! (2. <# 0.))
	(2. <# (l-len #s_142))
	(! (3. <# 0.))
	(3. <# (l-len #s_142))
	(! (4. <# 0.))
	(4. <# (l-len #s_142))
	(l-nth(#s_142, 1.) == $$empty)
	(l-nth(#s_142, 2.) == $$empty)
	(! (l-nth(#s_142, 3.) == $$empty))
	(! (l-nth(#s_142, 4.) == $$empty))
Gamma: 	
	(#s_142: $$list_type)
	(e: $$boolean_type)
	(xret: $$list_type)
	(c: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_143)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
Gamma: 	
	(#s_143: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, $$f, $$f, l-nth(#s_143, 2.) }})
	(w: $$f)
	(desc: #s_143)
	(d: l-nth(#s_143, 0.))
	(v: $$undefined)
	(c: l-nth(#s_143, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_143))
	(! (l-nth(#s_143, 0.) == \"d\"))
	(! (l-nth(#s_143, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_143))
	(! (2. <# 0.))
	(2. <# (l-len #s_143))
	(! (3. <# 0.))
	(3. <# (l-len #s_143))
	(! (4. <# 0.))
	(4. <# (l-len #s_143))
	(l-nth(#s_143, 1.) == $$empty)
	(! (l-nth(#s_143, 2.) == $$empty))
	(l-nth(#s_143, 3.) == $$empty)
	(l-nth(#s_143, 4.) == $$empty)
	(v == $$undefined)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(#s_143: $$list_type)
	(v: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_144)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
Gamma: 	
	(#s_144: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", $$undefined, l-nth(#s_144, 4.), $$f, l-nth(#s_144, 2.) }})
	(w: l-nth(#s_144, 4.))
	(desc: #s_144)
	(d: l-nth(#s_144, 0.))
	(v: $$undefined)
	(c: l-nth(#s_144, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_144))
	(! (l-nth(#s_144, 0.) == \"d\"))
	(! (l-nth(#s_144, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_144))
	(! (2. <# 0.))
	(2. <# (l-len #s_144))
	(! (3. <# 0.))
	(3. <# (l-len #s_144))
	(! (4. <# 0.))
	(4. <# (l-len #s_144))
	(l-nth(#s_144, 1.) == $$empty)
	(! (l-nth(#s_144, 2.) == $$empty))
	(l-nth(#s_144, 3.) == $$empty)
	(! (l-nth(#s_144, 4.) == $$empty))
	(v == $$undefined)
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(#s_144: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_145)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(#s_145: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_145, 3.), $$f, $$f, l-nth(#s_145, 2.) }})
	(w: $$f)
	(desc: #s_145)
	(d: l-nth(#s_145, 0.))
	(v: l-nth(#s_145, 3.))
	(c: l-nth(#s_145, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_145))
	(! (l-nth(#s_145, 0.) == \"d\"))
	(! (l-nth(#s_145, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_145))
	(! (2. <# 0.))
	(2. <# (l-len #s_145))
	(! (3. <# 0.))
	(3. <# (l-len #s_145))
	(! (4. <# 0.))
	(4. <# (l-len #s_145))
	(l-nth(#s_145, 1.) == $$empty)
	(! (l-nth(#s_145, 2.) == $$empty))
	(! (l-nth(#s_145, 3.) == $$empty))
	(l-nth(#s_145, 4.) == $$empty)
Gamma: 	
	(e: $$boolean_type)
	(w: $$boolean_type)
	(xret: $$list_type)
	(#s_145: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_146)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(#s_146: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: $$f)
	(xret: {{ \"d\", l-nth(#s_146, 3.), l-nth(#s_146, 4.), $$f, l-nth(#s_146, 2.) }})
	(w: l-nth(#s_146, 4.))
	(desc: #s_146)
	(d: l-nth(#s_146, 0.))
	(v: l-nth(#s_146, 3.))
	(c: l-nth(#s_146, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_146))
	(! (l-nth(#s_146, 0.) == \"d\"))
	(! (l-nth(#s_146, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_146))
	(! (2. <# 0.))
	(2. <# (l-len #s_146))
	(! (3. <# 0.))
	(3. <# (l-len #s_146))
	(! (4. <# 0.))
	(4. <# (l-len #s_146))
	(l-nth(#s_146, 1.) == $$empty)
	(! (l-nth(#s_146, 2.) == $$empty))
	(! (l-nth(#s_146, 3.) == $$empty))
	(! (l-nth(#s_146, 4.) == $$empty))
Gamma: 	
	(e: $$boolean_type)
	(xret: $$list_type)
	(#s_146: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_147)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
Gamma: 	
	(#s_147: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: l-nth(#s_147, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(#s_147, 1.), $$f }})
	(w: $$f)
	(desc: #s_147)
	(d: l-nth(#s_147, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_147))
	(! (l-nth(#s_147, 0.) == \"d\"))
	(! (l-nth(#s_147, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_147))
	(! (2. <# 0.))
	(2. <# (l-len #s_147))
	(! (3. <# 0.))
	(3. <# (l-len #s_147))
	(! (4. <# 0.))
	(4. <# (l-len #s_147))
	(! (l-nth(#s_147, 1.) == $$empty))
	(l-nth(#s_147, 2.) == $$empty)
	(l-nth(#s_147, 3.) == $$empty)
	(l-nth(#s_147, 4.) == $$empty)
	(v == $$undefined)
Gamma: 	
	(#s_147: $$list_type)
	(w: $$boolean_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(c: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_148)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
Gamma: 	
	(#s_148: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: l-nth(#s_148, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(#s_148, 4.), l-nth(#s_148, 1.), $$f }})
	(w: l-nth(#s_148, 4.))
	(desc: #s_148)
	(d: l-nth(#s_148, 0.))
	(v: $$undefined)
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_148))
	(! (l-nth(#s_148, 0.) == \"d\"))
	(! (l-nth(#s_148, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_148))
	(! (2. <# 0.))
	(2. <# (l-len #s_148))
	(! (3. <# 0.))
	(3. <# (l-len #s_148))
	(! (4. <# 0.))
	(4. <# (l-len #s_148))
	(! (l-nth(#s_148, 1.) == $$empty))
	(l-nth(#s_148, 2.) == $$empty)
	(l-nth(#s_148, 3.) == $$empty)
	(! (l-nth(#s_148, 4.) == $$empty))
	(v == $$undefined)
Gamma: 	
	(xret: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
	(#s_148: $$list_type)
	(c: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_149)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(#s_149: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: l-nth(#s_149, 1.))
	(xret: {{ \"d\", l-nth(#s_149, 3.), $$f, l-nth(#s_149, 1.), $$f }})
	(w: $$f)
	(desc: #s_149)
	(d: l-nth(#s_149, 0.))
	(v: l-nth(#s_149, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_149))
	(! (l-nth(#s_149, 0.) == \"d\"))
	(! (l-nth(#s_149, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_149))
	(! (2. <# 0.))
	(2. <# (l-len #s_149))
	(! (3. <# 0.))
	(3. <# (l-len #s_149))
	(! (4. <# 0.))
	(4. <# (l-len #s_149))
	(! (l-nth(#s_149, 1.) == $$empty))
	(l-nth(#s_149, 2.) == $$empty)
	(! (l-nth(#s_149, 3.) == $$empty))
	(l-nth(#s_149, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(xret: $$list_type)
	(#s_149: $$list_type)
	(c: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_150)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(#s_150: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: l-nth(#s_150, 1.))
	(xret: {{ \"d\", l-nth(#s_150, 3.), l-nth(#s_150, 4.), l-nth(#s_150, 1.), $$f }})
	(w: l-nth(#s_150, 4.))
	(desc: #s_150)
	(d: l-nth(#s_150, 0.))
	(v: l-nth(#s_150, 3.))
	(c: $$f)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_150))
	(! (l-nth(#s_150, 0.) == \"d\"))
	(! (l-nth(#s_150, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_150))
	(! (2. <# 0.))
	(2. <# (l-len #s_150))
	(! (3. <# 0.))
	(3. <# (l-len #s_150))
	(! (4. <# 0.))
	(4. <# (l-len #s_150))
	(! (l-nth(#s_150, 1.) == $$empty))
	(l-nth(#s_150, 2.) == $$empty)
	(! (l-nth(#s_150, 3.) == $$empty))
	(! (l-nth(#s_150, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(#s_150: $$list_type)
	(c: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_151)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
Gamma: 	
	(#s_151: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: l-nth(#s_151, 1.))
	(xret: {{ \"d\", $$undefined, $$f, l-nth(#s_151, 1.), l-nth(#s_151, 2.) }})
	(w: $$f)
	(desc: #s_151)
	(d: l-nth(#s_151, 0.))
	(v: $$undefined)
	(c: l-nth(#s_151, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_151))
	(! (l-nth(#s_151, 0.) == \"d\"))
	(! (l-nth(#s_151, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_151))
	(! (2. <# 0.))
	(2. <# (l-len #s_151))
	(! (3. <# 0.))
	(3. <# (l-len #s_151))
	(! (4. <# 0.))
	(4. <# (l-len #s_151))
	(! (l-nth(#s_151, 1.) == $$empty))
	(! (l-nth(#s_151, 2.) == $$empty))
	(l-nth(#s_151, 3.) == $$empty)
	(l-nth(#s_151, 4.) == $$empty)
	(v == $$undefined)
Gamma: 	
	(w: $$boolean_type)
	(xret: $$list_type)
	(desc: $$list_type)
	(#s_151: $$list_type)
	(v: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_152)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
Gamma: 	
	(#s_152: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: l-nth(#s_152, 1.))
	(xret: {{ \"d\", $$undefined, l-nth(#s_152, 4.), l-nth(#s_152, 1.), l-nth(#s_152, 2.) }})
	(w: l-nth(#s_152, 4.))
	(desc: #s_152)
	(d: l-nth(#s_152, 0.))
	(v: $$undefined)
	(c: l-nth(#s_152, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_152))
	(! (l-nth(#s_152, 0.) == \"d\"))
	(! (l-nth(#s_152, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_152))
	(! (2. <# 0.))
	(2. <# (l-len #s_152))
	(! (3. <# 0.))
	(3. <# (l-len #s_152))
	(! (4. <# 0.))
	(4. <# (l-len #s_152))
	(! (l-nth(#s_152, 1.) == $$empty))
	(! (l-nth(#s_152, 2.) == $$empty))
	(l-nth(#s_152, 3.) == $$empty)
	(! (l-nth(#s_152, 4.) == $$empty))
	(v == $$undefined)
Gamma: 	
	(xret: $$list_type)
	(#s_152: $$list_type)
	(desc: $$list_type)
	(v: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_153)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(#s_153: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: l-nth(#s_153, 1.))
	(xret: {{ \"d\", l-nth(#s_153, 3.), $$f, l-nth(#s_153, 1.), l-nth(#s_153, 2.) }})
	(w: $$f)
	(desc: #s_153)
	(d: l-nth(#s_153, 0.))
	(v: l-nth(#s_153, 3.))
	(c: l-nth(#s_153, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_153))
	(! (l-nth(#s_153, 0.) == \"d\"))
	(! (l-nth(#s_153, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_153))
	(! (2. <# 0.))
	(2. <# (l-len #s_153))
	(! (3. <# 0.))
	(3. <# (l-len #s_153))
	(! (4. <# 0.))
	(4. <# (l-len #s_153))
	(! (l-nth(#s_153, 1.) == $$empty))
	(! (l-nth(#s_153, 2.) == $$empty))
	(! (l-nth(#s_153, 3.) == $$empty))
	(l-nth(#s_153, 4.) == $$empty)
Gamma: 	
	(w: $$boolean_type)
	(xret: $$list_type)
	(#s_153: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #s_154)
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(#s_154: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(e: l-nth(#s_154, 1.))
	(xret: {{ \"d\", l-nth(#s_154, 3.), l-nth(#s_154, 4.), l-nth(#s_154, 1.), l-nth(#s_154, 2.) }})
	(w: l-nth(#s_154, 4.))
	(desc: #s_154)
	(d: l-nth(#s_154, 0.))
	(v: l-nth(#s_154, 3.))
	(c: l-nth(#s_154, 2.))
Pure Formulae: 	
	(! (0. <# 0.))
	(0. <# (l-len #s_154))
	(! (l-nth(#s_154, 0.) == \"d\"))
	(! (l-nth(#s_154, 0.) == \"a\"))
	(! (1. <# 0.))
	(1. <# (l-len #s_154))
	(! (2. <# 0.))
	(2. <# (l-len #s_154))
	(! (3. <# 0.))
	(3. <# (l-len #s_154))
	(! (4. <# 0.))
	(4. <# (l-len #s_154))
	(! (l-nth(#s_154, 1.) == $$empty))
	(! (l-nth(#s_154, 2.) == $$empty))
	(! (l-nth(#s_154, 3.) == $$empty))
	(! (l-nth(#s_154, 4.) == $$empty))
Gamma: 	
	(xret: $$list_type)
	(#s_154: $$list_type)
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_155)
Pure Formulae: 	
	(#s_155 == $$undefined)
Gamma: 	
	(#s_155: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$undefined)
Pure Formulae: 	
	(v == $$undefined)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_156)
Pure Formulae: 	
	(#s_156 == $$null)
Gamma: 	
	(#s_156: $$null_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: $$null)
Pure Formulae: 	
	(v == $$null)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$null_type)
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_157)
Pure Formulae: 	
	(! (#s_157 == $$undefined))
	(! (#s_157 == $$null))
	(typeOf(#s_157) == $$boolean_type)
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #s_157)
	(v: #s_157)
Pure Formulae: 	
	(! (#s_157 == $$undefined))
	(! (#s_157 == $$null))
	(typeOf(#s_157) == $$boolean_type)
Gamma: 	
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_158)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
	(#s_158 == 0.)
Gamma: 	
	(#s_158: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: 0.)
Pure Formulae: 	
	(! (typeOf(0.) == $$boolean_type))
	(typeOf(0.) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$number_type)
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_159)
Pure Formulae: 	
	(! (#s_159 == $$undefined))
	(! (#s_159 == $$null))
	(! (typeOf(#s_159) == $$boolean_type))
	(typeOf(#s_159) == $$number_type)
	(! (#s_159 == 0.))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_159)
Pure Formulae: 	
	(! (#s_159 == $$undefined))
	(! (#s_159 == $$null))
	(! (typeOf(#s_159) == $$boolean_type))
	(typeOf(#s_159) == $$number_type)
	(! (#s_159 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_160)
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
	(#s_160 == \"\")
Gamma: 	
	(#s_160: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(v: \"\")
Pure Formulae: 	
	(! (typeOf(\"\") == $$boolean_type))
	(! (typeOf(\"\") == $$number_type))
	(typeOf(\"\") == $$string_type)
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_161)
Pure Formulae: 	
	(! (#s_161 == $$undefined))
	(! (#s_161 == $$null))
	(! (typeOf(#s_161) == $$boolean_type))
	(! (typeOf(#s_161) == $$number_type))
	(typeOf(#s_161) == $$string_type)
	(! (#s_161 == \"\"))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_161)
Pure Formulae: 	
	(! (#s_161 == $$undefined))
	(! (#s_161 == $$null))
	(! (typeOf(#s_161) == $$boolean_type))
	(! (typeOf(#s_161) == $$number_type))
	(typeOf(#s_161) == $$string_type)
	(! (#s_161 == \"\"))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_162)
Pure Formulae: 	
	(! (#s_162 == $$undefined))
	(! (#s_162 == $$null))
	(! (typeOf(#s_162) == $$boolean_type))
	(! (typeOf(#s_162) == $$number_type))
	(! (typeOf(#s_162) == $$string_type))
	(typeOf(#s_162) == $$object_type)
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #s_162)
Pure Formulae: 	
	(! (#s_162 == $$undefined))
	(! (#s_162 == $$null))
	(! (typeOf(#s_162) == $$boolean_type))
	(! (typeOf(#s_162) == $$number_type))
	(! (typeOf(#s_162) == $$string_type))
	(typeOf(#s_162) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #s_163)
Pure Formulae: 	
	(! (#s_163 == $$undefined))
	(! (#s_163 == $$null))
	(! (typeOf(#s_163) == $$boolean_type))
	(! (typeOf(#s_163) == $$number_type))
	(! (typeOf(#s_163) == $$string_type))
	(! (typeOf(#s_163) == $$object_type))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: \"ToBoolean: This should not happen.\")
	(v: #s_163)
Pure Formulae: 	
	(! (#s_163 == $$undefined))
	(! (#s_163 == $$null))
	(! (typeOf(#s_163) == $$boolean_type))
	(! (typeOf(#s_163) == $$number_type))
	(! (typeOf(#s_163) == $$string_type))
	(! (typeOf(#s_163) == $$object_type))
Gamma: 	
	(xret: $$string_type)
Preds: 
;
 -- VERIFIED

Proc o__getOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_25 |-> [(#s_165: #s_166), (default: $$unknown)]
Store: 	
	(prop: #s_165)
	(l: #s_164)
Pure Formulae: 	
	(! (#s_166 == None))
	(#s_164 == _$l_25)
Gamma: 	
	(#s_164: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_25 |-> [(#s_165: #s_166), (default: $$unknown)]
Store: 	
	(xret: #s_166)
	(prop: #s_165)
	(l: _$l_25)
	(x: (not (#s_166 = None)))
Pure Formulae: 	
	(! (#s_166 == None))
Gamma: 	
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc o__getOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_25 |-> [(#s_168: None), (default: $$unknown)]
Store: 	
	(prop: #s_168)
	(l: #s_167)
Pure Formulae: 	
	(#s_167 == _$l_25)
	(#s_169 == None)
Gamma: 	
	(#s_167: $$object_type)
	(#s_169: $$none_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_25 |-> [(#s_168: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #s_168)
	(l: _$l_25)
	(x: (not (None = None)))
Pure Formulae: 	
	(xret == $$undefined)
Gamma: 	
	(xret: $$undefined_type)
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isCallable  - Single Spec - normal

Precondition
Heap: 
	_$l_26 |-> [(\"@call\": #s_171), (default: $$unknown)]
Store: 	
	(l: #s_170)
Pure Formulae: 	
	(typeOf(_$l_26) == $$object_type)
	(#s_170 == _$l_26)
Gamma: 	
	(#s_170: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_26 |-> [(\"@call\": #s_171), (default: $$unknown)]
Store: 	
	(xret: (not (#s_171 = None)))
	(l: _$l_26)
Pure Formulae: 	
	(typeOf(_$l_26) == $$object_type)
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__isCallable  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(l: #s_172)
Pure Formulae: 	
	(! (typeOf(#s_172) == $$object_type))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
	(l: #s_172)
Pure Formulae: 	
	(! (typeOf(#s_172) == $$object_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

There were Failures in 5.347356

**********     Ending normal symbolic execution.     **********

RESULT SPECS 
Generated specifications: 
 
i__sameValue
----------
[[ (v2 == #s_1) * (v1 == #s_0) * (typeOf(0.) == $$number_type) * (#s_1 == 0.) * (#s_0 == 0.) * types(#s_0 : $$number_type, #s_1 : $$number_type) ]]
[[ (sv1 == 1.) * (sv2 == 1.) * (v2 == 0.) * (xret == $$t) * (v1 == 0.) * (typeOf(0.) == $$number_type) * types(sv1 : $$number_type, sv2 : $$number_type, v2 : $$number_type, xret : $$boolean_type, v1 : $$number_type) ]]
Normal
[[ (v2 == #s_3) * (v1 == #s_2) * (typeOf(0.) == $$number_type) * (typeOf(#s_3) == $$number_type) * (! (#s_3 == 0.)) * (#s_2 == 0.) * types(#s_2 : $$number_type) ]]
[[ (v2 == #s_3) * (xret == (0. = #s_3)) * (v1 == 0.) * (typeOf(0.) == $$number_type) * (typeOf(#s_3) == $$number_type) * (! (#s_3 == 0.)) * types(xret : $$boolean_type, v1 : $$number_type) ]]
Normal
[[ (v2 == #s_5) * (v1 == #s_4) * (typeOf(#s_4) == $$number_type) * (typeOf(#s_5) == $$number_type) * (! (#s_4 == 0.)) * types() ]]
[[ (v2 == #s_5) * (xret == (#s_4 = #s_5)) * (v1 == #s_4) * (typeOf(#s_4) == $$number_type) * (typeOf(#s_5) == $$number_type) * (! (#s_4 == 0.)) * types(xret : $$boolean_type) ]]
Normal
[[ (v2 == #s_7) * (v1 == #s_6) * (typeOf(#s_6) == $$number_type) * (! (typeOf(#s_7) == $$number_type)) * types() ]]
[[ (v2 == #s_7) * (xret == (#s_6 = #s_7)) * (v1 == #s_6) * (typeOf(#s_6) == $$number_type) * (! (typeOf(#s_7) == $$number_type)) * types(xret : $$boolean_type) ]]
Normal
[[ (v2 == #s_9) * (v1 == #s_8) * (! (typeOf(#s_8) == $$number_type)) * types() ]]
[[ (v2 == #s_9) * (xret == (#s_8 = #s_9)) * (v1 == #s_8) * (! (typeOf(#s_8) == $$number_type)) * types(xret : $$boolean_type) ]]
Normal

setupInitialHeap
----------
[[ ((_$l_8, "@proto") -> #s_62) * ((_$l_8, "@class") -> #s_63) * ((_$l_8, "@extensible") -> #s_64) * (($lfun_proto, "@proto") -> #s_71) * ((_$l_6, "@proto") -> #s_59) * ((_$l_6, "@class") -> #s_60) * ((_$l_6, "@extensible") -> #s_61) * (($lerr, "prototype") -> #s_80) * (($lg, "Error") -> #s_79) * ((_$l_11, "@proto") -> #s_65) * ((_$l_11, "@class") -> #s_66) * ((_$l_11, "@extensible") -> #s_67) * ((_$l_11, "@scope") -> #s_68) * ((_$l_11, "length") -> #s_69) * ((_$l_11, "@call") -> #s_70) * (($lerr_proto, "message") -> #s_84) * ((_$l_12, "@proto") -> #s_72) * ((_$l_12, "@class") -> #s_73) * ((_$l_12, "@extensible") -> #s_74) * ((_$l_12, "@scope") -> #s_75) * ((_$l_12, "length") -> #s_76) * ((_$l_12, "@call") -> #s_77) * ((_$l_12, "@construct") -> #s_78) * ((_$l_14, "@proto") -> #s_81) * ((_$l_14, "@class") -> #s_82) * ((_$l_14, "@extensible") -> #s_83) * ($lerr_proto == _$l_14) * ($lerr == _$l_12) * ($lfun_proto == _$l_11) * ($lobj_proto == _$l_8) * ($lg == _$l_6) * types() ]]
[[ ((_$l_8, "@proto") -> $$null) * ((_$l_8, "@class") -> "Object") * ((_$l_8, "@extensible") -> $$t) * (($lfun_proto, "@proto") -> $lobj_proto) * ((_$l_6, "@proto") -> $lobj_proto) * ((_$l_6, "@class") -> "Object") * ((_$l_6, "@extensible") -> $$t) * (($lerr, "prototype") -> {{ "d", $lerr_proto, $$f, $$f, $$f }}) * (($lg, "Error") -> {{ "d", $lerr, $$t, $$f, $$t }}) * ((_$l_11, "@proto") -> $lfun_proto) * ((_$l_11, "@class") -> "Function") * ((_$l_11, "@extensible") -> $$t) * ((_$l_11, "@scope") -> $$empty) * ((_$l_11, "length") -> {{ "d", 0., $$f, $$f, $$f }}) * ((_$l_11, "@call") -> "FP_default") * (($lerr_proto, "message") -> {{ "d", "", $$t, $$f, $$t }}) * ((_$l_12, "@proto") -> $lfun_proto) * ((_$l_12, "@class") -> "Function") * ((_$l_12, "@extensible") -> $$t) * ((_$l_12, "@scope") -> $$empty) * ((_$l_12, "length") -> {{ "d", 1., $$f, $$f, $$f }}) * ((_$l_12, "@call") -> "Error_call") * ((_$l_12, "@construct") -> "Error_construct") * ((_$l_14, "@proto") -> $lobj_proto) * ((_$l_14, "@class") -> "Error") * ((_$l_14, "@extensible") -> $$t) * (xret == $$empty) * ($lg == _$l_6) * ($lobj_proto == _$l_8) * ($lfun_proto == _$l_11) * ($lerr == _$l_12) * ($lerr_proto == _$l_14) * (xret == $$empty) * types(xret : $$empty_type) ]]
Normal

create_default_object
----------
[[ ((_$l_0, "@proto") -> #s_14) * ((_$l_0, "@class") -> #s_15) * ((_$l_0, "@extensible") -> #s_16) * (l == #s_12) * (cl == #s_10) * (ext == #s_11) * (pr == #s_13) * (#s_12 == _$l_0) * (#s_10 == $$undefined) * (#s_11 == $$undefined) * types(#s_11 : $$undefined_type, #s_10 : $$undefined_type, #s_12 : $$object_type) ]]
[[ ((_$l_0, "@proto") -> #s_13) * ((_$l_0, "@class") -> "Object") * ((_$l_0, "@extensible") -> $$t) * (l == _$l_0) * (cl == "Object") * (xret == _$l_0) * (ext == $$t) * (pr == #s_13) * types(l : $$object_type, cl : $$string_type, xret : $$object_type, ext : $$boolean_type) ]]
Normal
[[ ((_$l_1, "@proto") -> #s_21) * ((_$l_1, "@class") -> #s_22) * ((_$l_1, "@extensible") -> #s_23) * (l == #s_19) * (cl == #s_17) * (ext == #s_18) * (pr == #s_20) * (! (#s_18 == $$undefined)) * (#s_17 == $$undefined) * (#s_19 == _$l_1) * types(#s_17 : $$undefined_type, #s_19 : $$object_type) ]]
[[ ((_$l_1, "@proto") -> #s_20) * ((_$l_1, "@class") -> "Object") * ((_$l_1, "@extensible") -> #s_18) * (l == _$l_1) * (cl == "Object") * (xret == _$l_1) * (ext == #s_18) * (pr == #s_20) * (! (#s_18 == $$undefined)) * types(l : $$object_type, cl : $$string_type, xret : $$object_type) ]]
Normal
[[ ((_$l_2, "@proto") -> #s_28) * ((_$l_2, "@class") -> #s_29) * ((_$l_2, "@extensible") -> #s_30) * (l == #s_26) * (cl == #s_24) * (ext == #s_25) * (pr == #s_27) * (! (#s_24 == $$undefined)) * (#s_25 == $$undefined) * (#s_26 == _$l_2) * types(#s_26 : $$object_type, #s_25 : $$undefined_type) ]]
[[ ((_$l_2, "@proto") -> #s_27) * ((_$l_2, "@class") -> #s_24) * ((_$l_2, "@extensible") -> $$t) * (l == _$l_2) * (cl == #s_24) * (xret == _$l_2) * (ext == $$t) * (pr == #s_27) * (! (#s_24 == $$undefined)) * types(l : $$object_type, xret : $$object_type, ext : $$boolean_type) ]]
Normal
[[ ((_$l_3, "@proto") -> #s_35) * ((_$l_3, "@class") -> #s_36) * ((_$l_3, "@extensible") -> #s_37) * (l == #s_33) * (cl == #s_31) * (ext == #s_32) * (pr == #s_34) * (! (#s_31 == $$undefined)) * (! (#s_32 == $$undefined)) * (#s_33 == _$l_3) * types(#s_33 : $$object_type) ]]
[[ ((_$l_3, "@proto") -> #s_34) * ((_$l_3, "@class") -> #s_31) * ((_$l_3, "@extensible") -> #s_32) * (l == _$l_3) * (cl == #s_31) * (xret == _$l_3) * (ext == #s_32) * (pr == #s_34) * (! (#s_31 == $$undefined)) * (! (#s_32 == $$undefined)) * types(l : $$object_type, xret : $$object_type) ]]
Normal

i__isDataDescriptor
----------
[[ (desc == #s_121) * (#s_121 == $$undefined) * types(#s_121 : $$undefined_type) ]]
[[ (desc == $$undefined) * (xret == $$f) * (desc == $$undefined) * types(desc : $$undefined_type, xret : $$boolean_type) ]]
Normal
[[ (desc == #s_122) * (! (#s_122 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_122)) * (l-nth(#s_122, 0.) == "d") * types(#s_122 : $$list_type) ]]
[[ (d == l-nth(#s_122, 0.)) * (desc == #s_122) * (xret == $$t) * (! (#s_122 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_122)) * (l-nth(#s_122, 0.) == "d") * types(#s_122 : $$list_type, xret : $$boolean_type) ]]
Normal
[[ (desc == #s_123) * (! (#s_123 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_123)) * (! (l-nth(#s_123, 0.) == "d")) * (l-nth(#s_123, 0.) == "g") * (! (3. <# 0.)) * (3. <# (l-len #s_123)) * (! (4. <# 0.)) * (4. <# (l-len #s_123)) * (l-nth(#s_123, 3.) == $$empty) * (l-nth(#s_123, 4.) == $$empty) * types(#s_123 : $$list_type) ]]
[[ (v == l-nth(#s_123, 3.)) * (d == l-nth(#s_123, 0.)) * (desc == #s_123) * (w == l-nth(#s_123, 4.)) * (xret == $$f) * (! (#s_123 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_123)) * (! (l-nth(#s_123, 0.) == "d")) * (l-nth(#s_123, 0.) == "g") * (! (3. <# 0.)) * (3. <# (l-len #s_123)) * (! (4. <# 0.)) * (4. <# (l-len #s_123)) * (l-nth(#s_123, 3.) == $$empty) * (l-nth(#s_123, 4.) == $$empty) * types(#s_123 : $$list_type, xret : $$boolean_type) ]]
Normal
[[ (desc == #s_124) * (! (#s_124 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_124)) * (! (l-nth(#s_124, 0.) == "d")) * (l-nth(#s_124, 0.) == "g") * (! (3. <# 0.)) * (3. <# (l-len #s_124)) * (! (4. <# 0.)) * (4. <# (l-len #s_124)) * ((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty))) * types(#s_124 : $$list_type) ]]
[[ (v == l-nth(#s_124, 3.)) * (d == l-nth(#s_124, 0.)) * (desc == #s_124) * (w == l-nth(#s_124, 4.)) * (xret == $$t) * (! (#s_124 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_124)) * (! (l-nth(#s_124, 0.) == "d")) * (l-nth(#s_124, 0.) == "g") * (! (3. <# 0.)) * (3. <# (l-len #s_124)) * (! (4. <# 0.)) * (4. <# (l-len #s_124)) * ((! (l-nth(#s_124, 3.) == $$empty)) \/ (! (l-nth(#s_124, 4.) == $$empty))) * types(#s_124 : $$list_type, xret : $$boolean_type) ]]
Normal
[[ (desc == #s_125) * (! (#s_125 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_125)) * (! (l-nth(#s_125, 0.) == "d")) * (! (l-nth(#s_125, 0.) == "g")) * types(#s_125 : $$list_type) ]]
[[ (d == l-nth(#s_125, 0.)) * (desc == #s_125) * (xret == $$f) * (! (#s_125 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_125)) * (! (l-nth(#s_125, 0.) == "d")) * (! (l-nth(#s_125, 0.) == "g")) * types(#s_125 : $$list_type, xret : $$boolean_type) ]]
Normal

create_object_with_call_construct
----------
[[ ((_$l_4, "@proto") -> #s_39) * ((_$l_4, "@class") -> #s_40) * ((_$l_4, "@extensible") -> #s_41) * ((_$l_4, "@scope") -> #s_42) * ((_$l_4, "length") -> #s_44) * ((_$l_4, "@call") -> #s_46) * (construct == #s_47) * (l == #s_38) * (call == #s_45) * (len == #s_43) * (#s_47 == $$empty) * (#s_38 == _$l_4) * types(#s_38 : $$object_type, #s_47 : $$empty_type) ]]
[[ ((_$l_4, "@proto") -> $lfun_proto) * ((_$l_4, "@class") -> "Function") * ((_$l_4, "@extensible") -> $$t) * ((_$l_4, "@scope") -> $$empty) * ((_$l_4, "length") -> {{ "d", #s_43, $$f, $$f, $$f }}) * ((_$l_4, "@call") -> #s_45) * (construct == $$empty) * (l == _$l_4) * (call == #s_45) * (len == #s_43) * (xret == _$l_4) * (construct == $$empty) * types(construct : $$empty_type, l : $$object_type, xret : $$object_type) ]]
Normal
[[ ((_$l_4, "@proto") -> #s_49) * ((_$l_4, "@class") -> #s_50) * ((_$l_4, "@extensible") -> #s_51) * ((_$l_4, "@scope") -> #s_52) * ((_$l_4, "length") -> #s_54) * ((_$l_4, "@call") -> #s_56) * ((_$l_4, "@construct") -> #s_58) * (construct == #s_57) * (l == #s_48) * (call == #s_55) * (len == #s_53) * (! (#s_57 == $$empty)) * (#s_48 == _$l_4) * types(#s_48 : $$object_type) ]]
[[ ((_$l_4, "@proto") -> $lfun_proto) * ((_$l_4, "@class") -> "Function") * ((_$l_4, "@extensible") -> $$t) * ((_$l_4, "@scope") -> $$empty) * ((_$l_4, "length") -> {{ "d", #s_53, $$f, $$f, $$f }}) * ((_$l_4, "@call") -> #s_55) * ((_$l_4, "@construct") -> #s_57) * (construct == #s_57) * (l == _$l_4) * (call == #s_55) * (len == #s_53) * (xret == _$l_4) * (! (#s_57 == $$empty)) * types(l : $$object_type, xret : $$object_type) ]]
Normal

create_function_object
----------
[[ ((_$l_20, "@proto") -> #s_96) * ((_$l_20, "@class") -> #s_97) * ((_$l_20, "@extensible") -> #s_98) * ((_$l_20, "constructor") -> #s_99) * ((_$l_17, "@proto") -> #s_88) * ((_$l_17, "@class") -> #s_89) * ((_$l_17, "@extensible") -> #s_90) * ((_$l_17, "@scope") -> #s_91) * ((_$l_17, "length") -> #s_92) * ((_$l_17, "@call") -> #s_93) * ((_$l_17, "@construct") -> #s_94) * ((_$l_17, "prototype") -> #s_100) * ((_$l_17, "caller") -> #s_101) * ((_$l_17, "arguments") -> #s_102) * (construct == #s_87) * (xsc == #s_95) * (call == #s_86) * (params == #s_85) * (_$l_19 == _$l_20) * (! (#s_87 == $$empty)) * (_$l_16 == _$l_17) * types(#s_85 : $$list_type) ]]
[[ ((_$l_20, "@proto") -> $lobj_proto) * ((_$l_20, "@class") -> "Object") * ((_$l_20, "@extensible") -> $$t) * ((_$l_20, "constructor") -> {{ "d", _$l_17, $$t, $$f, $$t }}) * empty_fields(_$l_19 : "@proto") * ((_$l_19, "@proto") -> $$null) * empty_fields(_$l_16 : "@proto") * ((_$l_16, "@proto") -> $$null) * ((_$l_17, "@proto") -> $lfun_proto) * ((_$l_17, "@class") -> "Function") * ((_$l_17, "@extensible") -> $$t) * ((_$l_17, "@construct") -> #s_87) * ((_$l_17, "@call") -> #s_86) * ((_$l_17, "length") -> {{ "d", (l-len #s_85), $$f, $$f, $$f }}) * ((_$l_17, "@scope") -> #s_95) * ((_$l_17, "prototype") -> {{ "d", _$l_20, $$t, $$f, $$f }}) * ((_$l_17, "caller") -> {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}) * ((_$l_17, "arguments") -> {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}) * (construct == #s_87) * (prototype == _$l_20) * (xsc == #s_95) * (l == _$l_17) * (call == #s_86) * (len == (l-len #s_85)) * (xret == _$l_17) * (params == #s_85) * (! (_$l_16 == $lg)) * (_$l_16 == _$l_17) * (! (#s_87 == $$empty)) * (! (_$l_19 == $lg)) * (_$l_19 == _$l_20) * types(#s_85 : $$list_type, prototype : $$object_type, l : $$object_type, len : $$number_type, xret : $$object_type) ]]
Normal
[[ ((_$l_23, "@proto") -> #s_113) * ((_$l_23, "@class") -> #s_114) * ((_$l_23, "@extensible") -> #s_115) * ((_$l_23, "constructor") -> #s_116) * ((_$l_18, "@proto") -> #s_106) * ((_$l_18, "@class") -> #s_107) * ((_$l_18, "@extensible") -> #s_108) * ((_$l_18, "@scope") -> #s_109) * ((_$l_18, "length") -> #s_110) * ((_$l_18, "@call") -> #s_111) * ((_$l_18, "prototype") -> #s_117) * ((_$l_18, "caller") -> #s_118) * ((_$l_18, "arguments") -> #s_119) * (construct == #s_120) * (xsc == #s_112) * (call == #s_104) * (params == #s_103) * (_$l_22 == _$l_23) * (_$l_16 == _$l_18) * (#s_105 == $$empty) * (#s_120 == $$empty) * types(construct : $$empty_type, #s_103 : $$list_type, #s_105 : $$empty_type, #s_120 : $$empty_type, params : $$list_type) ]]
[[ ((_$l_23, "@proto") -> $lobj_proto) * ((_$l_23, "@class") -> "Object") * ((_$l_23, "@extensible") -> $$t) * ((_$l_23, "constructor") -> {{ "d", _$l_18, $$t, $$f, $$t }}) * empty_fields(_$l_16 : "@proto") * ((_$l_16, "@proto") -> $$null) * empty_fields(_$l_22 : "@proto") * ((_$l_22, "@proto") -> $$null) * ((_$l_18, "@proto") -> $lfun_proto) * ((_$l_18, "@class") -> "Function") * ((_$l_18, "@extensible") -> $$t) * ((_$l_18, "@call") -> #s_104) * ((_$l_18, "length") -> {{ "d", (l-len #s_103), $$f, $$f, $$f }}) * ((_$l_18, "@scope") -> #s_112) * ((_$l_18, "prototype") -> {{ "d", _$l_23, $$t, $$f, $$f }}) * ((_$l_18, "caller") -> {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}) * ((_$l_18, "arguments") -> {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}) * (construct == $$empty) * (prototype == _$l_23) * (xsc == #s_112) * (l == _$l_18) * (call == #s_104) * (len == (l-len #s_103)) * (xret == _$l_18) * (params == #s_103) * (! (_$l_16 == $lg)) * (_$l_16 == _$l_18) * (! (_$l_22 == $lg)) * (_$l_22 == _$l_23) * (construct == $$empty) * types(prototype : $$object_type, construct : $$empty_type, #s_103 : $$list_type, l : $$object_type, len : $$number_type, xret : $$object_type, params : $$list_type) ]]
Normal

o__getOwnProperty
----------
[[ ((_$l_25, #s_165) -> #s_166) * (l == #s_164) * (prop == #s_165) * (! (#s_166 == None)) * (#s_164 == _$l_25) * types(#s_164 : $$object_type) ]]
[[ ((_$l_25, #s_165) -> #s_166) * (x == (not (#s_166 = None))) * (l == _$l_25) * (prop == #s_165) * (xret == #s_166) * (! (#s_166 == None)) * types(x : $$boolean_type, l : $$object_type) ]]
Normal
[[ ((_$l_25, #s_168) -> None) * (l == #s_167) * (prop == #s_168) * (#s_167 == _$l_25) * (#s_169 == None) * types(#s_169 : $$none_type, #s_167 : $$object_type) ]]
[[ ((_$l_25, #s_168) -> None) * (x == (not (None = None))) * (l == _$l_25) * (prop == #s_168) * (xret == $$undefined) * (xret == $$undefined) * types(x : $$boolean_type, l : $$object_type, xret : $$undefined_type) ]]
Normal

i__isPrimitive
----------
[[ (v == #s_133) * (((((#s_133 == $$undefined) \/ (#s_133 == $$null)) \/ (typeOf(#s_133) == $$boolean_type)) \/ (typeOf(#s_133) == $$number_type)) \/ (typeOf(#s_133) == $$string_type)) * types() ]]
[[ (v == #s_133) * (tv == typeOf(#s_133)) * (xret == $$t) * (((((#s_133 == $$undefined) \/ (#s_133 == $$null)) \/ (typeOf(#s_133) == $$boolean_type)) \/ (typeOf(#s_133) == $$number_type)) \/ (typeOf(#s_133) == $$string_type)) * types(tv : $$type_type, xret : $$boolean_type) ]]
Normal
[[ (v == #s_134) * (! (#s_134 == $$undefined)) * (! (typeOf(#s_134) == $$string_type)) * (! (typeOf(#s_134) == $$number_type)) * (! (typeOf(#s_134) == $$boolean_type)) * (! (#s_134 == $$null)) * types() ]]
[[ (v == #s_134) * (tv == typeOf(#s_134)) * (xret == $$f) * (! (#s_134 == $$undefined)) * (! (typeOf(#s_134) == $$string_type)) * (! (typeOf(#s_134) == $$number_type)) * (! (typeOf(#s_134) == $$boolean_type)) * (! (#s_134 == $$null)) * types(tv : $$type_type, xret : $$boolean_type) ]]
Normal

i__strictEquality
----------
[[ (v2 == #s_132) * (v1 == #s_131) * types() ]]
[[ (v2 == #s_132) * (xret == (#s_131 = #s_132)) * (v1 == #s_131) * types(xret : $$boolean_type) ]]
Normal

i__toBoolean
----------
[[ (v == #s_155) * (#s_155 == $$undefined) * types(#s_155 : $$undefined_type) ]]
[[ (v == $$undefined) * (xret == $$f) * (v == $$undefined) * types(v : $$undefined_type, xret : $$boolean_type) ]]
Normal
[[ (v == #s_156) * (#s_156 == $$null) * types(#s_156 : $$null_type) ]]
[[ (v == $$null) * (xret == $$f) * (v == $$null) * types(v : $$null_type, xret : $$boolean_type) ]]
Normal
[[ (v == #s_157) * (! (#s_157 == $$undefined)) * (! (#s_157 == $$null)) * (typeOf(#s_157) == $$boolean_type) * types() ]]
[[ (v == #s_157) * (xret == #s_157) * (! (#s_157 == $$undefined)) * (! (#s_157 == $$null)) * (typeOf(#s_157) == $$boolean_type) * types() ]]
Normal
[[ (v == #s_158) * (! (typeOf(0.) == $$boolean_type)) * (typeOf(0.) == $$number_type) * (#s_158 == 0.) * types(#s_158 : $$number_type) ]]
[[ (v == 0.) * (xret == $$f) * (! (typeOf(0.) == $$boolean_type)) * (typeOf(0.) == $$number_type) * types(v : $$number_type, xret : $$boolean_type) ]]
Normal
[[ (v == #s_159) * (! (#s_159 == $$undefined)) * (! (#s_159 == $$null)) * (! (typeOf(#s_159) == $$boolean_type)) * (typeOf(#s_159) == $$number_type) * (! (#s_159 == 0.)) * types() ]]
[[ (v == #s_159) * (xret == $$t) * (! (#s_159 == $$undefined)) * (! (#s_159 == $$null)) * (! (typeOf(#s_159) == $$boolean_type)) * (typeOf(#s_159) == $$number_type) * (! (#s_159 == 0.)) * types(xret : $$boolean_type) ]]
Normal
[[ (v == #s_160) * (! (typeOf("") == $$boolean_type)) * (! (typeOf("") == $$number_type)) * (typeOf("") == $$string_type) * (#s_160 == "") * types(#s_160 : $$string_type) ]]
[[ (v == "") * (xret == $$f) * (! (typeOf("") == $$boolean_type)) * (! (typeOf("") == $$number_type)) * (typeOf("") == $$string_type) * types(v : $$string_type, xret : $$boolean_type) ]]
Normal
[[ (v == #s_161) * (! (#s_161 == $$undefined)) * (! (#s_161 == $$null)) * (! (typeOf(#s_161) == $$boolean_type)) * (! (typeOf(#s_161) == $$number_type)) * (typeOf(#s_161) == $$string_type) * (! (#s_161 == "")) * types() ]]
[[ (v == #s_161) * (xret == $$t) * (! (#s_161 == $$undefined)) * (! (#s_161 == $$null)) * (! (typeOf(#s_161) == $$boolean_type)) * (! (typeOf(#s_161) == $$number_type)) * (typeOf(#s_161) == $$string_type) * (! (#s_161 == "")) * types(xret : $$boolean_type) ]]
Normal
[[ (v == #s_162) * (! (#s_162 == $$undefined)) * (! (#s_162 == $$null)) * (! (typeOf(#s_162) == $$boolean_type)) * (! (typeOf(#s_162) == $$number_type)) * (! (typeOf(#s_162) == $$string_type)) * (typeOf(#s_162) == $$object_type) * types() ]]
[[ (v == #s_162) * (xret == $$t) * (! (#s_162 == $$undefined)) * (! (#s_162 == $$null)) * (! (typeOf(#s_162) == $$boolean_type)) * (! (typeOf(#s_162) == $$number_type)) * (! (typeOf(#s_162) == $$string_type)) * (typeOf(#s_162) == $$object_type) * types(xret : $$boolean_type) ]]
Normal
[[ (v == #s_163) * (! (#s_163 == $$undefined)) * (! (#s_163 == $$null)) * (! (typeOf(#s_163) == $$boolean_type)) * (! (typeOf(#s_163) == $$number_type)) * (! (typeOf(#s_163) == $$string_type)) * (! (typeOf(#s_163) == $$object_type)) * types() ]]
[[ (v == #s_163) * (xret == "ToBoolean: This should not happen.") * (! (#s_163 == $$undefined)) * (! (#s_163 == $$null)) * (! (typeOf(#s_163) == $$boolean_type)) * (! (typeOf(#s_163) == $$number_type)) * (! (typeOf(#s_163) == $$string_type)) * (! (typeOf(#s_163) == $$object_type)) * types(xret : $$string_type) ]]
Normal

i__toDataDescriptor
----------
[[ (desc == #s_135) * (! (0. <# 0.)) * (0. <# (l-len #s_135)) * (l-nth(#s_135, 0.) == "d") * types(#s_135 : $$list_type) ]]
[[ (d == l-nth(#s_135, 0.)) * (desc == #s_135) * (xret == #s_135) * (! (0. <# 0.)) * (0. <# (l-len #s_135)) * (l-nth(#s_135, 0.) == "d") * types(xret : $$list_type, #s_135 : $$list_type) ]]
Normal
[[ (desc == #s_136) * (! (0. <# 0.)) * (0. <# (l-len #s_136)) * (! (l-nth(#s_136, 0.) == "d")) * (l-nth(#s_136, 0.) == "a") * (! (4. <# 0.)) * (4. <# (l-len l-nth(#s_136, 0.))) * (! (3. <# 0.)) * (3. <# (l-len l-nth(#s_136, 0.))) * (#s_138 == l-nth(#s_136, 0.)) * (#s_137 == l-nth(#s_136, 0.)) * types(#s_136 : $$list_type, #s_138 : $$list_type, #s_137 : $$list_type) ]]
[[ (d == l-nth(#s_136, 0.)) * (desc == #s_136) * (xret == {{ "d", $$undefined, $$f, l-nth(l-nth(#s_136, 0.), 3.), l-nth(l-nth(#s_136, 0.), 4.) }}) * (! (0. <# 0.)) * (0. <# (l-len #s_136)) * (! (l-nth(#s_136, 0.) == "d")) * (l-nth(#s_136, 0.) == "a") * (! (4. <# 0.)) * (4. <# (l-len l-nth(#s_136, 0.))) * (! (3. <# 0.)) * (3. <# (l-len l-nth(#s_136, 0.))) * types(#s_136 : $$list_type, desc : $$list_type, xret : $$list_type) ]]
Normal
[[ (desc == #s_139) * (! (0. <# 0.)) * (0. <# (l-len #s_139)) * (! (l-nth(#s_139, 0.) == "d")) * (! (l-nth(#s_139, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_139)) * (! (2. <# 0.)) * (2. <# (l-len #s_139)) * (! (3. <# 0.)) * (3. <# (l-len #s_139)) * (! (4. <# 0.)) * (4. <# (l-len #s_139)) * (l-nth(#s_139, 1.) == $$empty) * (l-nth(#s_139, 2.) == $$empty) * (l-nth(#s_139, 3.) == $$empty) * (l-nth(#s_139, 4.) == $$empty) * types(#s_139 : $$list_type) ]]
[[ (c == $$f) * (v == $$undefined) * (d == l-nth(#s_139, 0.)) * (desc == #s_139) * (w == $$f) * (xret == {{ "d", $$undefined, $$f, $$f, $$f }}) * (e == $$f) * (! (0. <# 0.)) * (0. <# (l-len #s_139)) * (! (l-nth(#s_139, 0.) == "d")) * (! (l-nth(#s_139, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_139)) * (! (2. <# 0.)) * (2. <# (l-len #s_139)) * (! (3. <# 0.)) * (3. <# (l-len #s_139)) * (! (4. <# 0.)) * (4. <# (l-len #s_139)) * (l-nth(#s_139, 1.) == $$empty) * (l-nth(#s_139, 2.) == $$empty) * (l-nth(#s_139, 3.) == $$empty) * (l-nth(#s_139, 4.) == $$empty) * (v == $$undefined) * types(c : $$boolean_type, v : $$undefined_type, #s_139 : $$list_type, desc : $$list_type, xret : $$list_type, w : $$boolean_type, e : $$boolean_type) ]]
Normal
[[ (desc == #s_140) * (! (0. <# 0.)) * (0. <# (l-len #s_140)) * (! (l-nth(#s_140, 0.) == "d")) * (! (l-nth(#s_140, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_140)) * (! (2. <# 0.)) * (2. <# (l-len #s_140)) * (! (3. <# 0.)) * (3. <# (l-len #s_140)) * (! (4. <# 0.)) * (4. <# (l-len #s_140)) * (l-nth(#s_140, 1.) == $$empty) * (l-nth(#s_140, 2.) == $$empty) * (l-nth(#s_140, 3.) == $$empty) * (! (l-nth(#s_140, 4.) == $$empty)) * types(#s_140 : $$list_type) ]]
[[ (c == $$f) * (v == $$undefined) * (d == l-nth(#s_140, 0.)) * (desc == #s_140) * (w == l-nth(#s_140, 4.)) * (xret == {{ "d", $$undefined, l-nth(#s_140, 4.), $$f, $$f }}) * (e == $$f) * (! (0. <# 0.)) * (0. <# (l-len #s_140)) * (! (l-nth(#s_140, 0.) == "d")) * (! (l-nth(#s_140, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_140)) * (! (2. <# 0.)) * (2. <# (l-len #s_140)) * (! (3. <# 0.)) * (3. <# (l-len #s_140)) * (! (4. <# 0.)) * (4. <# (l-len #s_140)) * (l-nth(#s_140, 1.) == $$empty) * (l-nth(#s_140, 2.) == $$empty) * (l-nth(#s_140, 3.) == $$empty) * (! (l-nth(#s_140, 4.) == $$empty)) * (v == $$undefined) * types(c : $$boolean_type, v : $$undefined_type, desc : $$list_type, xret : $$list_type, e : $$boolean_type, #s_140 : $$list_type) ]]
Normal
[[ (desc == #s_141) * (! (0. <# 0.)) * (0. <# (l-len #s_141)) * (! (l-nth(#s_141, 0.) == "d")) * (! (l-nth(#s_141, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_141)) * (! (2. <# 0.)) * (2. <# (l-len #s_141)) * (! (3. <# 0.)) * (3. <# (l-len #s_141)) * (! (4. <# 0.)) * (4. <# (l-len #s_141)) * (l-nth(#s_141, 1.) == $$empty) * (l-nth(#s_141, 2.) == $$empty) * (! (l-nth(#s_141, 3.) == $$empty)) * (l-nth(#s_141, 4.) == $$empty) * types(#s_141 : $$list_type) ]]
[[ (c == $$f) * (v == l-nth(#s_141, 3.)) * (d == l-nth(#s_141, 0.)) * (desc == #s_141) * (w == $$f) * (xret == {{ "d", l-nth(#s_141, 3.), $$f, $$f, $$f }}) * (e == $$f) * (! (0. <# 0.)) * (0. <# (l-len #s_141)) * (! (l-nth(#s_141, 0.) == "d")) * (! (l-nth(#s_141, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_141)) * (! (2. <# 0.)) * (2. <# (l-len #s_141)) * (! (3. <# 0.)) * (3. <# (l-len #s_141)) * (! (4. <# 0.)) * (4. <# (l-len #s_141)) * (l-nth(#s_141, 1.) == $$empty) * (l-nth(#s_141, 2.) == $$empty) * (! (l-nth(#s_141, 3.) == $$empty)) * (l-nth(#s_141, 4.) == $$empty) * types(c : $$boolean_type, xret : $$list_type, w : $$boolean_type, e : $$boolean_type, #s_141 : $$list_type) ]]
Normal
[[ (desc == #s_142) * (! (0. <# 0.)) * (0. <# (l-len #s_142)) * (! (l-nth(#s_142, 0.) == "d")) * (! (l-nth(#s_142, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_142)) * (! (2. <# 0.)) * (2. <# (l-len #s_142)) * (! (3. <# 0.)) * (3. <# (l-len #s_142)) * (! (4. <# 0.)) * (4. <# (l-len #s_142)) * (l-nth(#s_142, 1.) == $$empty) * (l-nth(#s_142, 2.) == $$empty) * (! (l-nth(#s_142, 3.) == $$empty)) * (! (l-nth(#s_142, 4.) == $$empty)) * types(#s_142 : $$list_type) ]]
[[ (c == $$f) * (v == l-nth(#s_142, 3.)) * (d == l-nth(#s_142, 0.)) * (desc == #s_142) * (w == l-nth(#s_142, 4.)) * (xret == {{ "d", l-nth(#s_142, 3.), l-nth(#s_142, 4.), $$f, $$f }}) * (e == $$f) * (! (0. <# 0.)) * (0. <# (l-len #s_142)) * (! (l-nth(#s_142, 0.) == "d")) * (! (l-nth(#s_142, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_142)) * (! (2. <# 0.)) * (2. <# (l-len #s_142)) * (! (3. <# 0.)) * (3. <# (l-len #s_142)) * (! (4. <# 0.)) * (4. <# (l-len #s_142)) * (l-nth(#s_142, 1.) == $$empty) * (l-nth(#s_142, 2.) == $$empty) * (! (l-nth(#s_142, 3.) == $$empty)) * (! (l-nth(#s_142, 4.) == $$empty)) * types(c : $$boolean_type, xret : $$list_type, e : $$boolean_type, #s_142 : $$list_type) ]]
Normal
[[ (desc == #s_143) * (! (0. <# 0.)) * (0. <# (l-len #s_143)) * (! (l-nth(#s_143, 0.) == "d")) * (! (l-nth(#s_143, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_143)) * (! (2. <# 0.)) * (2. <# (l-len #s_143)) * (! (3. <# 0.)) * (3. <# (l-len #s_143)) * (! (4. <# 0.)) * (4. <# (l-len #s_143)) * (l-nth(#s_143, 1.) == $$empty) * (! (l-nth(#s_143, 2.) == $$empty)) * (l-nth(#s_143, 3.) == $$empty) * (l-nth(#s_143, 4.) == $$empty) * types(#s_143 : $$list_type) ]]
[[ (c == l-nth(#s_143, 2.)) * (v == $$undefined) * (d == l-nth(#s_143, 0.)) * (desc == #s_143) * (w == $$f) * (xret == {{ "d", $$undefined, $$f, $$f, l-nth(#s_143, 2.) }}) * (e == $$f) * (! (0. <# 0.)) * (0. <# (l-len #s_143)) * (! (l-nth(#s_143, 0.) == "d")) * (! (l-nth(#s_143, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_143)) * (! (2. <# 0.)) * (2. <# (l-len #s_143)) * (! (3. <# 0.)) * (3. <# (l-len #s_143)) * (! (4. <# 0.)) * (4. <# (l-len #s_143)) * (l-nth(#s_143, 1.) == $$empty) * (! (l-nth(#s_143, 2.) == $$empty)) * (l-nth(#s_143, 3.) == $$empty) * (l-nth(#s_143, 4.) == $$empty) * (v == $$undefined) * types(v : $$undefined_type, #s_143 : $$list_type, desc : $$list_type, xret : $$list_type, w : $$boolean_type, e : $$boolean_type) ]]
Normal
[[ (desc == #s_144) * (! (0. <# 0.)) * (0. <# (l-len #s_144)) * (! (l-nth(#s_144, 0.) == "d")) * (! (l-nth(#s_144, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_144)) * (! (2. <# 0.)) * (2. <# (l-len #s_144)) * (! (3. <# 0.)) * (3. <# (l-len #s_144)) * (! (4. <# 0.)) * (4. <# (l-len #s_144)) * (l-nth(#s_144, 1.) == $$empty) * (! (l-nth(#s_144, 2.) == $$empty)) * (l-nth(#s_144, 3.) == $$empty) * (! (l-nth(#s_144, 4.) == $$empty)) * types(#s_144 : $$list_type) ]]
[[ (c == l-nth(#s_144, 2.)) * (v == $$undefined) * (d == l-nth(#s_144, 0.)) * (desc == #s_144) * (w == l-nth(#s_144, 4.)) * (xret == {{ "d", $$undefined, l-nth(#s_144, 4.), $$f, l-nth(#s_144, 2.) }}) * (e == $$f) * (! (0. <# 0.)) * (0. <# (l-len #s_144)) * (! (l-nth(#s_144, 0.) == "d")) * (! (l-nth(#s_144, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_144)) * (! (2. <# 0.)) * (2. <# (l-len #s_144)) * (! (3. <# 0.)) * (3. <# (l-len #s_144)) * (! (4. <# 0.)) * (4. <# (l-len #s_144)) * (l-nth(#s_144, 1.) == $$empty) * (! (l-nth(#s_144, 2.) == $$empty)) * (l-nth(#s_144, 3.) == $$empty) * (! (l-nth(#s_144, 4.) == $$empty)) * (v == $$undefined) * types(v : $$undefined_type, desc : $$list_type, #s_144 : $$list_type, xret : $$list_type, e : $$boolean_type) ]]
Normal
[[ (desc == #s_145) * (! (0. <# 0.)) * (0. <# (l-len #s_145)) * (! (l-nth(#s_145, 0.) == "d")) * (! (l-nth(#s_145, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_145)) * (! (2. <# 0.)) * (2. <# (l-len #s_145)) * (! (3. <# 0.)) * (3. <# (l-len #s_145)) * (! (4. <# 0.)) * (4. <# (l-len #s_145)) * (l-nth(#s_145, 1.) == $$empty) * (! (l-nth(#s_145, 2.) == $$empty)) * (! (l-nth(#s_145, 3.) == $$empty)) * (l-nth(#s_145, 4.) == $$empty) * types(#s_145 : $$list_type) ]]
[[ (c == l-nth(#s_145, 2.)) * (v == l-nth(#s_145, 3.)) * (d == l-nth(#s_145, 0.)) * (desc == #s_145) * (w == $$f) * (xret == {{ "d", l-nth(#s_145, 3.), $$f, $$f, l-nth(#s_145, 2.) }}) * (e == $$f) * (! (0. <# 0.)) * (0. <# (l-len #s_145)) * (! (l-nth(#s_145, 0.) == "d")) * (! (l-nth(#s_145, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_145)) * (! (2. <# 0.)) * (2. <# (l-len #s_145)) * (! (3. <# 0.)) * (3. <# (l-len #s_145)) * (! (4. <# 0.)) * (4. <# (l-len #s_145)) * (l-nth(#s_145, 1.) == $$empty) * (! (l-nth(#s_145, 2.) == $$empty)) * (! (l-nth(#s_145, 3.) == $$empty)) * (l-nth(#s_145, 4.) == $$empty) * types(#s_145 : $$list_type, xret : $$list_type, w : $$boolean_type, e : $$boolean_type) ]]
Normal
[[ (desc == #s_146) * (! (0. <# 0.)) * (0. <# (l-len #s_146)) * (! (l-nth(#s_146, 0.) == "d")) * (! (l-nth(#s_146, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_146)) * (! (2. <# 0.)) * (2. <# (l-len #s_146)) * (! (3. <# 0.)) * (3. <# (l-len #s_146)) * (! (4. <# 0.)) * (4. <# (l-len #s_146)) * (l-nth(#s_146, 1.) == $$empty) * (! (l-nth(#s_146, 2.) == $$empty)) * (! (l-nth(#s_146, 3.) == $$empty)) * (! (l-nth(#s_146, 4.) == $$empty)) * types(#s_146 : $$list_type) ]]
[[ (c == l-nth(#s_146, 2.)) * (v == l-nth(#s_146, 3.)) * (d == l-nth(#s_146, 0.)) * (desc == #s_146) * (w == l-nth(#s_146, 4.)) * (xret == {{ "d", l-nth(#s_146, 3.), l-nth(#s_146, 4.), $$f, l-nth(#s_146, 2.) }}) * (e == $$f) * (! (0. <# 0.)) * (0. <# (l-len #s_146)) * (! (l-nth(#s_146, 0.) == "d")) * (! (l-nth(#s_146, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_146)) * (! (2. <# 0.)) * (2. <# (l-len #s_146)) * (! (3. <# 0.)) * (3. <# (l-len #s_146)) * (! (4. <# 0.)) * (4. <# (l-len #s_146)) * (l-nth(#s_146, 1.) == $$empty) * (! (l-nth(#s_146, 2.) == $$empty)) * (! (l-nth(#s_146, 3.) == $$empty)) * (! (l-nth(#s_146, 4.) == $$empty)) * types(#s_146 : $$list_type, xret : $$list_type, e : $$boolean_type) ]]
Normal
[[ (desc == #s_147) * (! (0. <# 0.)) * (0. <# (l-len #s_147)) * (! (l-nth(#s_147, 0.) == "d")) * (! (l-nth(#s_147, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_147)) * (! (2. <# 0.)) * (2. <# (l-len #s_147)) * (! (3. <# 0.)) * (3. <# (l-len #s_147)) * (! (4. <# 0.)) * (4. <# (l-len #s_147)) * (! (l-nth(#s_147, 1.) == $$empty)) * (l-nth(#s_147, 2.) == $$empty) * (l-nth(#s_147, 3.) == $$empty) * (l-nth(#s_147, 4.) == $$empty) * types(#s_147 : $$list_type) ]]
[[ (c == $$f) * (v == $$undefined) * (d == l-nth(#s_147, 0.)) * (desc == #s_147) * (w == $$f) * (xret == {{ "d", $$undefined, $$f, l-nth(#s_147, 1.), $$f }}) * (e == l-nth(#s_147, 1.)) * (! (0. <# 0.)) * (0. <# (l-len #s_147)) * (! (l-nth(#s_147, 0.) == "d")) * (! (l-nth(#s_147, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_147)) * (! (2. <# 0.)) * (2. <# (l-len #s_147)) * (! (3. <# 0.)) * (3. <# (l-len #s_147)) * (! (4. <# 0.)) * (4. <# (l-len #s_147)) * (! (l-nth(#s_147, 1.) == $$empty)) * (l-nth(#s_147, 2.) == $$empty) * (l-nth(#s_147, 3.) == $$empty) * (l-nth(#s_147, 4.) == $$empty) * (v == $$undefined) * types(c : $$boolean_type, v : $$undefined_type, desc : $$list_type, xret : $$list_type, w : $$boolean_type, #s_147 : $$list_type) ]]
Normal
[[ (desc == #s_148) * (! (0. <# 0.)) * (0. <# (l-len #s_148)) * (! (l-nth(#s_148, 0.) == "d")) * (! (l-nth(#s_148, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_148)) * (! (2. <# 0.)) * (2. <# (l-len #s_148)) * (! (3. <# 0.)) * (3. <# (l-len #s_148)) * (! (4. <# 0.)) * (4. <# (l-len #s_148)) * (! (l-nth(#s_148, 1.) == $$empty)) * (l-nth(#s_148, 2.) == $$empty) * (l-nth(#s_148, 3.) == $$empty) * (! (l-nth(#s_148, 4.) == $$empty)) * types(#s_148 : $$list_type) ]]
[[ (c == $$f) * (v == $$undefined) * (d == l-nth(#s_148, 0.)) * (desc == #s_148) * (w == l-nth(#s_148, 4.)) * (xret == {{ "d", $$undefined, l-nth(#s_148, 4.), l-nth(#s_148, 1.), $$f }}) * (e == l-nth(#s_148, 1.)) * (! (0. <# 0.)) * (0. <# (l-len #s_148)) * (! (l-nth(#s_148, 0.) == "d")) * (! (l-nth(#s_148, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_148)) * (! (2. <# 0.)) * (2. <# (l-len #s_148)) * (! (3. <# 0.)) * (3. <# (l-len #s_148)) * (! (4. <# 0.)) * (4. <# (l-len #s_148)) * (! (l-nth(#s_148, 1.) == $$empty)) * (l-nth(#s_148, 2.) == $$empty) * (l-nth(#s_148, 3.) == $$empty) * (! (l-nth(#s_148, 4.) == $$empty)) * (v == $$undefined) * types(c : $$boolean_type, #s_148 : $$list_type, v : $$undefined_type, desc : $$list_type, xret : $$list_type) ]]
Normal
[[ (desc == #s_149) * (! (0. <# 0.)) * (0. <# (l-len #s_149)) * (! (l-nth(#s_149, 0.) == "d")) * (! (l-nth(#s_149, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_149)) * (! (2. <# 0.)) * (2. <# (l-len #s_149)) * (! (3. <# 0.)) * (3. <# (l-len #s_149)) * (! (4. <# 0.)) * (4. <# (l-len #s_149)) * (! (l-nth(#s_149, 1.) == $$empty)) * (l-nth(#s_149, 2.) == $$empty) * (! (l-nth(#s_149, 3.) == $$empty)) * (l-nth(#s_149, 4.) == $$empty) * types(#s_149 : $$list_type) ]]
[[ (c == $$f) * (v == l-nth(#s_149, 3.)) * (d == l-nth(#s_149, 0.)) * (desc == #s_149) * (w == $$f) * (xret == {{ "d", l-nth(#s_149, 3.), $$f, l-nth(#s_149, 1.), $$f }}) * (e == l-nth(#s_149, 1.)) * (! (0. <# 0.)) * (0. <# (l-len #s_149)) * (! (l-nth(#s_149, 0.) == "d")) * (! (l-nth(#s_149, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_149)) * (! (2. <# 0.)) * (2. <# (l-len #s_149)) * (! (3. <# 0.)) * (3. <# (l-len #s_149)) * (! (4. <# 0.)) * (4. <# (l-len #s_149)) * (! (l-nth(#s_149, 1.) == $$empty)) * (l-nth(#s_149, 2.) == $$empty) * (! (l-nth(#s_149, 3.) == $$empty)) * (l-nth(#s_149, 4.) == $$empty) * types(c : $$boolean_type, #s_149 : $$list_type, xret : $$list_type, w : $$boolean_type) ]]
Normal
[[ (desc == #s_150) * (! (0. <# 0.)) * (0. <# (l-len #s_150)) * (! (l-nth(#s_150, 0.) == "d")) * (! (l-nth(#s_150, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_150)) * (! (2. <# 0.)) * (2. <# (l-len #s_150)) * (! (3. <# 0.)) * (3. <# (l-len #s_150)) * (! (4. <# 0.)) * (4. <# (l-len #s_150)) * (! (l-nth(#s_150, 1.) == $$empty)) * (l-nth(#s_150, 2.) == $$empty) * (! (l-nth(#s_150, 3.) == $$empty)) * (! (l-nth(#s_150, 4.) == $$empty)) * types(#s_150 : $$list_type) ]]
[[ (c == $$f) * (v == l-nth(#s_150, 3.)) * (d == l-nth(#s_150, 0.)) * (desc == #s_150) * (w == l-nth(#s_150, 4.)) * (xret == {{ "d", l-nth(#s_150, 3.), l-nth(#s_150, 4.), l-nth(#s_150, 1.), $$f }}) * (e == l-nth(#s_150, 1.)) * (! (0. <# 0.)) * (0. <# (l-len #s_150)) * (! (l-nth(#s_150, 0.) == "d")) * (! (l-nth(#s_150, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_150)) * (! (2. <# 0.)) * (2. <# (l-len #s_150)) * (! (3. <# 0.)) * (3. <# (l-len #s_150)) * (! (4. <# 0.)) * (4. <# (l-len #s_150)) * (! (l-nth(#s_150, 1.) == $$empty)) * (l-nth(#s_150, 2.) == $$empty) * (! (l-nth(#s_150, 3.) == $$empty)) * (! (l-nth(#s_150, 4.) == $$empty)) * types(c : $$boolean_type, #s_150 : $$list_type, xret : $$list_type) ]]
Normal
[[ (desc == #s_151) * (! (0. <# 0.)) * (0. <# (l-len #s_151)) * (! (l-nth(#s_151, 0.) == "d")) * (! (l-nth(#s_151, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_151)) * (! (2. <# 0.)) * (2. <# (l-len #s_151)) * (! (3. <# 0.)) * (3. <# (l-len #s_151)) * (! (4. <# 0.)) * (4. <# (l-len #s_151)) * (! (l-nth(#s_151, 1.) == $$empty)) * (! (l-nth(#s_151, 2.) == $$empty)) * (l-nth(#s_151, 3.) == $$empty) * (l-nth(#s_151, 4.) == $$empty) * types(#s_151 : $$list_type) ]]
[[ (c == l-nth(#s_151, 2.)) * (v == $$undefined) * (d == l-nth(#s_151, 0.)) * (desc == #s_151) * (w == $$f) * (xret == {{ "d", $$undefined, $$f, l-nth(#s_151, 1.), l-nth(#s_151, 2.) }}) * (e == l-nth(#s_151, 1.)) * (! (0. <# 0.)) * (0. <# (l-len #s_151)) * (! (l-nth(#s_151, 0.) == "d")) * (! (l-nth(#s_151, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_151)) * (! (2. <# 0.)) * (2. <# (l-len #s_151)) * (! (3. <# 0.)) * (3. <# (l-len #s_151)) * (! (4. <# 0.)) * (4. <# (l-len #s_151)) * (! (l-nth(#s_151, 1.) == $$empty)) * (! (l-nth(#s_151, 2.) == $$empty)) * (l-nth(#s_151, 3.) == $$empty) * (l-nth(#s_151, 4.) == $$empty) * (v == $$undefined) * types(v : $$undefined_type, #s_151 : $$list_type, desc : $$list_type, xret : $$list_type, w : $$boolean_type) ]]
Normal
[[ (desc == #s_152) * (! (0. <# 0.)) * (0. <# (l-len #s_152)) * (! (l-nth(#s_152, 0.) == "d")) * (! (l-nth(#s_152, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_152)) * (! (2. <# 0.)) * (2. <# (l-len #s_152)) * (! (3. <# 0.)) * (3. <# (l-len #s_152)) * (! (4. <# 0.)) * (4. <# (l-len #s_152)) * (! (l-nth(#s_152, 1.) == $$empty)) * (! (l-nth(#s_152, 2.) == $$empty)) * (l-nth(#s_152, 3.) == $$empty) * (! (l-nth(#s_152, 4.) == $$empty)) * types(#s_152 : $$list_type) ]]
[[ (c == l-nth(#s_152, 2.)) * (v == $$undefined) * (d == l-nth(#s_152, 0.)) * (desc == #s_152) * (w == l-nth(#s_152, 4.)) * (xret == {{ "d", $$undefined, l-nth(#s_152, 4.), l-nth(#s_152, 1.), l-nth(#s_152, 2.) }}) * (e == l-nth(#s_152, 1.)) * (! (0. <# 0.)) * (0. <# (l-len #s_152)) * (! (l-nth(#s_152, 0.) == "d")) * (! (l-nth(#s_152, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_152)) * (! (2. <# 0.)) * (2. <# (l-len #s_152)) * (! (3. <# 0.)) * (3. <# (l-len #s_152)) * (! (4. <# 0.)) * (4. <# (l-len #s_152)) * (! (l-nth(#s_152, 1.) == $$empty)) * (! (l-nth(#s_152, 2.) == $$empty)) * (l-nth(#s_152, 3.) == $$empty) * (! (l-nth(#s_152, 4.) == $$empty)) * (v == $$undefined) * types(v : $$undefined_type, desc : $$list_type, #s_152 : $$list_type, xret : $$list_type) ]]
Normal
[[ (desc == #s_153) * (! (0. <# 0.)) * (0. <# (l-len #s_153)) * (! (l-nth(#s_153, 0.) == "d")) * (! (l-nth(#s_153, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_153)) * (! (2. <# 0.)) * (2. <# (l-len #s_153)) * (! (3. <# 0.)) * (3. <# (l-len #s_153)) * (! (4. <# 0.)) * (4. <# (l-len #s_153)) * (! (l-nth(#s_153, 1.) == $$empty)) * (! (l-nth(#s_153, 2.) == $$empty)) * (! (l-nth(#s_153, 3.) == $$empty)) * (l-nth(#s_153, 4.) == $$empty) * types(#s_153 : $$list_type) ]]
[[ (c == l-nth(#s_153, 2.)) * (v == l-nth(#s_153, 3.)) * (d == l-nth(#s_153, 0.)) * (desc == #s_153) * (w == $$f) * (xret == {{ "d", l-nth(#s_153, 3.), $$f, l-nth(#s_153, 1.), l-nth(#s_153, 2.) }}) * (e == l-nth(#s_153, 1.)) * (! (0. <# 0.)) * (0. <# (l-len #s_153)) * (! (l-nth(#s_153, 0.) == "d")) * (! (l-nth(#s_153, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_153)) * (! (2. <# 0.)) * (2. <# (l-len #s_153)) * (! (3. <# 0.)) * (3. <# (l-len #s_153)) * (! (4. <# 0.)) * (4. <# (l-len #s_153)) * (! (l-nth(#s_153, 1.) == $$empty)) * (! (l-nth(#s_153, 2.) == $$empty)) * (! (l-nth(#s_153, 3.) == $$empty)) * (l-nth(#s_153, 4.) == $$empty) * types(#s_153 : $$list_type, xret : $$list_type, w : $$boolean_type) ]]
Normal
[[ (desc == #s_154) * (! (0. <# 0.)) * (0. <# (l-len #s_154)) * (! (l-nth(#s_154, 0.) == "d")) * (! (l-nth(#s_154, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_154)) * (! (2. <# 0.)) * (2. <# (l-len #s_154)) * (! (3. <# 0.)) * (3. <# (l-len #s_154)) * (! (4. <# 0.)) * (4. <# (l-len #s_154)) * (! (l-nth(#s_154, 1.) == $$empty)) * (! (l-nth(#s_154, 2.) == $$empty)) * (! (l-nth(#s_154, 3.) == $$empty)) * (! (l-nth(#s_154, 4.) == $$empty)) * types(#s_154 : $$list_type) ]]
[[ (c == l-nth(#s_154, 2.)) * (v == l-nth(#s_154, 3.)) * (d == l-nth(#s_154, 0.)) * (desc == #s_154) * (w == l-nth(#s_154, 4.)) * (xret == {{ "d", l-nth(#s_154, 3.), l-nth(#s_154, 4.), l-nth(#s_154, 1.), l-nth(#s_154, 2.) }}) * (e == l-nth(#s_154, 1.)) * (! (0. <# 0.)) * (0. <# (l-len #s_154)) * (! (l-nth(#s_154, 0.) == "d")) * (! (l-nth(#s_154, 0.) == "a")) * (! (1. <# 0.)) * (1. <# (l-len #s_154)) * (! (2. <# 0.)) * (2. <# (l-len #s_154)) * (! (3. <# 0.)) * (3. <# (l-len #s_154)) * (! (4. <# 0.)) * (4. <# (l-len #s_154)) * (! (l-nth(#s_154, 1.) == $$empty)) * (! (l-nth(#s_154, 2.) == $$empty)) * (! (l-nth(#s_154, 3.) == $$empty)) * (! (l-nth(#s_154, 4.) == $$empty)) * types(#s_154 : $$list_type, xret : $$list_type) ]]
Normal

i__isAccessorDescriptor
----------
[[ (desc == #s_126) * (#s_126 == $$undefined) * types(#s_126 : $$undefined_type) ]]
[[ (desc == $$undefined) * (xret == $$f) * (desc == $$undefined) * types(desc : $$undefined_type, xret : $$boolean_type) ]]
Normal
[[ (desc == #s_127) * (! (#s_127 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_127)) * (l-nth(#s_127, 0.) == "a") * types(#s_127 : $$list_type) ]]
[[ (d == l-nth(#s_127, 0.)) * (desc == #s_127) * (xret == $$t) * (! (#s_127 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_127)) * (l-nth(#s_127, 0.) == "a") * types(#s_127 : $$list_type, xret : $$boolean_type) ]]
Normal
[[ (desc == #s_128) * (! (#s_128 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_128)) * (! (l-nth(#s_128, 0.) == "a")) * (l-nth(#s_128, 0.) == "g") * (! (5. <# 0.)) * (5. <# (l-len #s_128)) * (! (6. <# 0.)) * (6. <# (l-len #s_128)) * (l-nth(#s_128, 5.) == $$empty) * (l-nth(#s_128, 6.) == $$empty) * types(#s_128 : $$list_type) ]]
[[ (s == l-nth(#s_128, 6.)) * (d == l-nth(#s_128, 0.)) * (g == l-nth(#s_128, 5.)) * (desc == #s_128) * (xret == $$f) * (! (#s_128 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_128)) * (! (l-nth(#s_128, 0.) == "a")) * (l-nth(#s_128, 0.) == "g") * (! (5. <# 0.)) * (5. <# (l-len #s_128)) * (! (6. <# 0.)) * (6. <# (l-len #s_128)) * (l-nth(#s_128, 5.) == $$empty) * (l-nth(#s_128, 6.) == $$empty) * types(#s_128 : $$list_type, xret : $$boolean_type) ]]
Normal
[[ (desc == #s_129) * (! (#s_129 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_129)) * (! (l-nth(#s_129, 0.) == "a")) * (l-nth(#s_129, 0.) == "g") * (! (5. <# 0.)) * (5. <# (l-len #s_129)) * (! (6. <# 0.)) * (6. <# (l-len #s_129)) * ((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty))) * types(#s_129 : $$list_type) ]]
[[ (s == l-nth(#s_129, 6.)) * (d == l-nth(#s_129, 0.)) * (g == l-nth(#s_129, 5.)) * (desc == #s_129) * (xret == $$t) * (! (#s_129 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_129)) * (! (l-nth(#s_129, 0.) == "a")) * (l-nth(#s_129, 0.) == "g") * (! (5. <# 0.)) * (5. <# (l-len #s_129)) * (! (6. <# 0.)) * (6. <# (l-len #s_129)) * ((! (l-nth(#s_129, 5.) == $$empty)) \/ (! (l-nth(#s_129, 6.) == $$empty))) * types(#s_129 : $$list_type, xret : $$boolean_type) ]]
Normal
[[ (desc == #s_130) * (! (#s_130 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_130)) * (! (l-nth(#s_130, 0.) == "a")) * (! (l-nth(#s_130, 0.) == "g")) * types(#s_130 : $$list_type) ]]
[[ (d == l-nth(#s_130, 0.)) * (desc == #s_130) * (xret == $$f) * (! (#s_130 == $$undefined)) * (! (0. <# 0.)) * (0. <# (l-len #s_130)) * (! (l-nth(#s_130, 0.) == "a")) * (! (l-nth(#s_130, 0.) == "g")) * types(xret : $$boolean_type, #s_130 : $$list_type) ]]
Normal

i__isCallable
----------
[[ ((_$l_26, "@call") -> #s_171) * (l == #s_170) * (typeOf(_$l_26) == $$object_type) * (#s_170 == _$l_26) * types(#s_170 : $$object_type) ]]
[[ ((_$l_26, "@call") -> #s_171) * (l == _$l_26) * (xret == (not (#s_171 = None))) * (typeOf(_$l_26) == $$object_type) * types(l : $$object_type, xret : $$boolean_type) ]]
Normal
[[ (l == #s_172) * (! (typeOf(#s_172) == $$object_type)) * types() ]]
[[ (l == #s_172) * (xret == $$f) * (! (typeOf(#s_172) == $$object_type)) * types(xret : $$boolean_type) ]]
Normal

FAILED to generate specifications for: 

i__isGenericDescriptor
----------
 No precondition found for procedure i__isDataDescriptor.

