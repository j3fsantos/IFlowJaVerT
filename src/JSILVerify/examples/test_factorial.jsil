(** Totals: 0 fails and 1 pass **)

pred factorial (n, f) : (n == 0) * (f == 1) * types(n: $$number_type),
						(!(n <# 1)) * (#n1 == (n - 1)) * factorial(#n1, #f1) * (f == #f) * (f == (n * #f1)) * types(n: $$number_type, #n1: $$number_type, #f: $$number_type);

spec factorial (n)
	[[ types(n : $$number_type) * (!(#n <# 0)) * (n == #n) ]]
	[[ types(n : $$number_type, ret : $$number_type) * (!(n <# 0)) * factorial(n, ret) ]]
	normal
proc factorial (n) {
	xret := 1;
pos:
	goto [n = 0] rlab rec;
rec:
	xret := "factorial" (n - 1);
	xret := n * xret;
	skip;
	[* fold factorial(n, xret) *]
rlab:
	skip
} with {
	ret: xret, rlab;
};
