(** Totals: 2 fails and 2 passes **)

(** Expected result: YES                             **)
spec test0 (y)
   [[ types(y: Bool) ]]
   [[ ((ret, "cenoura") -> #y) * ((ret, "@proto") -> null) ]]
   normal
proc test0 (y) {
  		   x := new ();
  		   goto [y] then1 else1; 
   then1:   [x, "cenoura"] := "maria";
           goto rlab; 
   else1:   [x, "cenoura"] := "jose"; 
   rlab:   skip
} with { ret: x, rlab; };


(** Expected result: NO                             **)
spec test1 (y)
   [[ types(y: Bool) ]]
   [[ ((ret, "cenoura") -> "maria") * ((ret, "@proto") -> null) ]]
   normal
proc test1 (y) {
  		   x := new ();
  		   goto [y] then1 else1; 
   then1:   [x, "cenoura"] := "maria";
           goto rlab; 
   else1:   [x, "cenoura"] := "jose"; 
   rlab:   skip
} with { ret: x, rlab; };


(** Expected result: YES                             **)
spec test2 (y)
   [[ (y == true) * types(y: Bool) ]]
   [[ ((ret, "cenoura") -> "maria") * ((ret, "@proto") -> null) ]]
   normal
proc test2 (y) {
  		   x := new ();
  		   goto [y] then1 else1; 
   then1:   [x, "cenoura"] := "maria";
           goto rlab; 
   else1:   [x, "cenoura"] := "jose"; 
   rlab:   skip
} with { ret: x, rlab; };


(** Expected result: NO                             **)
spec test3 (y)
   [[ (y == false) * types(y: Bool) ]]
   [[ ((ret, "cenoura") -> "maria") * ((ret, "@proto") -> null) ]]
   normal
proc test3 (y) {
  		   x := new ();
  		   goto [y] then1 else1; 
   then1:   [x, "cenoura"] := "maria";
           goto rlab; 
   else1:   [x, "cenoura"] := "jose"; 
   rlab:   skip
} with { ret: x, rlab; };
