spec sets_01 ()
	[[ emp ]]
	[[ (ret == true) * types(ret : Bool) ]]
	normal

proc sets_01 ()
{
			xret := -{- 1, 2, 3 -}-;
			xret := (xret -u- -{- "a", "b", "c" -}-);
			xret := (-{- "a", 2, "d" -}- -i- xret);
			xret := (xret -d- -{- 2 -}-);
			yret := (xret -s- -{- 5, 6, true, "a" -}-);
			xret := (yret and (not ("b" -e- xret)));
	rlab:	skip
}
with
{
	ret:	xret, rlab;
};

spec sets_02 (x, y)
	[[ (x == #x) * (y == #y) * types (#x : Num, #y : Num) ]]
	[[ (ret == true) * types(ret : Bool) ]]
	normal

proc sets_02 (x, y)
{
			seti := -{- x, y -}-;
			setd := seti -d- -{- x -}-;
			xret := not (setd = -{- -}-);
	rlab:	skip
}
with
{
	ret:	xret, rlab;
};

spec sets_03 (x, y)
	[[ (x == #x) * (y == #y) * types (#x : Num, #y : Num) ]]
	[[ (ret == false) * types(ret : Bool) ]]
	normal

proc sets_03 (x, y)
{
			seti := -{- x, y -}-;
			setd := seti -d- -{- x -}-;
			xret := not (setd = -{- -}-);
	rlab:	skip
}
with
{
	ret:	xret, rlab;
};