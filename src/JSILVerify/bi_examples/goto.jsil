(** Goto **)
spec test0 (x)
   [[ emp ]] 
   [[ emp ]] 
   normal
proc test0 (x) {
         goto k ; 
   k:     [x, "date"] := "1832";
   rlab:   skip
} with { ret: x, rlab; };


(** Conditional Goto - True **)
spec test1 (x, y)
   [[ (y == $$t) * types(y: $$boolean_type) ]] 
   [[ emp ]] 
   normal
proc test1 (x, y) {
          goto [y] then4 else4; 
   then4:   [x, "town"] := "Montreuil";
            goto rlab; 
   else4:   [x, "date"] := "1832"; 
   rlab:    skip
} with { ret: x, rlab; };


(** Conditional Goto - False **)
spec test2 (x, y)
   [[ (y == $$f) * types(y: $$boolean_type) ]] 
   [[ emp ]] 
   normal
proc test2 (x, y) {
          goto [y] then4 else4; 
   then4:   [x, "town"] := "Montreuil";
            goto rlab; 
   else4:   [x, "station"] := "Waterloo"; 
   rlab:    skip
} with { ret: x, rlab; };

(** Conditional Goto - Missing **)
spec test3 (x, y)
   [[ emp ]] 
   [[ emp ]] 
   normal
proc test3 (x, y) {
          y := [x, "town"];
          goto [y] then4 else4; 
   then4:   [x, "station"] := "Waterloo";
            goto rlab; 
   else4:   [x, "date"] := "1832"; 
   rlab:    skip
} with { ret: x, rlab; };

(** Conditional Goto - Member Check **)
spec test4 (x, y)
   [[ emp ]] 
   [[ emp ]] 
   normal
proc test4 (x, y) {
          y := hasField(x, "town");
          y := [x, "town"];
          goto [y] then4 else4; 
   then4:   [x, "station"] := "Waterloo";
            goto rlab; 
   else4:   [x, "date"] := "1832"; 
   rlab:    skip
} with { ret: x, rlab; };
 
(** Conditional Goto - Procedure to call introduces logical variables **)
spec proctest1 (x, y, z)
   [[ (x == #x) * (#x == $$t) * types(#x: $$boolean_type) ]] 
   [[ (x == #x) * (#x == $$t) * types(#x: $$boolean_type) ]] 
   normal
proc proctest1 (x, y, z) {
           y := [z, "station"];
           rlab:    skip
} with { ret: x, rlab; };

(** Conditional Goto - Procedure to call does not introduce logical variables **)
spec proctest2 (x, y, z)
   [[ emp ]] 
   [[ emp ]] 
   normal
proc proctest2 (x, y, z) {
          y := hasField(z, "town");
          rlab:    skip
} with { ret: y, rlab; };

(** Conditional Goto - Vars Check **)
spec test5 (x, y, z)
   [[ emp ]] 
   [[ emp ]] 
   normal
proc test5 (x, y, z) {
          i := "proctest1" (x, y, z); 
          goto [i] then4 else4; 
   then4:   [x, "station"] := "Waterloo";
            goto rlab; 
   else4:   [x, "date"] := "1832"; 
   rlab:    skip
} with { ret: x, rlab; };

(** Conditional Goto - Vars Check **)
spec test6 (x, y, z)
   [[ emp ]] 
   [[ emp ]] 
   normal
proc test6 (x, y, z) {
          i := "proctest1" (x, y, z); 
          goto [i] then4 else4; 
   then4:   [z, "station"] := "Waterloo";
            goto rlab; 
   else4:   [z, "date"] := "1832"; 
   rlab:    skip
} with { ret: x, rlab; };

(** Conditional Goto - Vars Check **)
spec test7 (x, y, z)
   [[ emp ]] 
   [[ emp ]] 
   normal
proc test7 (x, y, z) {
          i := "proctest2" (x, y, z); 
          goto [i] then4 else4; 
   then4:   [x, "station"] := "Waterloo";
            goto rlab; 
   else4:   [x, "date"] := "1832"; 
   rlab:    skip
} with { ret: x, rlab; };
