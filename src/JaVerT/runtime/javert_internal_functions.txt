----------------------------------
----------------------------------
Symbolic execution of copy_object
----------------------------------
--0--
TIME: 1.358644
STATE:
Heap: 
	_$l_#l |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(fields: #fields)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#f, 0.) == \"@\"))
	(! (#f == \"\"))
	(#fields == {{ #f }})
Gamma: 	
	(l: $$object_type)
	(#f: $$string_type)
	(#fields: $$list_type)
Preds: 
CMD: xret := new()
----------------------------------
----------------------------------
--1--
TIME: 1.358727
STATE:
Heap: 
	_$l_#l |-> [(#f: #v), (default: $$unknown)]
	_$l_0 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(xret: _$l_0)
	(fields: #fields)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#f, 0.) == \"@\"))
	(! (#f == \"\"))
	(! (_$l_0 == $lg))
	(#fields == {{ #f }})
Gamma: 	
	(xret: $$object_type)
	(l: $$object_type)
	(#f: $$string_type)
	(#fields: $$list_type)
Preds: 
CMD: xret := "copy_object_rec"(l, fields, xret) 
----------------------------------
Verified one spec of proc copy_object
----------------------------------
----------------------------------
Symbolic execution of copy_object
----------------------------------
--0--
TIME: 1.377591
STATE:
Heap: 
	_$l_#l |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(fields: #fields)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#f1 == \"main\"))
	(! (s-nth(#f1, 0.) == \"@\"))
	(! (#f1 == \"\"))
	(#fields == {{ #f1, \"main\" }})
Gamma: 	
	(#f1: $$string_type)
	(l: $$object_type)
	(#fields: $$list_type)
Preds: 
CMD: xret := new()
----------------------------------
----------------------------------
--1--
TIME: 1.377673
STATE:
Heap: 
	_$l_#l |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
	_$l_1 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(xret: _$l_1)
	(fields: #fields)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#f1 == \"main\"))
	(! (s-nth(#f1, 0.) == \"@\"))
	(! (#f1 == \"\"))
	(! (_$l_1 == $lg))
	(#fields == {{ #f1, \"main\" }})
Gamma: 	
	(xret: $$object_type)
	(#f1: $$string_type)
	(l: $$object_type)
	(#fields: $$list_type)
Preds: 
CMD: xret := "copy_object_rec"(l, fields, xret) 
----------------------------------
Verified one spec of proc copy_object
----------------------------------
----------------------------------
Symbolic execution of copy_object_rec
----------------------------------
--0--
TIME: 1.388999
STATE:
Heap: 
	
Store: 	
	(fields: $$nil)
Pure Formulae: 	
Gamma: 	
	(fields: $$list_type)
Preds: 
CMD: goto [(fields = $$nil)] 6 1
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 1.389064
STATE:
Heap: 
	
Store: 	
	(fields: $$nil)
Pure Formulae: 	
Gamma: 	
	(fields: $$list_type)
Preds: 
CMD: xret := lt
----------------------------------
Verified one spec of proc copy_object_rec
----------------------------------
----------------------------------
Symbolic execution of copy_object_rec
----------------------------------
--0--
TIME: 1.389230
STATE:
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (#f: None), (default: $$unknown)]
	_$l_#lf |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(lf: _$l_#lf)
	(fields: #fields)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f, 0.) == \"@\"))
	(! (#f == \"\"))
	(#fields == {{ #f }})
Gamma: 	
	(lf: $$object_type)
	(#f: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: goto [(fields = $$nil)] 6 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 1.408293
STATE:
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (#f: None), (default: $$unknown)]
	_$l_#lf |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(lf: _$l_#lf)
	(fields: #fields)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f, 0.) == \"@\"))
	(! (#f == \"\"))
	(#fields == {{ #f }})
Gamma: 	
	(lf: $$object_type)
	(#f: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: head := l-nth(fields, 0.)
----------------------------------
----------------------------------
--2--
TIME: 1.408413
STATE:
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (#f: None), (default: $$unknown)]
	_$l_#lf |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(lf: _$l_#lf)
	(fields: #fields)
	(head: #f)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f, 0.) == \"@\"))
	(! (#f == \"\"))
	(#fields == {{ #f }})
Gamma: 	
	(lf: $$object_type)
	(head: $$string_type)
	(#f: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: tail := (cdr fields)
----------------------------------
----------------------------------
--3--
TIME: 1.408510
STATE:
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (#f: None), (default: $$unknown)]
	_$l_#lf |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(tail: $$nil)
	(lf: _$l_#lf)
	(fields: #fields)
	(head: #f)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f, 0.) == \"@\"))
	(! (#f == \"\"))
	(#fields == {{ #f }})
Gamma: 	
	(tail: $$list_type)
	(lf: $$object_type)
	(head: $$string_type)
	(#f: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: val := [lf, head]
----------------------------------
----------------------------------
--4--
TIME: 1.408592
STATE:
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (#f: None), (default: $$unknown)]
	_$l_#lf |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(val: #v)
	(tail: $$nil)
	(lf: _$l_#lf)
	(fields: #fields)
	(head: #f)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f, 0.) == \"@\"))
	(! (#f == \"\"))
	(#fields == {{ #f }})
Gamma: 	
	(tail: $$list_type)
	(lf: $$object_type)
	(head: $$string_type)
	(#f: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: [lt, head] := val
----------------------------------
----------------------------------
--5--
TIME: 1.408671
STATE:
Heap: 
	_$l_#lt |-> [(#f: #v), (\"@proto\": $$null), (default: $$unknown)]
	_$l_#lf |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(val: #v)
	(tail: $$nil)
	(lf: _$l_#lf)
	(fields: #fields)
	(head: #f)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f, 0.) == \"@\"))
	(! (#f == \"\"))
	(#fields == {{ #f }})
Gamma: 	
	(tail: $$list_type)
	(lf: $$object_type)
	(head: $$string_type)
	(#f: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: xret := "copy_object_rec"(lf, tail, lt) 
----------------------------------
----------------------------------
--6--
TIME: 1.409036
STATE:
Heap: 
	_$l_#lt |-> [(#f: #v), (\"@proto\": $$null), (default: $$unknown)]
	_$l_#lf |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(val: #v)
	(tail: $$nil)
	(xret: _lvar_124)
	(lf: _$l_#lf)
	(fields: #fields)
	(head: #f)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f, 0.) == \"@\"))
	(! (#f == \"\"))
	(#fields == {{ #f }})
Gamma: 	
	(tail: $$list_type)
	(lf: $$object_type)
	(head: $$string_type)
	(#f: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: xret := lt
----------------------------------
Verified one spec of proc copy_object_rec
----------------------------------
----------------------------------
Symbolic execution of copy_object_rec
----------------------------------
--0--
TIME: 1.409508
STATE:
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (\"main\": None), (#f1: None), (default: $$unknown)]
	_$l_#lf |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(lf: _$l_#lf)
	(fields: #fields)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f1, 0.) == \"@\"))
	(! (#f1 == \"\"))
	(#fields == {{ #f1, \"main\" }})
Gamma: 	
	(#f1: $$string_type)
	(lf: $$object_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: goto [(fields = $$nil)] 6 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 1.426296
STATE:
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (\"main\": None), (#f1: None), (default: $$unknown)]
	_$l_#lf |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(lf: _$l_#lf)
	(fields: #fields)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f1, 0.) == \"@\"))
	(! (#f1 == \"\"))
	(#fields == {{ #f1, \"main\" }})
Gamma: 	
	(#f1: $$string_type)
	(lf: $$object_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: head := l-nth(fields, 0.)
----------------------------------
----------------------------------
--2--
TIME: 1.426371
STATE:
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (\"main\": None), (#f1: None), (default: $$unknown)]
	_$l_#lf |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(lf: _$l_#lf)
	(fields: #fields)
	(head: #f1)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f1, 0.) == \"@\"))
	(! (#f1 == \"\"))
	(#fields == {{ #f1, \"main\" }})
Gamma: 	
	(#f1: $$string_type)
	(lf: $$object_type)
	(head: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: tail := (cdr fields)
----------------------------------
----------------------------------
--3--
TIME: 1.426458
STATE:
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (\"main\": None), (#f1: None), (default: $$unknown)]
	_$l_#lf |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(tail: {{ \"main\" }})
	(lf: _$l_#lf)
	(fields: #fields)
	(head: #f1)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f1, 0.) == \"@\"))
	(! (#f1 == \"\"))
	(#fields == {{ #f1, \"main\" }})
Gamma: 	
	(tail: $$list_type)
	(#f1: $$string_type)
	(lf: $$object_type)
	(head: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: val := [lf, head]
----------------------------------
I found the model: 

(define-fun |#f1| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 3.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 3.0) (= x!1 2.0)) 12.0
  (ite (and (= x!0 3.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 3.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    1.0))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType)))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 3.0) 4.0
    0.0)))
I found the model: 

(define-fun |#f1| () Extended_JSIL_Literal
  (Elem (String 3)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 3.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 3.0) (= x!1 2.0)) 12.0
  (ite (and (= x!0 3.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 3.0) (= x!1 0.0)) 14.0
    1.0)))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 3))) StringType
    BooleanType)))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 3.0) 4.0
    0.0)))
----------------------------------
--4--
TIME: 1.477551
STATE:
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (\"main\": None), (#f1: None), (default: $$unknown)]
	_$l_#lf |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(val: #v1)
	(tail: {{ \"main\" }})
	(lf: _$l_#lf)
	(fields: #fields)
	(head: #f1)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f1, 0.) == \"@\"))
	(! (#f1 == \"\"))
	(#fields == {{ #f1, \"main\" }})
Gamma: 	
	(tail: $$list_type)
	(#f1: $$string_type)
	(lf: $$object_type)
	(head: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: [lt, head] := val
----------------------------------
I found the model: 

(define-fun |#f1| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 3.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 3.0) (= x!1 2.0)) 12.0
  (ite (and (= x!0 3.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 3.0) (= x!1 0.0)) 14.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    1.0))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType)))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 3.0) 4.0
    0.0)))
I found the model: 

(define-fun |#f1| () Extended_JSIL_Literal
  (Elem (String 3)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 3.0) (= x!1 3.0)) 11.0
  (ite (and (= x!0 3.0) (= x!1 2.0)) 12.0
  (ite (and (= x!0 3.0) (= x!1 1.0)) 13.0
  (ite (and (= x!0 3.0) (= x!1 0.0)) 14.0
    1.0)))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 3))) StringType
    BooleanType)))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 3.0) 4.0
    0.0)))
----------------------------------
--5--
TIME: 1.514774
STATE:
Heap: 
	_$l_#lt |-> [(#f1: #v1), (\"main\": None), (\"@proto\": $$null), (default: $$unknown)]
	_$l_#lf |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(val: #v1)
	(tail: {{ \"main\" }})
	(lf: _$l_#lf)
	(fields: #fields)
	(head: #f1)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f1, 0.) == \"@\"))
	(! (#f1 == \"\"))
	(#fields == {{ #f1, \"main\" }})
Gamma: 	
	(tail: $$list_type)
	(#f1: $$string_type)
	(lf: $$object_type)
	(head: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: xret := "copy_object_rec"(lf, tail, lt) 
----------------------------------
----------------------------------
--6--
TIME: 1.536814
STATE:
Heap: 
	_$l_#lt |-> [(\"main\": #v2), (\"@proto\": $$null), (#f1: #v1), (default: $$unknown)]
	_$l_#lf |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(val: #v1)
	(tail: {{ \"main\" }})
	(xret: _$l_#lt)
	(lf: _$l_#lf)
	(fields: #fields)
	(head: #f1)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f1, 0.) == \"@\"))
	(! (#f1 == \"\"))
	(! (#f1 == \"main\"))
	(#fields == {{ #f1, \"main\" }})
Gamma: 	
	(tail: $$list_type)
	(xret: $$object_type)
	(#f1: $$string_type)
	(lf: $$object_type)
	(head: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 
CMD: xret := lt
----------------------------------
Verified one spec of proc copy_object_rec
----------------------------------
----------------------------------
Symbolic execution of create_default_object
----------------------------------
--0--
TIME: 1.537242
STATE:
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(pr: #pr)
	(ext: $$undefined)
	(cl: $$undefined)
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#ext: $$undefined_type)
	(cl: $$undefined_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: goto [(cl = $$undefined)] 1 2
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 1.537380
STATE:
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(pr: #pr)
	(ext: $$undefined)
	(cl: $$undefined)
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#ext: $$undefined_type)
	(cl: $$undefined_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: cl := "Object"
----------------------------------
----------------------------------
--2--
TIME: 1.545636
STATE:
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(pr: #pr)
	(ext: $$undefined)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 1.545914
STATE:
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(pr: #pr)
	(ext: $$undefined)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: ext := $$t
----------------------------------
----------------------------------
--4--
TIME: 1.546020
STATE:
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(pr: #pr)
	(ext: $$t)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: [l, "@proto"] := pr
----------------------------------
----------------------------------
--5--
TIME: 1.546135
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": #pr), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$t)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: [l, "@class"] := cl
----------------------------------
----------------------------------
--6--
TIME: 1.546238
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": \"Object\"), (\"@proto\": #pr), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$t)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: [l, "@extensible"] := ext
----------------------------------
----------------------------------
--7--
TIME: 1.546441
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #pr), (\"@class\": \"Object\"), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$t)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_default_object
----------------------------------
----------------------------------
Symbolic execution of create_default_object
----------------------------------
--0--
TIME: 1.546804
STATE:
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: goto [(cl = $$undefined)] 1 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 1.546894
STATE:
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 1.547018
STATE:
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [l, "@proto"] := pr
----------------------------------
----------------------------------
--5--
TIME: 1.547067
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": #pr), (default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [l, "@class"] := cl
----------------------------------
----------------------------------
--6--
TIME: 1.547373
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cl), (\"@proto\": #pr), (default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [l, "@extensible"] := ext
----------------------------------
----------------------------------
--7--
TIME: 1.547420
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (\"@proto\": #pr), (\"@class\": #cl), (default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_default_object
----------------------------------
----------------------------------
Symbolic execution of create_default_object
----------------------------------
--0--
TIME: 1.547773
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$undefined)
	(cl: $$undefined)
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#ext: $$undefined_type)
	(cl: $$undefined_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: goto [(cl = $$undefined)] 1 2
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 1.547933
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$undefined)
	(cl: $$undefined)
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#ext: $$undefined_type)
	(cl: $$undefined_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: cl := "Object"
----------------------------------
----------------------------------
--2--
TIME: 1.548049
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$undefined)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 1.548207
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$undefined)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: ext := $$t
----------------------------------
----------------------------------
--4--
TIME: 1.548323
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$t)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: [l, "@proto"] := pr
----------------------------------
----------------------------------
--5--
TIME: 1.548436
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": #pr), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$t)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: [l, "@class"] := cl
----------------------------------
----------------------------------
--6--
TIME: 1.548550
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": \"Object\"), (\"@proto\": #pr), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$t)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: [l, "@extensible"] := ext
----------------------------------
----------------------------------
--7--
TIME: 1.548664
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #pr), (\"@class\": \"Object\"), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$t)
	(cl: \"Object\")
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$boolean_type)
	(#ext: $$undefined_type)
	(cl: $$string_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_default_object
----------------------------------
----------------------------------
Symbolic execution of create_default_object
----------------------------------
--0--
TIME: 1.549110
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: goto [(cl = $$undefined)] 1 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 1.549200
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: goto [(ext = $$undefined)] 3 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 1.549284
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [l, "@proto"] := pr
----------------------------------
----------------------------------
--5--
TIME: 1.549327
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": #pr), (default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [l, "@class"] := cl
----------------------------------
----------------------------------
--6--
TIME: 1.549371
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cl), (\"@proto\": #pr), (default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [l, "@extensible"] := ext
----------------------------------
----------------------------------
--7--
TIME: 1.549416
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (\"@proto\": #pr), (\"@class\": #cl), (default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_default_object
----------------------------------
----------------------------------
Symbolic execution of create_object_with_call_construct
----------------------------------
--0--
TIME: 1.549670
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: xret := "create_default_object"(l, $lfun_proto, "Function", $$t) 
----------------------------------
----------------------------------
--1--
TIME: 1.550255
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [xret, "@scope"] := $$empty
----------------------------------
----------------------------------
--2--
TIME: 1.550337
STATE:
Heap: 
	_$l_#l |-> [(\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [xret, "length"] := {{ "d", len, $$f, $$f, $$f }}
----------------------------------
----------------------------------
--3--
TIME: 1.550419
STATE:
Heap: 
	_$l_#l |-> [(\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [xret, "@call"] := call
----------------------------------
----------------------------------
--4--
TIME: 1.550513
STATE:
Heap: 
	_$l_#l |-> [(\"@call\": #call), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: goto [(construct = $$empty)] 6 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 1.550679
STATE:
Heap: 
	_$l_#l |-> [(\"@call\": #call), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [xret, "@construct"] := construct
----------------------------------
----------------------------------
--6--
TIME: 1.550775
STATE:
Heap: 
	_$l_#l |-> [(\"@construct\": #construct), (\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"@call\": #call), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_object_with_call_construct
----------------------------------
----------------------------------
Symbolic execution of create_object_with_call_construct
----------------------------------
--0--
TIME: 1.551151
STATE:
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(len: #len)
	(call: #call)
	(l: _$l_#l)
	(construct: $$empty)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(#l: $$object_type)
	(len: $$number_type)
	(call: $$string_type)
	(l: $$object_type)
	(#len: $$number_type)
	(construct: $$empty_type)
Preds: 
CMD: xret := "create_default_object"(l, $lfun_proto, "Function", $$t) 
----------------------------------
----------------------------------
--1--
TIME: 1.551539
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (default: None)]
Store: 	
	(xret: _$l_#l)
	(len: #len)
	(call: #call)
	(l: _$l_#l)
	(construct: $$empty)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#l: $$object_type)
	(len: $$number_type)
	(call: $$string_type)
	(l: $$object_type)
	(#len: $$number_type)
	(construct: $$empty_type)
Preds: 
CMD: [xret, "@scope"] := $$empty
----------------------------------
----------------------------------
--2--
TIME: 1.551653
STATE:
Heap: 
	_$l_#l |-> [(\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: None)]
Store: 	
	(xret: _$l_#l)
	(len: #len)
	(call: #call)
	(l: _$l_#l)
	(construct: $$empty)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(len: $$number_type)
	(#l: $$object_type)
	(call: $$string_type)
	(l: $$object_type)
	(#len: $$number_type)
	(construct: $$empty_type)
Preds: 
CMD: [xret, "length"] := {{ "d", len, $$f, $$f, $$f }}
----------------------------------
----------------------------------
--3--
TIME: 1.551778
STATE:
Heap: 
	_$l_#l |-> [(\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (default: None)]
Store: 	
	(xret: _$l_#l)
	(len: #len)
	(call: #call)
	(l: _$l_#l)
	(construct: $$empty)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#l: $$object_type)
	(len: $$number_type)
	(call: $$string_type)
	(l: $$object_type)
	(#len: $$number_type)
	(construct: $$empty_type)
Preds: 
CMD: [xret, "@call"] := call
----------------------------------
----------------------------------
--4--
TIME: 1.551896
STATE:
Heap: 
	_$l_#l |-> [(\"@call\": #call), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (default: None)]
Store: 	
	(xret: _$l_#l)
	(len: #len)
	(call: #call)
	(l: _$l_#l)
	(construct: $$empty)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(len: $$number_type)
	(#l: $$object_type)
	(call: $$string_type)
	(l: $$object_type)
	(#len: $$number_type)
	(construct: $$empty_type)
Preds: 
CMD: goto [(construct = $$empty)] 6 5
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 1.552031
STATE:
Heap: 
	_$l_#l |-> [(\"@call\": #call), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (default: None)]
Store: 	
	(xret: _$l_#l)
	(len: #len)
	(call: #call)
	(l: _$l_#l)
	(construct: $$empty)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#l: $$object_type)
	(len: $$number_type)
	(call: $$string_type)
	(l: $$object_type)
	(#len: $$number_type)
	(construct: $$empty_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_object_with_call_construct
----------------------------------
----------------------------------
Symbolic execution of create_object_with_call_construct
----------------------------------
--0--
TIME: 1.552309
STATE:
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: xret := "create_default_object"(l, $lfun_proto, "Function", $$t) 
----------------------------------
----------------------------------
--1--
TIME: 1.552646
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [xret, "@scope"] := $$empty
----------------------------------
----------------------------------
--2--
TIME: 1.552727
STATE:
Heap: 
	_$l_#l |-> [(\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [xret, "length"] := {{ "d", len, $$f, $$f, $$f }}
----------------------------------
----------------------------------
--3--
TIME: 1.552807
STATE:
Heap: 
	_$l_#l |-> [(\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [xret, "@call"] := call
----------------------------------
----------------------------------
--4--
TIME: 1.552896
STATE:
Heap: 
	_$l_#l |-> [(\"@call\": #call), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: goto [(construct = $$empty)] 6 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 1.553019
STATE:
Heap: 
	_$l_#l |-> [(\"@call\": #call), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: [xret, "@construct"] := construct
----------------------------------
----------------------------------
--6--
TIME: 1.553100
STATE:
Heap: 
	_$l_#l |-> [(\"@construct\": #construct), (\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"@call\": #call), (default: None)]
Store: 	
	(xret: _$l_#l)
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: xret := l
----------------------------------
Verified one spec of proc create_object_with_call_construct
----------------------------------
----------------------------------
Symbolic execution of create_function_object
----------------------------------
--0--
TIME: 1.553389
STATE:
Heap: 
	
Store: 	
	(xsc: #xsc)
	(construct: #construct)
	(params: #params)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
Preds: 
CMD: len := (l-len params)
----------------------------------
----------------------------------
--1--
TIME: 1.553432
STATE:
Heap: 
	
Store: 	
	(xsc: #xsc)
	(construct: #construct)
	(params: #params)
	(len: (l-len #params))
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(len: $$number_type)
Preds: 
CMD: l := new()
----------------------------------
----------------------------------
--2--
TIME: 1.553546
STATE:
Heap: 
	_$l_2 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(l: _$l_2)
	(xsc: #xsc)
	(construct: #construct)
	(params: #params)
	(len: (l-len #params))
	(call: #call)
Pure Formulae: 	
	(! (_$l_2 == $lg))
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(l: $$object_type)
	(len: $$number_type)
Preds: 
CMD: l := "create_object_with_call_construct"(l, call, construct, len) 
----------------------------------
----------------------------------
--3--
TIME: 1.563533
STATE:
Heap: 
	_$l_2 |-> [(\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", (l-len #params), $$f, $$f, $$f }}), (\"@call\": #call), (\"@construct\": #construct), (default: None)]
Store: 	
	(l: _$l_2)
	(xsc: #xsc)
	(construct: #construct)
	(params: #params)
	(len: (l-len #params))
	(call: #call)
Pure Formulae: 	
	(! (_$l_2 == $lg))
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(l: $$object_type)
	(len: $$number_type)
Preds: 
CMD: [l, "@scope"] := xsc
----------------------------------
----------------------------------
--4--
TIME: 1.563746
STATE:
Heap: 
	_$l_2 |-> [(\"@scope\": #xsc), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #params), $$f, $$f, $$f }}), (\"@call\": #call), (\"@construct\": #construct), (default: None)]
Store: 	
	(l: _$l_2)
	(xsc: #xsc)
	(construct: #construct)
	(params: #params)
	(len: (l-len #params))
	(call: #call)
Pure Formulae: 	
	(! (_$l_2 == $lg))
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(l: $$object_type)
	(len: $$number_type)
Preds: 
CMD: prototype := new()
----------------------------------
----------------------------------
--5--
TIME: 1.563941
STATE:
Heap: 
	_$l_3 |-> [(\"@proto\": $$null), (default: None)]
	_$l_2 |-> [(\"@scope\": #xsc), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #params), $$f, $$f, $$f }}), (\"@call\": #call), (\"@construct\": #construct), (default: None)]
Store: 	
	(l: _$l_2)
	(xsc: #xsc)
	(prototype: _$l_3)
	(construct: #construct)
	(params: #params)
	(len: (l-len #params))
	(call: #call)
Pure Formulae: 	
	(! (_$l_2 == $lg))
	(! (_$l_3 == $lg))
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(len: $$number_type)
Preds: 
CMD: prototype := "create_default_object"(prototype, $lobj_proto, "Object", $$t) 
----------------------------------
----------------------------------
--6--
TIME: 1.576459
STATE:
Heap: 
	_$l_3 |-> [(\"@proto\": $lobj_proto), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	_$l_2 |-> [(\"@scope\": #xsc), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #params), $$f, $$f, $$f }}), (\"@call\": #call), (\"@construct\": #construct), (default: None)]
Store: 	
	(l: _$l_2)
	(xsc: #xsc)
	(prototype: _$l_3)
	(construct: #construct)
	(params: #params)
	(len: (l-len #params))
	(call: #call)
Pure Formulae: 	
	(! (_$l_2 == $lg))
	(! (_$l_3 == $lg))
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(len: $$number_type)
Preds: 
CMD: [prototype, "constructor"] := {{ "d", l, $$t, $$f, $$t }}
----------------------------------
----------------------------------
--7--
TIME: 1.576580
STATE:
Heap: 
	_$l_3 |-> [(\"constructor\": {{ \"d\", _$l_2, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_2 |-> [(\"@scope\": #xsc), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #params), $$f, $$f, $$f }}), (\"@call\": #call), (\"@construct\": #construct), (default: None)]
Store: 	
	(l: _$l_2)
	(xsc: #xsc)
	(prototype: _$l_3)
	(construct: #construct)
	(params: #params)
	(len: (l-len #params))
	(call: #call)
Pure Formulae: 	
	(! (_$l_2 == $lg))
	(! (_$l_3 == $lg))
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(len: $$number_type)
Preds: 
CMD: [l, "prototype"] := {{ "d", prototype, $$t, $$f, $$f }}
----------------------------------
----------------------------------
--8--
TIME: 1.576683
STATE:
Heap: 
	_$l_3 |-> [(\"constructor\": {{ \"d\", _$l_2, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_2 |-> [(\"prototype\": {{ \"d\", _$l_3, $$t, $$f, $$f }}), (\"@construct\": #construct), (\"@call\": #call), (\"length\": {{ \"d\", (l-len #params), $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #xsc), (default: None)]
Store: 	
	(l: _$l_2)
	(xsc: #xsc)
	(prototype: _$l_3)
	(construct: #construct)
	(params: #params)
	(len: (l-len #params))
	(call: #call)
Pure Formulae: 	
	(! (_$l_2 == $lg))
	(! (_$l_3 == $lg))
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(len: $$number_type)
Preds: 
CMD: [l, "caller"] := {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}
----------------------------------
----------------------------------
--9--
TIME: 1.576801
STATE:
Heap: 
	_$l_3 |-> [(\"constructor\": {{ \"d\", _$l_2, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_2 |-> [(\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"@scope\": #xsc), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (\"length\": {{ \"d\", (l-len #params), $$f, $$f, $$f }}), (\"@call\": #call), (\"@construct\": #construct), (\"prototype\": {{ \"d\", _$l_3, $$t, $$f, $$f }}), (default: None)]
Store: 	
	(l: _$l_2)
	(xsc: #xsc)
	(prototype: _$l_3)
	(construct: #construct)
	(params: #params)
	(len: (l-len #params))
	(call: #call)
Pure Formulae: 	
	(! (_$l_2 == $lg))
	(! (_$l_3 == $lg))
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(len: $$number_type)
Preds: 
CMD: [l, "arguments"] := {{ "a", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}
----------------------------------
----------------------------------
--10--
TIME: 1.576906
STATE:
Heap: 
	_$l_3 |-> [(\"constructor\": {{ \"d\", _$l_2, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_2 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_3, $$t, $$f, $$f }}), (\"@construct\": #construct), (\"@call\": #call), (\"length\": {{ \"d\", (l-len #params), $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #xsc), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (default: None)]
Store: 	
	(l: _$l_2)
	(xsc: #xsc)
	(prototype: _$l_3)
	(construct: #construct)
	(params: #params)
	(len: (l-len #params))
	(call: #call)
Pure Formulae: 	
	(! (_$l_2 == $lg))
	(! (_$l_3 == $lg))
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(len: $$number_type)
Preds: 
CMD: xret := l
----------------------------------
----------------------------------
--11--
TIME: 1.577015
STATE:
Heap: 
	_$l_3 |-> [(\"constructor\": {{ \"d\", _$l_2, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	_$l_2 |-> [(\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"prototype\": {{ \"d\", _$l_3, $$t, $$f, $$f }}), (\"@construct\": #construct), (\"@call\": #call), (\"length\": {{ \"d\", (l-len #params), $$f, $$f, $$f }}), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": #xsc), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (default: None)]
Store: 	
	(xret: _$l_2)
	(l: _$l_2)
	(xsc: #xsc)
	(prototype: _$l_3)
	(construct: #construct)
	(params: #params)
	(len: (l-len #params))
	(call: #call)
Pure Formulae: 	
	(! (_$l_2 == $lg))
	(! (_$l_3 == $lg))
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(l: $$object_type)
	(prototype: $$object_type)
	(len: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc create_function_object
----------------------------------
----------------------------------
Symbolic execution of Error_construct
----------------------------------
--0--
TIME: 1.580481
STATE:
Heap: 
	_$l_#vthis |-> [(\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(v: $$undefined)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(#vthis: $$object_type)
	(v: $$undefined_type)
	(vthis: $$object_type)
Preds: 
CMD: xret := vthis
----------------------------------
----------------------------------
--1--
TIME: 1.580708
STATE:
Heap: 
	_$l_#vthis |-> [(\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
	(v: $$undefined)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(#vthis: $$object_type)
	(xret: $$object_type)
	(v: $$undefined_type)
	(vthis: $$object_type)
Preds: 
CMD: [vthis, "@class"] := "Error"
----------------------------------
----------------------------------
--2--
TIME: 1.580886
STATE:
Heap: 
	_$l_#vthis |-> [(\"@class\": \"Error\"), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
	(v: $$undefined)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(#vthis: $$object_type)
	(xret: $$object_type)
	(v: $$undefined_type)
	(vthis: $$object_type)
Preds: 
CMD: [vthis, "@extensible"] := $$t
----------------------------------
----------------------------------
--3--
TIME: 1.581073
STATE:
Heap: 
	_$l_#vthis |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
	(v: $$undefined)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(#vthis: $$object_type)
	(xret: $$object_type)
	(v: $$undefined_type)
	(vthis: $$object_type)
Preds: 
CMD: goto [(v = $$undefined)] 6 4
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 1.581194
STATE:
Heap: 
	_$l_#vthis |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
	(v: $$undefined)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(#vthis: $$object_type)
	(xret: $$object_type)
	(v: $$undefined_type)
	(vthis: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc Error_construct
----------------------------------
----------------------------------
Symbolic execution of Error_construct
----------------------------------
--0--
TIME: 1.581574
STATE:
Heap: 
	_$l_#vthis |-> [(\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(v: #m)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(#vthis: $$object_type)
	(#m: $$string_type)
	(vthis: $$object_type)
Preds: 
CMD: xret := vthis
----------------------------------
----------------------------------
--1--
TIME: 1.581649
STATE:
Heap: 
	_$l_#vthis |-> [(\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
	(v: #m)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#vthis: $$object_type)
	(#m: $$string_type)
	(vthis: $$object_type)
Preds: 
CMD: [vthis, "@class"] := "Error"
----------------------------------
----------------------------------
--2--
TIME: 1.581863
STATE:
Heap: 
	_$l_#vthis |-> [(\"@class\": \"Error\"), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
	(v: #m)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#vthis: $$object_type)
	(#m: $$string_type)
	(vthis: $$object_type)
Preds: 
CMD: [vthis, "@extensible"] := $$t
----------------------------------
----------------------------------
--3--
TIME: 1.581940
STATE:
Heap: 
	_$l_#vthis |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
	(v: #m)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#vthis: $$object_type)
	(#m: $$string_type)
	(vthis: $$object_type)
Preds: 
CMD: goto [(v = $$undefined)] 6 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 1.582089
STATE:
Heap: 
	_$l_#vthis |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
	(v: #m)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#vthis: $$object_type)
	(#m: $$string_type)
	(vthis: $$object_type)
Preds: 
CMD: xerr := "i__toString"(v) with 7
----------------------------------
----------------------------------
--5--
TIME: 1.582525
STATE:
Heap: 
	_$l_#vthis |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
	(v: #m)
	(xerr: #m)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#vthis: $$object_type)
	(xerr: $$string_type)
	(#m: $$string_type)
	(vthis: $$object_type)
Preds: 
CMD: [xret, "message"] := {{ "d", xerr, $$t, $$f, $$t }}
----------------------------------
----------------------------------
--6--
TIME: 1.582677
STATE:
Heap: 
	_$l_#vthis |-> [(\"message\": {{ \"d\", #m, $$t, $$f, $$t }}), (\"@class\": \"Error\"), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
	(v: #m)
	(xerr: #m)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#vthis: $$object_type)
	(xerr: $$string_type)
	(#m: $$string_type)
	(vthis: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc Error_construct
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 1.583114
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.583242
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 1.583365
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 1.583462
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--8--
TIME: 1.583520
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v: $$boolean_type)
Preds: 
CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 1.583575
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 1.583861
STATE:
Heap: 
	
Store: 	
	(v: 0.)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.584276
STATE:
Heap: 
	
Store: 	
	(v: 0.)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 1.584350
STATE:
Heap: 
	
Store: 	
	(v: 0.)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 1.584423
STATE:
Heap: 
	
Store: 	
	(v: 0.)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 1.584483
STATE:
Heap: 
	
Store: 	
	(v: 0.)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
Preds: 
CMD: goto [((v = 0.) or (not (v = v)))] 19 17
----------------------------------
in the THEN branch
----------------------------------
--19--
TIME: 1.584547
STATE:
Heap: 
	
Store: 	
	(v: 0.)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--20--
TIME: 1.584582
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$number_type)
Preds: 
CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 1.584615
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of i__toBoolean
----------------------------------
--0--
TIME: 1.584793
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(! (#v == 0.))
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.584884
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(! (#v == 0.))
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 1.584971
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(! (#v == 0.))
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 1.585059
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(! (#v == 0.))
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 10 11
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 1.585129
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(! (#v == 0.))
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [((v = 0.) or (not (v = v)))] 19 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 1.585241
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(! (#v == 0.))
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--18--
TIME: 1.585279
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #v)
Pure Formulae: 	
	(! (#v == 0.))
Gamma: 	
	(xret: $$boolean_type)
	(#v: $$number_type)
Preds: 
CMD: goto 22
----------------------------------
----------------------------------
--22--
TIME: 1.585315
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: #v)
Pure Formulae: 	
	(! (#v == 0.))
Gamma: 	
	(xret: $$boolean_type)
	(#v: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toBoolean
----------------------------------
----------------------------------
Symbolic execution of TypeError_call
----------------------------------
--0--
TIME: 1.585717
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: xret := new()
----------------------------------
----------------------------------
--1--
TIME: 1.585815
STATE:
Heap: 
	_$l_4 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(xret: _$l_4)
	(v: $$undefined)
Pure Formulae: 	
	(! (_$l_4 == $lg))
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := "create_default_object"(xret, $lterr_proto, "Error", $$t) 
----------------------------------
----------------------------------
--2--
TIME: 1.597265
STATE:
Heap: 
	_$l_4 |-> [(\"@proto\": $lterr_proto), (\"@class\": \"Error\"), (\"@extensible\": $$t), (default: None)]
Store: 	
	(xret: _$l_4)
	(v: $$undefined)
Pure Formulae: 	
	(! (_$l_4 == $lg))
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := "Error_construct"($$undefined, xret, v) with 4
----------------------------------
----------------------------------
--3--
TIME: 1.597564
STATE:
Heap: 
	_$l_4 |-> [(\"@class\": \"Error\"), (\"@extensible\": $$t), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_4)
	(v: $$undefined)
Pure Formulae: 	
	(! (_$l_4 == $lg))
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc TypeError_call
----------------------------------
----------------------------------
Symbolic execution of TypeError
----------------------------------
--0--
TIME: 1.597803
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: xret := "TypeError_call"($$undefined, $$undefined, v) with 2
----------------------------------
----------------------------------
--1--
TIME: 1.599269
STATE:
Heap: 
	_$l_5 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_5)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc TypeError
----------------------------------
----------------------------------
Symbolic execution of ReferenceError_call
----------------------------------
--0--
TIME: 1.599508
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: xret := new()
----------------------------------
----------------------------------
--1--
TIME: 1.599597
STATE:
Heap: 
	_$l_6 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(xret: _$l_6)
	(v: $$undefined)
Pure Formulae: 	
	(! (_$l_6 == $lg))
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := "create_default_object"(xret, $lrferr_proto, "Error", $$t) 
----------------------------------
----------------------------------
--2--
TIME: 1.609643
STATE:
Heap: 
	_$l_6 |-> [(\"@proto\": $lrferr_proto), (\"@class\": \"Error\"), (\"@extensible\": $$t), (default: None)]
Store: 	
	(xret: _$l_6)
	(v: $$undefined)
Pure Formulae: 	
	(! (_$l_6 == $lg))
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := "Error_construct"($$undefined, xret, v) with 4
----------------------------------
----------------------------------
--3--
TIME: 1.609956
STATE:
Heap: 
	_$l_6 |-> [(\"@class\": \"Error\"), (\"@extensible\": $$t), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_6)
	(v: $$undefined)
Pure Formulae: 	
	(! (_$l_6 == $lg))
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc ReferenceError_call
----------------------------------
----------------------------------
Symbolic execution of ReferenceError
----------------------------------
--0--
TIME: 1.612830
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: xret := "ReferenceError_call"($$undefined, $$undefined, v) with 2
----------------------------------
----------------------------------
--1--
TIME: 1.613055
STATE:
Heap: 
	_$l_7 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_7)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc ReferenceError
----------------------------------
----------------------------------
Symbolic execution of SyntaxError_call
----------------------------------
--0--
TIME: 1.613371
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: xret := new()
----------------------------------
----------------------------------
--1--
TIME: 1.613457
STATE:
Heap: 
	_$l_8 |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(xret: _$l_8)
	(v: $$undefined)
Pure Formulae: 	
	(! (_$l_8 == $lg))
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := "create_default_object"(xret, $lserr_proto, "Error", $$t) 
----------------------------------
----------------------------------
--2--
TIME: 1.623315
STATE:
Heap: 
	_$l_8 |-> [(\"@proto\": $lserr_proto), (\"@class\": \"Error\"), (\"@extensible\": $$t), (default: None)]
Store: 	
	(xret: _$l_8)
	(v: $$undefined)
Pure Formulae: 	
	(! (_$l_8 == $lg))
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := "Error_construct"($$undefined, xret, v) with 4
----------------------------------
----------------------------------
--3--
TIME: 1.623601
STATE:
Heap: 
	_$l_8 |-> [(\"@class\": \"Error\"), (\"@extensible\": $$t), (\"@proto\": $lserr_proto), (default: None)]
Store: 	
	(xret: _$l_8)
	(v: $$undefined)
Pure Formulae: 	
	(! (_$l_8 == $lg))
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc SyntaxError_call
----------------------------------
----------------------------------
Symbolic execution of SyntaxError
----------------------------------
--0--
TIME: 1.625653
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: xret := "SyntaxError_call"($$undefined, $$undefined, v) with 2
----------------------------------
----------------------------------
--1--
TIME: 1.625867
STATE:
Heap: 
	_$l_9 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lserr_proto), (default: None)]
Store: 	
	(xret: _$l_9)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc SyntaxError
----------------------------------
----------------------------------
Symbolic execution of setupInitialHeap
----------------------------------
--0--
TIME: 1.626039
STATE:
Heap: 
	$lg |-> [(\"@extensible\": None), (\"@proto\": None), (\"@class\": None), (default: $$unknown)]
	$lerr |-> [(default: None)]
	$lfun_proto |-> [(default: None)]
	$lerr_proto |-> [(default: None)]
	$lobj_proto |-> [(default: None)]
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 
CMD: xret := "create_default_object"($lg, $lobj_proto, "Object", $$t) 
----------------------------------
----------------------------------
--1--
TIME: 1.626283
STATE:
Heap: 
	$lerr_proto |-> [(default: None)]
	$lobj_proto |-> [(default: None)]
	$lg |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	$lerr |-> [(default: None)]
	$lfun_proto |-> [(default: None)]
Store: 	
	(xret: $lg)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
CMD: xret := "create_default_object"($lobj_proto, $$null, "Object", $$t) 
----------------------------------
----------------------------------
--2--
TIME: 1.626537
STATE:
Heap: 
	$lerr_proto |-> [(default: None)]
	$lobj_proto |-> [(\"@proto\": $$null), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lg |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	$lerr |-> [(default: None)]
	$lfun_proto |-> [(default: None)]
Store: 	
	(xret: $lobj_proto)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
CMD: xret := "create_object_with_call_construct"($lfun_proto, "FP_default", $$empty, 0.) 
----------------------------------
----------------------------------
--3--
TIME: 1.628100
STATE:
Heap: 
	$lerr_proto |-> [(default: None)]
	$lobj_proto |-> [(\"@proto\": $$null), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lg |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	$lerr |-> [(default: None)]
	$lfun_proto |-> [(\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@call\": \"FP_default\"), (default: None)]
Store: 	
	(xret: $lfun_proto)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
CMD: [$lfun_proto, "@proto"] := $lobj_proto
----------------------------------
----------------------------------
--4--
TIME: 1.628185
STATE:
Heap: 
	$lerr_proto |-> [(default: None)]
	$lobj_proto |-> [(\"@proto\": $$null), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lg |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	$lerr |-> [(default: None)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@call\": \"FP_default\"), (default: None)]
Store: 	
	(xret: $lfun_proto)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
CMD: xret := "create_object_with_call_construct"($lerr, "Error_call", "Error_construct", 1.) 
----------------------------------
----------------------------------
--5--
TIME: 1.628572
STATE:
Heap: 
	$lerr_proto |-> [(default: None)]
	$lobj_proto |-> [(\"@proto\": $$null), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lg |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
	$lerr |-> [(\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@call\": \"Error_call\"), (\"@construct\": \"Error_construct\"), (default: None)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@call\": \"FP_default\"), (default: None)]
Store: 	
	(xret: $lerr)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
CMD: [$lg, "Error"] := {{ "d", $lerr, $$t, $$f, $$t }}
----------------------------------
----------------------------------
--6--
TIME: 1.628674
STATE:
Heap: 
	$lerr_proto |-> [(default: None)]
	$lobj_proto |-> [(\"@proto\": $$null), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (\"@proto\": $lobj_proto), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lerr |-> [(\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@call\": \"Error_call\"), (\"@construct\": \"Error_construct\"), (default: None)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@call\": \"FP_default\"), (default: None)]
Store: 	
	(xret: $lerr)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
CMD: [$lerr, "prototype"] := {{ "d", $lerr_proto, $$f, $$f, $$f }}
----------------------------------
----------------------------------
--7--
TIME: 1.628763
STATE:
Heap: 
	$lerr_proto |-> [(default: None)]
	$lobj_proto |-> [(\"@proto\": $$null), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (\"@proto\": $lobj_proto), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lerr |-> [(\"prototype\": {{ \"d\", $lerr_proto, $$f, $$f, $$f }}), (\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: None)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@call\": \"FP_default\"), (default: None)]
Store: 	
	(xret: $lerr)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
CMD: xret := "create_default_object"($lerr_proto, $lobj_proto, "Error", $$t) 
----------------------------------
----------------------------------
--8--
TIME: 1.629084
STATE:
Heap: 
	$lerr_proto |-> [(\"@proto\": $lobj_proto), (\"@class\": \"Error\"), (\"@extensible\": $$t), (default: None)]
	$lobj_proto |-> [(\"@proto\": $$null), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (\"@proto\": $lobj_proto), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lerr |-> [(\"prototype\": {{ \"d\", $lerr_proto, $$f, $$f, $$f }}), (\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: None)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@call\": \"FP_default\"), (default: None)]
Store: 	
	(xret: $lerr_proto)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
CMD: [$lerr_proto, "message"] := {{ "d", "", $$t, $$f, $$t }}
----------------------------------
----------------------------------
--9--
TIME: 1.629174
STATE:
Heap: 
	$lerr_proto |-> [(\"message\": {{ \"d\", \"\", $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lobj_proto), (default: None)]
	$lobj_proto |-> [(\"@proto\": $$null), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (\"@proto\": $lobj_proto), (\"@class\": \"Object\"), (\"@extensible\": $$t), (default: None)]
	$lerr |-> [(\"prototype\": {{ \"d\", $lerr_proto, $$f, $$f, $$f }}), (\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: None)]
	$lfun_proto |-> [(\"@proto\": $lobj_proto), (\"@class\": \"Function\"), (\"@extensible\": $$t), (\"@scope\": $$empty), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@call\": \"FP_default\"), (default: None)]
Store: 	
	(xret: $lerr_proto)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
CMD: xret := $$empty
----------------------------------
Verified one spec of proc setupInitialHeap
----------------------------------
----------------------------------
Symbolic execution of i__strictEquality
----------------------------------
--0--
TIME: 1.629839
STATE:
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
----------------------------------
--1--
TIME: 1.629898
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__strictEquality
----------------------------------
----------------------------------
Symbolic execution of i__strictEquality
----------------------------------
--0--
TIME: 1.641048
STATE:
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
Gamma: 	
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
----------------------------------
--1--
TIME: 1.641126
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__strictEquality
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 1.654425
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 1.654554
STATE:
Heap: 
	
Store: 	
	(tv: $$undefined_type)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(tv: $$type_type)
	(v: $$undefined_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 1.654708
STATE:
Heap: 
	
Store: 	
	(tv: $$undefined_type)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(tv: $$type_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--3--
TIME: 1.654801
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: $$undefined_type)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
	(v: $$undefined_type)
Preds: 
CMD: goto 5
----------------------------------
----------------------------------
--5--
TIME: 1.654932
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: $$undefined_type)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 1.655180
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 1.655287
STATE:
Heap: 
	
Store: 	
	(tv: $$null_type)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(tv: $$type_type)
	(v: $$null_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 1.655398
STATE:
Heap: 
	
Store: 	
	(tv: $$null_type)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(tv: $$type_type)
	(v: $$null_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--3--
TIME: 1.655487
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: $$null_type)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
	(v: $$null_type)
Preds: 
CMD: goto 5
----------------------------------
----------------------------------
--5--
TIME: 1.656145
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(tv: $$null_type)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(tv: $$type_type)
	(v: $$null_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 1.656319
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 1.656359
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$number_type)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(tv: $$type_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 1.656466
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$number_type)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(tv: $$type_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--3--
TIME: 1.656503
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_v)
	(tv: $$number_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$number_type)
	(tv: $$type_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: goto 5
----------------------------------
----------------------------------
--5--
TIME: 1.656536
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_v)
	(tv: $$number_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$number_type)
	(tv: $$type_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 1.656696
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 1.656735
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$boolean_type)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(tv: $$type_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 1.656795
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$boolean_type)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(tv: $$type_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--3--
TIME: 1.656829
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_v)
	(tv: $$boolean_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$boolean_type)
	(tv: $$type_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: goto 5
----------------------------------
----------------------------------
--5--
TIME: 1.656882
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_v)
	(tv: $$boolean_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$boolean_type)
	(tv: $$type_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 1.657025
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 1.657062
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$string_type)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(tv: $$type_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 1.657118
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$string_type)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(tv: $$type_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--3--
TIME: 1.657149
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_v)
	(tv: $$string_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
	(tv: $$type_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: goto 5
----------------------------------
----------------------------------
--5--
TIME: 1.657181
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v: _lvar_v)
	(tv: $$string_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$string_type)
	(tv: $$type_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__isPrimitive
----------------------------------
--0--
TIME: 1.659995
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(_lvar_v: $$object_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 1.660038
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$object_type)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(tv: $$type_type)
	(_lvar_v: $$object_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 1.660114
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$object_type)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(tv: $$type_type)
	(_lvar_v: $$object_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--5--
TIME: 1.660146
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(v: _lvar_v)
	(tv: $$object_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v: $$object_type)
	(tv: $$type_type)
	(_lvar_v: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__toNumber
----------------------------------
--0--
TIME: 1.660304
STATE:
Heap: 
	
Store: 	
	(v: $$t)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.660370
STATE:
Heap: 
	
Store: 	
	(v: $$t)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 1.660445
STATE:
Heap: 
	
Store: 	
	(v: $$t)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 12
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 1.660496
STATE:
Heap: 
	
Store: 	
	(v: $$t)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 
CMD: goto [(v = $$t)] 8 10
----------------------------------
in the THEN branch
----------------------------------
--8--
TIME: 1.660546
STATE:
Heap: 
	
Store: 	
	(v: $$t)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 
CMD: xret := 1.
----------------------------------
----------------------------------
--9--
TIME: 1.660576
STATE:
Heap: 
	
Store: 	
	(xret: 1.)
	(v: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(v: $$boolean_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 1.660605
STATE:
Heap: 
	
Store: 	
	(xret: 1.)
	(v: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(v: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toNumber
----------------------------------
----------------------------------
Symbolic execution of i__toNumber
----------------------------------
--0--
TIME: 1.660750
STATE:
Heap: 
	
Store: 	
	(v: $$f)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.660814
STATE:
Heap: 
	
Store: 	
	(v: $$f)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 1.660878
STATE:
Heap: 
	
Store: 	
	(v: $$f)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 12
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 1.660928
STATE:
Heap: 
	
Store: 	
	(v: $$f)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 
CMD: goto [(v = $$t)] 8 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 1.660992
STATE:
Heap: 
	
Store: 	
	(v: $$f)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 
CMD: xret := 0.
----------------------------------
----------------------------------
--11--
TIME: 1.661110
STATE:
Heap: 
	
Store: 	
	(xret: 0.)
	(v: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(v: $$boolean_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 1.661140
STATE:
Heap: 
	
Store: 	
	(xret: 0.)
	(v: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(v: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toNumber
----------------------------------
----------------------------------
Symbolic execution of i__toNumber
----------------------------------
--0--
TIME: 1.661283
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.661349
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 1.661412
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 1.661478
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 13 15
----------------------------------
in the THEN branch
----------------------------------
--13--
TIME: 1.661527
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--14--
TIME: 1.661562
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$number_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 1.661591
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toNumber
----------------------------------
----------------------------------
Symbolic execution of i__toNumber
----------------------------------
--0--
TIME: 1.661741
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.661806
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 1.661870
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 1.661934
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 13 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 1.661998
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$string_type)] 16 18
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 1.662048
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: xret := (string_to_num v)
----------------------------------
----------------------------------
--17--
TIME: 1.662079
STATE:
Heap: 
	
Store: 	
	(xret: (string_to_num #v))
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$string_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 1.662108
STATE:
Heap: 
	
Store: 	
	(xret: (string_to_num #v))
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toNumber
----------------------------------
----------------------------------
Symbolic execution of i__toPrimitive
----------------------------------
--0--
TIME: 1.662528
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--1--
TIME: 1.662614
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$undefined_type)
	(v: $$undefined_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--2--
TIME: 1.662706
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(tv: $$undefined_type)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$undefined_type)
	(tv: $$type_type)
	(v: $$undefined_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 9 3
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 1.662816
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(tv: $$undefined_type)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$undefined_type)
	(tv: $$type_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__toPrimitive
----------------------------------
--0--
TIME: 1.663056
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--1--
TIME: 1.663140
STATE:
Heap: 
	
Store: 	
	(xret: $$null)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$null_type)
	(v: $$null_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--2--
TIME: 1.663229
STATE:
Heap: 
	
Store: 	
	(xret: $$null)
	(tv: $$null_type)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$null_type)
	(tv: $$type_type)
	(v: $$null_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 9 3
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 1.663334
STATE:
Heap: 
	
Store: 	
	(xret: $$null)
	(tv: $$null_type)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$null_type)
	(tv: $$type_type)
	(v: $$null_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__toPrimitive
----------------------------------
--0--
TIME: 1.663502
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--1--
TIME: 1.663533
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$number_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--2--
TIME: 1.663569
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
	(tv: $$number_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$number_type)
	(tv: $$type_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 9 3
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 1.663627
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
	(tv: $$number_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$number_type)
	(tv: $$type_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__toPrimitive
----------------------------------
--0--
TIME: 1.663771
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--1--
TIME: 1.663802
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v: $$boolean_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--2--
TIME: 1.663838
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
	(tv: $$boolean_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v: $$boolean_type)
	(tv: $$type_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 9 3
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 1.664112
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
	(tv: $$boolean_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v: $$boolean_type)
	(tv: $$type_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__toPrimitive
----------------------------------
--0--
TIME: 1.664255
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--1--
TIME: 1.664290
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(#v: $$string_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--2--
TIME: 1.664327
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
	(tv: $$string_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(#v: $$string_type)
	(tv: $$type_type)
Preds: 
CMD: goto [(((((v = $$undefined) or (v = $$null)) or (typeOf(v) = $$boolean_type)) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type))] 9 3
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 1.664385
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
	(tv: $$string_type)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(#v: $$string_type)
	(tv: $$type_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toPrimitive
----------------------------------
----------------------------------
Symbolic execution of i__abstractComparison
----------------------------------
--0--
TIME: 1.664548
STATE:
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((leftFirst = $$empty) or (leftFirst = $$t))] 1 6
----------------------------------
I found the model: 

(define-fun |#leftFirst| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#v1| () Extended_JSIL_Literal
  (Elem (Num (- 1.0))))
(define-fun |#v2| () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Num 0.0))) NumberType
  (ite (= x!0 (Elem (Num (- 1.0)))) NumberType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#leftFirst| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#v1| () Extended_JSIL_Literal
  (Elem (Num (- 1.0))))
(define-fun |#v2| () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Num 0.0))) NumberType
  (ite (= x!0 (Elem (Num (- 1.0)))) NumberType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
Could NOT determine the branch.
----------------------------------
--1--
TIME: 1.692961
STATE:
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v1, "Number") with 27
----------------------------------
----------------------------------
--2--
TIME: 1.693371
STATE:
Heap: 
	
Store: 	
	(xret: #v1)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: px := xret
----------------------------------
----------------------------------
--3--
TIME: 1.697226
STATE:
Heap: 
	
Store: 	
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v2, "Number") with 27
----------------------------------
----------------------------------
--4--
TIME: 1.697678
STATE:
Heap: 
	
Store: 	
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: py := xret
----------------------------------
----------------------------------
--5--
TIME: 1.697795
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 1.697898
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((typeOf(px) = $$string_type) and (typeOf(py) = $$string_type))] 11 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 1.698063
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(px) with 27
----------------------------------
----------------------------------
--14--
TIME: 1.698443
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: nx := xret
----------------------------------
----------------------------------
--15--
TIME: 1.698667
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(py) with 27
----------------------------------
----------------------------------
--16--
TIME: 1.699027
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: ny := xret
----------------------------------
----------------------------------
--17--
TIME: 1.699131
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((not (nx = nx)) or (not (ny = ny)))] 21 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 1.699298
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [(nx = ny)] 25 19
----------------------------------
I found the model: 

(define-fun |#v1| () Extended_JSIL_Literal
  (Elem (Num (- 1.0))))
(define-fun |#v2| () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Num 0.0))) NumberType
  (ite (= x!0 (Elem (Num (- 1.0)))) NumberType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
in the ELSE branch
----------------------------------
--19--
TIME: 1.723818
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := (nx < ny)
----------------------------------
----------------------------------
--20--
TIME: 1.723923
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: (#v1 < #v2))
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto 26
----------------------------------
----------------------------------
--26--
TIME: 1.726766
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: (#v1 < #v2))
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__abstractComparison
----------------------------------
--6--
TIME: 1.727035
STATE:
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v2, "Number") with 27
----------------------------------
----------------------------------
--7--
TIME: 1.738404
STATE:
Heap: 
	
Store: 	
	(xret: #v2)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: py := xret
----------------------------------
----------------------------------
--8--
TIME: 1.738497
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v1, "Number") with 27
----------------------------------
----------------------------------
--9--
TIME: 1.738891
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: px := xret
----------------------------------
----------------------------------
--10--
TIME: 1.738970
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((typeOf(px) = $$string_type) and (typeOf(py) = $$string_type))] 11 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 1.739102
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(px) with 27
----------------------------------
----------------------------------
--14--
TIME: 1.739435
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: nx := xret
----------------------------------
----------------------------------
--15--
TIME: 1.739513
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(py) with 27
----------------------------------
----------------------------------
--16--
TIME: 1.741030
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: ny := xret
----------------------------------
----------------------------------
--17--
TIME: 1.741122
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((not (nx = nx)) or (not (ny = ny)))] 21 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 1.741272
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [(nx = ny)] 25 19
----------------------------------
I found the model: 

(define-fun |#leftFirst| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#v1| () Extended_JSIL_Literal
  (Elem (Num (- 1.0))))
(define-fun |#v2| () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Num 0.0))) NumberType
  (ite (= x!0 (Elem (Num (- 1.0)))) NumberType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
in the ELSE branch
----------------------------------
--19--
TIME: 1.766698
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := (nx < ny)
----------------------------------
----------------------------------
--20--
TIME: 1.766794
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: (#v1 < #v2))
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto 26
----------------------------------
----------------------------------
--26--
TIME: 1.766890
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: (#v1 < #v2))
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__abstractComparison
----------------------------------
----------------------------------
Symbolic execution of i__abstractComparison
----------------------------------
--0--
TIME: 1.767368
STATE:
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((leftFirst = $$empty) or (leftFirst = $$t))] 1 6
----------------------------------
I found the model: 

(define-fun |#leftFirst| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#leftFirst| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
Could NOT determine the branch.
----------------------------------
--1--
TIME: 1.792541
STATE:
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v1, "Number") with 27
----------------------------------
----------------------------------
--2--
TIME: 1.792915
STATE:
Heap: 
	
Store: 	
	(xret: #v1)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: px := xret
----------------------------------
----------------------------------
--3--
TIME: 1.793017
STATE:
Heap: 
	
Store: 	
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v2, "Number") with 27
----------------------------------
----------------------------------
--4--
TIME: 1.801534
STATE:
Heap: 
	
Store: 	
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: py := xret
----------------------------------
----------------------------------
--5--
TIME: 1.801692
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 1.801807
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((typeOf(px) = $$string_type) and (typeOf(py) = $$string_type))] 11 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 1.801993
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(px) with 27
----------------------------------
----------------------------------
--14--
TIME: 1.802385
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: nx := xret
----------------------------------
----------------------------------
--15--
TIME: 1.802498
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(py) with 27
----------------------------------
----------------------------------
--16--
TIME: 1.802898
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: ny := xret
----------------------------------
----------------------------------
--17--
TIME: 1.803015
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((not (nx = nx)) or (not (ny = ny)))] 21 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 1.803194
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [(nx = ny)] 25 19
----------------------------------
in the THEN branch
----------------------------------
--25--
TIME: 1.803338
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--26--
TIME: 1.803449
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: $$f)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__abstractComparison
----------------------------------
--6--
TIME: 1.803747
STATE:
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v2, "Number") with 27
----------------------------------
----------------------------------
--7--
TIME: 1.814930
STATE:
Heap: 
	
Store: 	
	(xret: #v2)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: py := xret
----------------------------------
----------------------------------
--8--
TIME: 1.815044
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v1, "Number") with 27
----------------------------------
----------------------------------
--9--
TIME: 1.815457
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: px := xret
----------------------------------
----------------------------------
--10--
TIME: 1.815553
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((typeOf(px) = $$string_type) and (typeOf(py) = $$string_type))] 11 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 1.815701
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(px) with 27
----------------------------------
----------------------------------
--14--
TIME: 1.816132
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: nx := xret
----------------------------------
----------------------------------
--15--
TIME: 1.816237
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(py) with 27
----------------------------------
----------------------------------
--16--
TIME: 1.816573
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: ny := xret
----------------------------------
----------------------------------
--17--
TIME: 1.816685
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((not (nx = nx)) or (not (ny = ny)))] 21 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 1.817117
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [(nx = ny)] 25 19
----------------------------------
in the THEN branch
----------------------------------
--25--
TIME: 1.817448
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--26--
TIME: 1.817702
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: $$f)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#leftFirst == $$t))
	(#v1 == #v2)
Gamma: 	
	(py: $$number_type)
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__abstractComparison
----------------------------------
----------------------------------
Symbolic execution of i__abstractComparison
----------------------------------
--0--
TIME: 1.818258
STATE:
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((leftFirst = $$empty) or (leftFirst = $$t))] 1 6
----------------------------------
I found the model: 

(define-fun |#leftFirst| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#v1| () Extended_JSIL_Literal
  (Elem (Num 1.0)))
(define-fun |#v2| () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Num 0.0))) NumberType
  (ite (= x!0 (Elem (Num 1.0))) NumberType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#leftFirst| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#v1| () Extended_JSIL_Literal
  (Elem (Num 1.0)))
(define-fun |#v2| () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Num 0.0))) NumberType
  (ite (= x!0 (Elem (Num 1.0))) NumberType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
Could NOT determine the branch.
----------------------------------
--1--
TIME: 1.848057
STATE:
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v1, "Number") with 27
----------------------------------
----------------------------------
--2--
TIME: 1.848467
STATE:
Heap: 
	
Store: 	
	(xret: #v1)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: px := xret
----------------------------------
----------------------------------
--3--
TIME: 1.848567
STATE:
Heap: 
	
Store: 	
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v2, "Number") with 27
----------------------------------
----------------------------------
--4--
TIME: 1.849001
STATE:
Heap: 
	
Store: 	
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: py := xret
----------------------------------
----------------------------------
--5--
TIME: 1.849114
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 1.849215
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((typeOf(px) = $$string_type) and (typeOf(py) = $$string_type))] 11 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 1.849376
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(px) with 27
----------------------------------
----------------------------------
--14--
TIME: 1.849737
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: nx := xret
----------------------------------
----------------------------------
--15--
TIME: 1.853000
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(py) with 27
----------------------------------
----------------------------------
--16--
TIME: 1.853416
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: ny := xret
----------------------------------
----------------------------------
--17--
TIME: 1.853523
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((not (nx = nx)) or (not (ny = ny)))] 21 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 1.853706
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [(nx = ny)] 25 19
----------------------------------
I found the model: 

(define-fun |#v1| () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun |#v2| () Extended_JSIL_Literal
  (Elem (Num (- 1.0))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Num (- 1.0)))) NumberType
  (ite (= x!0 (Elem (Num 0.0))) NumberType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
in the ELSE branch
----------------------------------
--19--
TIME: 1.877210
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := (nx < ny)
----------------------------------
----------------------------------
--20--
TIME: 1.877313
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: (#v1 < #v2))
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto 26
----------------------------------
----------------------------------
--26--
TIME: 1.890103
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: (#v1 < #v2))
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(#leftFirst == $$t)
Gamma: 	
	(py: $$number_type)
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__abstractComparison
----------------------------------
--6--
TIME: 1.901905
STATE:
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v2, "Number") with 27
----------------------------------
----------------------------------
--7--
TIME: 1.912409
STATE:
Heap: 
	
Store: 	
	(xret: #v2)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: py := xret
----------------------------------
----------------------------------
--8--
TIME: 1.912503
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toPrimitive"(v1, "Number") with 27
----------------------------------
----------------------------------
--9--
TIME: 1.913129
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: px := xret
----------------------------------
----------------------------------
--10--
TIME: 1.913208
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((typeOf(px) = $$string_type) and (typeOf(py) = $$string_type))] 11 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 1.913340
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(px) with 27
----------------------------------
----------------------------------
--14--
TIME: 1.913648
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: nx := xret
----------------------------------
----------------------------------
--15--
TIME: 1.913726
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v1)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := "i__toNumber"(py) with 27
----------------------------------
----------------------------------
--16--
TIME: 1.916370
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: ny := xret
----------------------------------
----------------------------------
--17--
TIME: 1.916471
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [((not (nx = nx)) or (not (ny = ny)))] 21 18
----------------------------------
in the ELSE branch
----------------------------------
--18--
TIME: 1.916626
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto [(nx = ny)] 25 19
----------------------------------
I found the model: 

(define-fun |#leftFirst| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#v1| () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun |#v2| () Extended_JSIL_Literal
  (Elem (Num (- 1.0))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Num (- 1.0)))) NumberType
  (ite (= x!0 (Elem (Num 0.0))) NumberType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
in the ELSE branch
----------------------------------
--19--
TIME: 1.942436
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: #v2)
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$number_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: xret := (nx < ny)
----------------------------------
----------------------------------
--20--
TIME: 1.942526
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: (#v1 < #v2))
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: goto 26
----------------------------------
----------------------------------
--26--
TIME: 1.942602
STATE:
Heap: 
	
Store: 	
	(py: #v2)
	(xret: (#v1 < #v2))
	(leftFirst: #leftFirst)
	(px: #v1)
	(v2: #v2)
	(nx: #v1)
	(ny: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
	(! (#leftFirst == $$t))
Gamma: 	
	(py: $$number_type)
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(px: $$number_type)
	(nx: $$number_type)
	(ny: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__abstractComparison
----------------------------------
----------------------------------
Symbolic execution of i__abstractEquality
----------------------------------
--0--
TIME: 1.954568
STATE:
Heap: 
	
Store: 	
	(v1: $$null)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$null_type)
	(v2: $$null_type)
Preds: 
CMD: tv1 := typeOf(v1)
----------------------------------
----------------------------------
--1--
TIME: 1.954646
STATE:
Heap: 
	
Store: 	
	(v1: $$null)
	(tv1: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$null_type)
	(tv1: $$type_type)
	(v2: $$null_type)
Preds: 
CMD: tv2 := typeOf(v2)
----------------------------------
----------------------------------
--2--
TIME: 1.954724
STATE:
Heap: 
	
Store: 	
	(v1: $$null)
	(tv1: $$null_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$null_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
Preds: 
CMD: goto [(tv1 = tv2)] 3 6
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 1.954829
STATE:
Heap: 
	
Store: 	
	(v1: $$null)
	(tv1: $$null_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$null_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
Preds: 
CMD: goto [((((((tv1 = $$undefined_type) or (tv1 = $$null_type)) or (tv1 = $$boolean_type)) or (tv1 = $$number_type)) or (tv1 = $$string_type)) or (tv1 = $$object_type))] 4 29
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 1.954929
STATE:
Heap: 
	
Store: 	
	(v1: $$null)
	(tv1: $$null_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$null_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
----------------------------------
--5--
TIME: 1.955009
STATE:
Heap: 
	
Store: 	
	(v1: $$null)
	(xret: $$t)
	(tv1: $$null_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$null_type)
	(tv1: $$type_type)
	(xret: $$boolean_type)
	(tv2: $$type_type)
	(v2: $$null_type)
Preds: 
CMD: goto 31
----------------------------------
----------------------------------
--31--
TIME: 1.955085
STATE:
Heap: 
	
Store: 	
	(v1: $$null)
	(xret: $$t)
	(tv1: $$null_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$null_type)
	(xret: $$boolean_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__abstractEquality
----------------------------------
----------------------------------
Symbolic execution of i__abstractEquality
----------------------------------
--0--
TIME: 1.955301
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: tv1 := typeOf(v1)
----------------------------------
----------------------------------
--1--
TIME: 1.955376
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(tv1: $$object_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(tv1: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: tv2 := typeOf(v2)
----------------------------------
----------------------------------
--2--
TIME: 1.955454
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(tv1: $$object_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: goto [(tv1 = tv2)] 3 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 1.955563
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(tv1: $$object_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: goto [(((tv1 = $$undefined_type) and (tv2 = $$null_type)) or ((tv1 = $$null_type) and (tv2 = $$undefined_type)))] 25 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 1.955670
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(tv1: $$object_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: goto [((tv1 = $$number_type) and (tv2 = $$string_type))] 8 11
----------------------------------
in the ELSE branch
----------------------------------
--11--
TIME: 1.955774
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(tv1: $$object_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: goto [((tv1 = $$string_type) and (tv2 = $$number_type))] 12 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 1.960248
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(tv1: $$object_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: goto [(tv1 = $$boolean_type)] 12 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 1.960361
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(tv1: $$object_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: goto [(tv2 = $$boolean_type)] 8 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 1.960467
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(tv1: $$object_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: goto [(((tv1 = $$number_type) or (tv1 = $$string_type)) and (tv2 = $$object_type))] 18 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 1.960575
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(tv1: $$object_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: goto [((tv1 = $$object_type) and ((tv2 = $$number_type) or (tv2 = $$string_type)))] 22 27
----------------------------------
in the ELSE branch
----------------------------------
--27--
TIME: 1.960690
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(tv1: $$object_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--28--
TIME: 1.960770
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(xret: $$f)
	(tv1: $$object_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(tv1: $$type_type)
	(xret: $$boolean_type)
	(tv2: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: goto 31
----------------------------------
----------------------------------
--31--
TIME: 1.960846
STATE:
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(xret: $$f)
	(tv1: $$object_type)
	(tv2: $$null_type)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(xret: $$boolean_type)
	(tv1: $$type_type)
	(tv2: $$type_type)
	(v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__abstractEquality
----------------------------------
----------------------------------
Symbolic execution of i__toInteger
----------------------------------
--0--
TIME: 1.961030
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: xret := "i__toNumber"(v) with 3
----------------------------------
----------------------------------
--1--
TIME: 1.961387
STATE:
Heap: 
	
Store: 	
	(xret: (string_to_num #v))
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$string_type)
Preds: 
CMD: xret := (num_to_int xret)
----------------------------------
----------------------------------
--2--
TIME: 1.961555
STATE:
Heap: 
	
Store: 	
	(xret: (num_to_int (string_to_num #v)))
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toInteger
----------------------------------
----------------------------------
Symbolic execution of i__toString
----------------------------------
--0--
TIME: 1.965627
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.965711
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 1.965786
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 1.965861
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 13 15
----------------------------------
in the THEN branch
----------------------------------
--13--
TIME: 1.965920
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: xret := (num_to_string v)
----------------------------------
----------------------------------
--14--
TIME: 1.965957
STATE:
Heap: 
	
Store: 	
	(xret: (num_to_string #v))
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(#v: $$number_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 1.965990
STATE:
Heap: 
	
Store: 	
	(xret: (num_to_string #v))
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(#v: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toString
----------------------------------
----------------------------------
Symbolic execution of i__toString
----------------------------------
--0--
TIME: 1.966172
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: goto [(v = $$undefined)] 1 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.966246
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: goto [(v = $$null)] 4 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 1.966319
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$boolean_type)] 7 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 1.966393
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$number_type)] 13 15
----------------------------------
in the ELSE branch
----------------------------------
--15--
TIME: 1.966467
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$string_type)] 16 18
----------------------------------
in the THEN branch
----------------------------------
--16--
TIME: 1.966574
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--17--
TIME: 1.966612
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(#v: $$string_type)
Preds: 
CMD: goto 24
----------------------------------
----------------------------------
--24--
TIME: 1.966645
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(#v: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toString
----------------------------------
----------------------------------
Symbolic execution of i__isDataDescriptor
----------------------------------
--0--
TIME: 1.966864
STATE:
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 1.967008
STATE:
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 1.967088
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isDataDescriptor
----------------------------------
--0--
TIME: 1.967262
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_18, #dwrit_18, #denum_18, #dconf_18 }})
Pure Formulae: 	
	(! (#dval_18 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(#dconf_18: $$boolean_type)
	(#denum_18: $$boolean_type)
	(#dwrit_18: $$boolean_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 1.967359
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_18, #dwrit_18, #denum_18, #dconf_18 }})
Pure Formulae: 	
	(! (#dval_18 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(#dconf_18: $$boolean_type)
	(#denum_18: $$boolean_type)
	(#dwrit_18: $$boolean_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 1.967409
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_18, #dwrit_18, #denum_18, #dconf_18 }})
	(d: \"d\")
Pure Formulae: 	
	(! (#dval_18 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
	(#dconf_18: $$boolean_type)
	(#denum_18: $$boolean_type)
	(#dwrit_18: $$boolean_type)
Preds: 
CMD: goto [(d = "d")] 7 3
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 1.967495
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_18, #dwrit_18, #denum_18, #dconf_18 }})
	(d: \"d\")
Pure Formulae: 	
	(! (#dval_18 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
	(#dconf_18: $$boolean_type)
	(#denum_18: $$boolean_type)
	(#dwrit_18: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 1.967545
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: {{ \"d\", #dval_18, #dwrit_18, #denum_18, #dconf_18 }})
	(d: \"d\")
Pure Formulae: 	
	(! (#dval_18 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(d: $$string_type)
	(#dconf_18: $$boolean_type)
	(#denum_18: $$boolean_type)
	(#dwrit_18: $$boolean_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 1.967590
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: {{ \"d\", #dval_18, #dwrit_18, #denum_18, #dconf_18 }})
	(d: \"d\")
Pure Formulae: 	
	(! (#dval_18 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(d: $$string_type)
	(#dconf_18: $$boolean_type)
	(#denum_18: $$boolean_type)
	(#dwrit_18: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isDataDescriptor
----------------------------------
--0--
TIME: 1.967855
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_5, #gconf_5, $$empty, $$empty, #gget_5, #gset_5 }})
Pure Formulae: 	
	(#gval_5 == $$empty)
	(#gwrit_5 == $$empty)
Gamma: 	
	(#gval_5: $$empty_type)
	(#gwrit_5: $$empty_type)
	(desc: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 1.968016
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_5, #gconf_5, $$empty, $$empty, #gget_5, #gset_5 }})
Pure Formulae: 	
	(#gval_5 == $$empty)
	(#gwrit_5 == $$empty)
Gamma: 	
	(#gval_5: $$empty_type)
	(#gwrit_5: $$empty_type)
	(desc: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 1.968491
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_5, #gconf_5, $$empty, $$empty, #gget_5, #gset_5 }})
	(d: \"g\")
Pure Formulae: 	
	(#gval_5 == $$empty)
	(#gwrit_5 == $$empty)
Gamma: 	
	(#gval_5: $$empty_type)
	(#gwrit_5: $$empty_type)
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [(d = "d")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.968656
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_5, #gconf_5, $$empty, $$empty, #gget_5, #gset_5 }})
	(d: \"g\")
Pure Formulae: 	
	(#gval_5 == $$empty)
	(#gwrit_5 == $$empty)
Gamma: 	
	(#gval_5: $$empty_type)
	(#gwrit_5: $$empty_type)
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 1.968789
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_5, #gconf_5, $$empty, $$empty, #gget_5, #gset_5 }})
	(d: \"g\")
Pure Formulae: 	
	(#gval_5 == $$empty)
	(#gwrit_5 == $$empty)
Gamma: 	
	(#gval_5: $$empty_type)
	(#gwrit_5: $$empty_type)
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--5--
TIME: 1.968893
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_5, #gconf_5, $$empty, $$empty, #gget_5, #gset_5 }})
	(d: \"g\")
	(v: $$empty)
Pure Formulae: 	
	(#gval_5 == $$empty)
	(#gwrit_5 == $$empty)
Gamma: 	
	(#gval_5: $$empty_type)
	(#gwrit_5: $$empty_type)
	(desc: $$list_type)
	(d: $$string_type)
	(v: $$empty_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--6--
TIME: 1.969003
STATE:
Heap: 
	
Store: 	
	(w: $$empty)
	(desc: {{ \"g\", #genum_5, #gconf_5, $$empty, $$empty, #gget_5, #gset_5 }})
	(d: \"g\")
	(v: $$empty)
Pure Formulae: 	
	(#gval_5 == $$empty)
	(#gwrit_5 == $$empty)
Gamma: 	
	(#gval_5: $$empty_type)
	(w: $$empty_type)
	(#gwrit_5: $$empty_type)
	(desc: $$list_type)
	(d: $$string_type)
	(v: $$empty_type)
Preds: 
CMD: goto [((v = $$empty) and (w = $$empty))] 9 7
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 1.969154
STATE:
Heap: 
	
Store: 	
	(w: $$empty)
	(desc: {{ \"g\", #genum_5, #gconf_5, $$empty, $$empty, #gget_5, #gset_5 }})
	(d: \"g\")
	(v: $$empty)
Pure Formulae: 	
	(#gval_5 == $$empty)
	(#gwrit_5 == $$empty)
Gamma: 	
	(#gval_5: $$empty_type)
	(w: $$empty_type)
	(#gwrit_5: $$empty_type)
	(desc: $$list_type)
	(d: $$string_type)
	(v: $$empty_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 1.969280
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(w: $$empty)
	(desc: {{ \"g\", #genum_5, #gconf_5, $$empty, $$empty, #gget_5, #gset_5 }})
	(d: \"g\")
	(v: $$empty)
Pure Formulae: 	
	(#gval_5 == $$empty)
	(#gwrit_5 == $$empty)
Gamma: 	
	(#gval_5: $$empty_type)
	(w: $$empty_type)
	(xret: $$boolean_type)
	(#gwrit_5: $$empty_type)
	(desc: $$list_type)
	(d: $$string_type)
	(v: $$empty_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isDataDescriptor
----------------------------------
--0--
TIME: 1.969676
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_6, #gconf_6, #gval_6, #gwrit_6, #gget_6, #gset_6 }})
Pure Formulae: 	
	(! (#gval_6 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 1.969816
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_6, #gconf_6, #gval_6, #gwrit_6, #gget_6, #gset_6 }})
Pure Formulae: 	
	(! (#gval_6 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 1.969864
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_6, #gconf_6, #gval_6, #gwrit_6, #gget_6, #gset_6 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gval_6 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [(d = "d")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.969971
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_6, #gconf_6, #gval_6, #gwrit_6, #gget_6, #gset_6 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gval_6 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 1.970094
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_6, #gconf_6, #gval_6, #gwrit_6, #gget_6, #gset_6 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gval_6 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--5--
TIME: 1.970170
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_6, #gconf_6, #gval_6, #gwrit_6, #gget_6, #gset_6 }})
	(d: \"g\")
	(v: #gval_6)
Pure Formulae: 	
	(! (#gval_6 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--6--
TIME: 1.970248
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_6, #gconf_6, #gval_6, #gwrit_6, #gget_6, #gset_6 }})
	(d: \"g\")
	(v: #gval_6)
	(w: #gwrit_6)
Pure Formulae: 	
	(! (#gval_6 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [((v = $$empty) and (w = $$empty))] 9 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 1.981011
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_6, #gconf_6, #gval_6, #gwrit_6, #gget_6, #gset_6 }})
	(d: \"g\")
	(v: #gval_6)
	(w: #gwrit_6)
Pure Formulae: 	
	(! (#gval_6 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 1.981077
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: {{ \"g\", #genum_6, #gconf_6, #gval_6, #gwrit_6, #gget_6, #gset_6 }})
	(d: \"g\")
	(v: #gval_6)
	(w: #gwrit_6)
Pure Formulae: 	
	(! (#gval_6 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 1.981120
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: {{ \"g\", #genum_6, #gconf_6, #gval_6, #gwrit_6, #gget_6, #gset_6 }})
	(d: \"g\")
	(v: #gval_6)
	(w: #gwrit_6)
Pure Formulae: 	
	(! (#gval_6 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isDataDescriptor
----------------------------------
--0--
TIME: 1.981323
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_7, #gconf_7, #gval_7, #gwrit_7, #gget_7, #gset_7 }})
Pure Formulae: 	
	(! (#gwrit_7 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 1.981408
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_7, #gconf_7, #gval_7, #gwrit_7, #gget_7, #gset_7 }})
Pure Formulae: 	
	(! (#gwrit_7 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 1.981448
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_7, #gconf_7, #gval_7, #gwrit_7, #gget_7, #gset_7 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gwrit_7 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [(d = "d")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.981530
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_7, #gconf_7, #gval_7, #gwrit_7, #gget_7, #gset_7 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gwrit_7 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 1.981594
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_7, #gconf_7, #gval_7, #gwrit_7, #gget_7, #gset_7 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gwrit_7 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: v := l-nth(desc, 3.)
----------------------------------
----------------------------------
--5--
TIME: 1.981634
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_7, #gconf_7, #gval_7, #gwrit_7, #gget_7, #gset_7 }})
	(d: \"g\")
	(v: #gval_7)
Pure Formulae: 	
	(! (#gwrit_7 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: w := l-nth(desc, 4.)
----------------------------------
----------------------------------
--6--
TIME: 1.981675
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_7, #gconf_7, #gval_7, #gwrit_7, #gget_7, #gset_7 }})
	(d: \"g\")
	(v: #gval_7)
	(w: #gwrit_7)
Pure Formulae: 	
	(! (#gwrit_7 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [((v = $$empty) and (w = $$empty))] 9 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 1.992321
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_7, #gconf_7, #gval_7, #gwrit_7, #gget_7, #gset_7 }})
	(d: \"g\")
	(v: #gval_7)
	(w: #gwrit_7)
Pure Formulae: 	
	(! (#gwrit_7 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 1.992373
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: {{ \"g\", #genum_7, #gconf_7, #gval_7, #gwrit_7, #gget_7, #gset_7 }})
	(d: \"g\")
	(v: #gval_7)
	(w: #gwrit_7)
Pure Formulae: 	
	(! (#gwrit_7 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 1.992428
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: {{ \"g\", #genum_7, #gconf_7, #gval_7, #gwrit_7, #gget_7, #gset_7 }})
	(d: \"g\")
	(v: #gval_7)
	(w: #gwrit_7)
Pure Formulae: 	
	(! (#gwrit_7 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isAccessorDescriptor
----------------------------------
--0--
TIME: 1.992670
STATE:
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 1.992759
STATE:
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 1.992829
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isAccessorDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isAccessorDescriptor
----------------------------------
--0--
TIME: 1.996278
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_38, #dwrit_38, #denum_38, #dconf_38 }})
Pure Formulae: 	
	(! (#dval_38 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(#dconf_38: $$boolean_type)
	(#dwrit_38: $$boolean_type)
	(#denum_38: $$boolean_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 1.996382
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_38, #dwrit_38, #denum_38, #dconf_38 }})
Pure Formulae: 	
	(! (#dval_38 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(#dconf_38: $$boolean_type)
	(#dwrit_38: $$boolean_type)
	(#denum_38: $$boolean_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 1.996429
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_38, #dwrit_38, #denum_38, #dconf_38 }})
	(d: \"d\")
Pure Formulae: 	
	(! (#dval_38 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
	(#dconf_38: $$boolean_type)
	(#dwrit_38: $$boolean_type)
	(#denum_38: $$boolean_type)
Preds: 
CMD: goto [(d = "a")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.996521
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_38, #dwrit_38, #denum_38, #dconf_38 }})
	(d: \"d\")
Pure Formulae: 	
	(! (#dval_38 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
	(#dconf_38: $$boolean_type)
	(#dwrit_38: $$boolean_type)
	(#denum_38: $$boolean_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 1.996611
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_38, #dwrit_38, #denum_38, #dconf_38 }})
	(d: \"d\")
Pure Formulae: 	
	(! (#dval_38 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
	(#dconf_38: $$boolean_type)
	(#dwrit_38: $$boolean_type)
	(#denum_38: $$boolean_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 1.996656
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"d\", #dval_38, #dwrit_38, #denum_38, #dconf_38 }})
	(d: \"d\")
Pure Formulae: 	
	(! (#dval_38 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(d: $$string_type)
	(#dconf_38: $$boolean_type)
	(#dwrit_38: $$boolean_type)
	(#denum_38: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isAccessorDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isAccessorDescriptor
----------------------------------
--0--
TIME: 1.996926
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_8, #gconf_8, #gval_8, #gwrit_8, $$empty, $$empty }})
Pure Formulae: 	
	(#gset_8 == $$empty)
	(#gget_8 == $$empty)
Gamma: 	
	(#gset_8: $$empty_type)
	(desc: $$list_type)
	(#gget_8: $$empty_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 1.997079
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_8, #gconf_8, #gval_8, #gwrit_8, $$empty, $$empty }})
Pure Formulae: 	
	(#gset_8 == $$empty)
	(#gget_8 == $$empty)
Gamma: 	
	(#gset_8: $$empty_type)
	(desc: $$list_type)
	(#gget_8: $$empty_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 1.997175
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_8, #gconf_8, #gval_8, #gwrit_8, $$empty, $$empty }})
	(d: \"g\")
Pure Formulae: 	
	(#gset_8 == $$empty)
	(#gget_8 == $$empty)
Gamma: 	
	(#gset_8: $$empty_type)
	(desc: $$list_type)
	(d: $$string_type)
	(#gget_8: $$empty_type)
Preds: 
CMD: goto [(d = "a")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.997681
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_8, #gconf_8, #gval_8, #gwrit_8, $$empty, $$empty }})
	(d: \"g\")
Pure Formulae: 	
	(#gset_8 == $$empty)
	(#gget_8 == $$empty)
Gamma: 	
	(#gset_8: $$empty_type)
	(desc: $$list_type)
	(d: $$string_type)
	(#gget_8: $$empty_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 1.997807
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_8, #gconf_8, #gval_8, #gwrit_8, $$empty, $$empty }})
	(d: \"g\")
Pure Formulae: 	
	(#gset_8 == $$empty)
	(#gget_8 == $$empty)
Gamma: 	
	(#gset_8: $$empty_type)
	(desc: $$list_type)
	(d: $$string_type)
	(#gget_8: $$empty_type)
Preds: 
CMD: g := l-nth(desc, 5.)
----------------------------------
----------------------------------
--5--
TIME: 1.997907
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_8, #gconf_8, #gval_8, #gwrit_8, $$empty, $$empty }})
	(g: $$empty)
	(d: \"g\")
Pure Formulae: 	
	(#gset_8 == $$empty)
	(#gget_8 == $$empty)
Gamma: 	
	(#gset_8: $$empty_type)
	(desc: $$list_type)
	(g: $$empty_type)
	(d: $$string_type)
	(#gget_8: $$empty_type)
Preds: 
CMD: s := l-nth(desc, 6.)
----------------------------------
----------------------------------
--6--
TIME: 1.998010
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_8, #gconf_8, #gval_8, #gwrit_8, $$empty, $$empty }})
	(g: $$empty)
	(d: \"g\")
	(s: $$empty)
Pure Formulae: 	
	(#gset_8 == $$empty)
	(#gget_8 == $$empty)
Gamma: 	
	(#gset_8: $$empty_type)
	(desc: $$list_type)
	(g: $$empty_type)
	(d: $$string_type)
	(#gget_8: $$empty_type)
	(s: $$empty_type)
Preds: 
CMD: goto [((g = $$empty) and (s = $$empty))] 9 7
----------------------------------
in the THEN branch
----------------------------------
--9--
TIME: 1.998174
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_8, #gconf_8, #gval_8, #gwrit_8, $$empty, $$empty }})
	(g: $$empty)
	(d: \"g\")
	(s: $$empty)
Pure Formulae: 	
	(#gset_8 == $$empty)
	(#gget_8 == $$empty)
Gamma: 	
	(#gset_8: $$empty_type)
	(desc: $$list_type)
	(g: $$empty_type)
	(d: $$string_type)
	(s: $$empty_type)
	(#gget_8: $$empty_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--10--
TIME: 1.998289
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_8, #gconf_8, #gval_8, #gwrit_8, $$empty, $$empty }})
	(g: $$empty)
	(d: \"g\")
	(s: $$empty)
Pure Formulae: 	
	(#gset_8 == $$empty)
	(#gget_8 == $$empty)
Gamma: 	
	(#gset_8: $$empty_type)
	(xret: $$boolean_type)
	(desc: $$list_type)
	(g: $$empty_type)
	(d: $$string_type)
	(#gget_8: $$empty_type)
	(s: $$empty_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isAccessorDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isAccessorDescriptor
----------------------------------
--0--
TIME: 1.998584
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_9, #gconf_9, #gval_9, #gwrit_9, #gget_9, #gset_9 }})
Pure Formulae: 	
	(! (#gget_9 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 1.998702
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_9, #gconf_9, #gval_9, #gwrit_9, #gget_9, #gset_9 }})
Pure Formulae: 	
	(! (#gget_9 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 1.998750
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_9, #gconf_9, #gval_9, #gwrit_9, #gget_9, #gset_9 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gget_9 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [(d = "a")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 1.998843
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_9, #gconf_9, #gval_9, #gwrit_9, #gget_9, #gset_9 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gget_9 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 1.998918
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_9, #gconf_9, #gval_9, #gwrit_9, #gget_9, #gset_9 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gget_9 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: g := l-nth(desc, 5.)
----------------------------------
----------------------------------
--5--
TIME: 1.998964
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_9, #gconf_9, #gval_9, #gwrit_9, #gget_9, #gset_9 }})
	(d: \"g\")
	(g: #gget_9)
Pure Formulae: 	
	(! (#gget_9 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: s := l-nth(desc, 6.)
----------------------------------
----------------------------------
--6--
TIME: 1.999011
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_9, #gconf_9, #gval_9, #gwrit_9, #gget_9, #gset_9 }})
	(d: \"g\")
	(s: #gset_9)
	(g: #gget_9)
Pure Formulae: 	
	(! (#gget_9 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [((g = $$empty) and (s = $$empty))] 9 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 2.010159
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_9, #gconf_9, #gval_9, #gwrit_9, #gget_9, #gset_9 }})
	(d: \"g\")
	(s: #gset_9)
	(g: #gget_9)
Pure Formulae: 	
	(! (#gget_9 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 2.010212
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: {{ \"g\", #genum_9, #gconf_9, #gval_9, #gwrit_9, #gget_9, #gset_9 }})
	(d: \"g\")
	(s: #gset_9)
	(g: #gget_9)
Pure Formulae: 	
	(! (#gget_9 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 2.010254
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: {{ \"g\", #genum_9, #gconf_9, #gval_9, #gwrit_9, #gget_9, #gset_9 }})
	(d: \"g\")
	(s: #gset_9)
	(g: #gget_9)
Pure Formulae: 	
	(! (#gget_9 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isAccessorDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isAccessorDescriptor
----------------------------------
--0--
TIME: 2.010461
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_10, #gconf_10, #gval_10, #gwrit_10, #gget_10, #gset_10 }})
Pure Formulae: 	
	(! (#gset_10 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 9 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 2.010558
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_10, #gconf_10, #gval_10, #gwrit_10, #gget_10, #gset_10 }})
Pure Formulae: 	
	(! (#gset_10 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--2--
TIME: 2.010964
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_10, #gconf_10, #gval_10, #gwrit_10, #gget_10, #gset_10 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gset_10 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [(d = "a")] 7 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 2.011108
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_10, #gconf_10, #gval_10, #gwrit_10, #gget_10, #gset_10 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gset_10 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [(d = "g")] 4 9
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 2.011231
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_10, #gconf_10, #gval_10, #gwrit_10, #gget_10, #gset_10 }})
	(d: \"g\")
Pure Formulae: 	
	(! (#gset_10 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: g := l-nth(desc, 5.)
----------------------------------
----------------------------------
--5--
TIME: 2.011366
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_10, #gconf_10, #gval_10, #gwrit_10, #gget_10, #gset_10 }})
	(d: \"g\")
	(g: #gget_10)
Pure Formulae: 	
	(! (#gset_10 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: s := l-nth(desc, 6.)
----------------------------------
----------------------------------
--6--
TIME: 2.011482
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_10, #gconf_10, #gval_10, #gwrit_10, #gget_10, #gset_10 }})
	(d: \"g\")
	(s: #gset_10)
	(g: #gget_10)
Pure Formulae: 	
	(! (#gset_10 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto [((g = $$empty) and (s = $$empty))] 9 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 2.022576
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_10, #gconf_10, #gval_10, #gwrit_10, #gget_10, #gset_10 }})
	(d: \"g\")
	(s: #gset_10)
	(g: #gget_10)
Pure Formulae: 	
	(! (#gset_10 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--8--
TIME: 2.022627
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: {{ \"g\", #genum_10, #gconf_10, #gval_10, #gwrit_10, #gget_10, #gset_10 }})
	(d: \"g\")
	(s: #gset_10)
	(g: #gget_10)
Pure Formulae: 	
	(! (#gset_10 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: goto 10
----------------------------------
----------------------------------
--10--
TIME: 2.022668
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(desc: {{ \"g\", #genum_10, #gconf_10, #gval_10, #gwrit_10, #gget_10, #gset_10 }})
	(d: \"g\")
	(s: #gset_10)
	(g: #gget_10)
Pure Formulae: 	
	(! (#gset_10 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(d: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isAccessorDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isGenericDescriptor
----------------------------------
--0--
TIME: 2.022909
STATE:
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 
CMD: goto [(desc = $$undefined)] 5 1
----------------------------------
in the THEN branch
----------------------------------
--5--
TIME: 2.022998
STATE:
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--6--
TIME: 2.023068
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isGenericDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isGenericDescriptor
----------------------------------
--0--
TIME: 2.025600
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_4, #dwrit_4, #denum_4, #dconf_4 }})
Pure Formulae: 	
	(! (#dval_4 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(#dwrit_4: $$boolean_type)
	(#denum_4: $$boolean_type)
	(#dconf_4: $$boolean_type)
Preds: 
CMD: goto [(desc = $$undefined)] 5 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 2.025697
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_4, #dwrit_4, #denum_4, #dconf_4 }})
Pure Formulae: 	
	(! (#dval_4 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(#dwrit_4: $$boolean_type)
	(#denum_4: $$boolean_type)
	(#dconf_4: $$boolean_type)
Preds: 
CMD: dd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--2--
TIME: 2.026041
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_4, #dwrit_4, #denum_4, #dconf_4 }})
	(dd: $$t)
Pure Formulae: 	
	(! (#dval_4 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(#dwrit_4: $$boolean_type)
	(dd: $$boolean_type)
	(#denum_4: $$boolean_type)
	(#dconf_4: $$boolean_type)
Preds: 
CMD: ad := "i__isAccessorDescriptor"(desc) 
----------------------------------
----------------------------------
--3--
TIME: 2.026390
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_4, #dwrit_4, #denum_4, #dconf_4 }})
	(dd: $$t)
	(ad: $$f)
Pure Formulae: 	
	(! (#dval_4 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(#dwrit_4: $$boolean_type)
	(dd: $$boolean_type)
	(#denum_4: $$boolean_type)
	(#dconf_4: $$boolean_type)
	(ad: $$boolean_type)
Preds: 
CMD: xret := (not (dd or ad))
----------------------------------
----------------------------------
--4--
TIME: 2.026670
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"d\", #dval_4, #dwrit_4, #denum_4, #dconf_4 }})
	(dd: $$t)
	(ad: $$f)
Pure Formulae: 	
	(! (#dval_4 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_4: $$boolean_type)
	(dd: $$boolean_type)
	(#denum_4: $$boolean_type)
	(#dconf_4: $$boolean_type)
	(ad: $$boolean_type)
Preds: 
CMD: goto 6
----------------------------------
----------------------------------
--6--
TIME: 2.026743
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"d\", #dval_4, #dwrit_4, #denum_4, #dconf_4 }})
	(dd: $$t)
	(ad: $$f)
Pure Formulae: 	
	(! (#dval_4 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_4: $$boolean_type)
	(dd: $$boolean_type)
	(#denum_4: $$boolean_type)
	(#dconf_4: $$boolean_type)
	(ad: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isGenericDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isGenericDescriptor
----------------------------------
--0--
TIME: 2.027007
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_0, #gconf_0, $$empty, $$empty, $$empty, $$empty }})
Pure Formulae: 	
	(#gset_0 == $$empty)
	(#gval_0 == $$empty)
	(#gwrit_0 == $$empty)
	(#gget_0 == $$empty)
Gamma: 	
	(#gwrit_0: $$empty_type)
	(#gset_0: $$empty_type)
	(desc: $$list_type)
	(#gval_0: $$empty_type)
	(#gget_0: $$empty_type)
Preds: 
CMD: goto [(desc = $$undefined)] 5 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 2.027210
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_0, #gconf_0, $$empty, $$empty, $$empty, $$empty }})
Pure Formulae: 	
	(#gset_0 == $$empty)
	(#gval_0 == $$empty)
	(#gwrit_0 == $$empty)
	(#gget_0 == $$empty)
Gamma: 	
	(#gwrit_0: $$empty_type)
	(#gset_0: $$empty_type)
	(desc: $$list_type)
	(#gval_0: $$empty_type)
	(#gget_0: $$empty_type)
Preds: 
CMD: dd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--2--
TIME: 2.028101
STATE:
Heap: 
	
Store: 	
	(dd: $$f)
	(desc: {{ \"g\", #genum_0, #gconf_0, $$empty, $$empty, $$empty, $$empty }})
Pure Formulae: 	
	(#gset_0 == $$empty)
	(#gval_0 == $$empty)
	(#gwrit_0 == $$empty)
	(#gget_0 == $$empty)
Gamma: 	
	(#gwrit_0: $$empty_type)
	(#gset_0: $$empty_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
	(#gval_0: $$empty_type)
	(#gget_0: $$empty_type)
Preds: 
CMD: ad := "i__isAccessorDescriptor"(desc) 
----------------------------------
----------------------------------
--3--
TIME: 2.029010
STATE:
Heap: 
	
Store: 	
	(ad: $$f)
	(dd: $$f)
	(desc: {{ \"g\", #genum_0, #gconf_0, $$empty, $$empty, $$empty, $$empty }})
Pure Formulae: 	
	(#gset_0 == $$empty)
	(#gval_0 == $$empty)
	(#gwrit_0 == $$empty)
	(#gget_0 == $$empty)
Gamma: 	
	(#gwrit_0: $$empty_type)
	(#gset_0: $$empty_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
	(#gval_0: $$empty_type)
	(#gget_0: $$empty_type)
Preds: 
CMD: xret := (not (dd or ad))
----------------------------------
----------------------------------
--4--
TIME: 2.029129
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(ad: $$f)
	(dd: $$f)
	(desc: {{ \"g\", #genum_0, #gconf_0, $$empty, $$empty, $$empty, $$empty }})
Pure Formulae: 	
	(#gset_0 == $$empty)
	(#gval_0 == $$empty)
	(#gwrit_0 == $$empty)
	(#gget_0 == $$empty)
Gamma: 	
	(#gwrit_0: $$empty_type)
	(#gset_0: $$empty_type)
	(ad: $$boolean_type)
	(xret: $$boolean_type)
	(desc: $$list_type)
	(dd: $$boolean_type)
	(#gval_0: $$empty_type)
	(#gget_0: $$empty_type)
Preds: 
CMD: goto 6
----------------------------------
----------------------------------
--6--
TIME: 2.029240
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(ad: $$f)
	(dd: $$f)
	(desc: {{ \"g\", #genum_0, #gconf_0, $$empty, $$empty, $$empty, $$empty }})
Pure Formulae: 	
	(#gset_0 == $$empty)
	(#gval_0 == $$empty)
	(#gwrit_0 == $$empty)
	(#gget_0 == $$empty)
Gamma: 	
	(#gwrit_0: $$empty_type)
	(#gset_0: $$empty_type)
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
	(#gval_0: $$empty_type)
	(#gget_0: $$empty_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isGenericDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isGenericDescriptor
----------------------------------
--0--
TIME: 2.029621
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_1, #gconf_1, #gval_1, #gwrit_1, #gget_1, #gset_1 }})
Pure Formulae: 	
	(! (#gval_1 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 5 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 2.029714
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_1, #gconf_1, #gval_1, #gwrit_1, #gget_1, #gset_1 }})
Pure Formulae: 	
	(! (#gval_1 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: dd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--2--
TIME: 2.030134
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_1, #gconf_1, #gval_1, #gwrit_1, #gget_1, #gset_1 }})
	(dd: $$t)
Pure Formulae: 	
	(! (#gval_1 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(dd: $$boolean_type)
Preds: 
CMD: ad := "i__isAccessorDescriptor"(desc) 
----------------------------------
I found the model: 

(define-fun |#gget_1| () Extended_JSIL_Literal
  (Set (_ as-array k!394)))
(define-fun |#gval_1| () Extended_JSIL_Literal
  (Set (_ as-array k!393)))
(define-fun k!393 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun k!394 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#gget_1| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#gval_1| () Extended_JSIL_Literal
  (Set (_ as-array k!400)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!400 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#gset_1| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#gval_1| () Extended_JSIL_Literal
  (Set (_ as-array k!406)))
(define-fun k!406 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
----------------------------------
--3--
TIME: 2.114895
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_1, #gconf_1, #gval_1, #gwrit_1, #gget_1, #gset_1 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_1 == $$empty))
	(! (#gset_1 == $$empty))
Gamma: 	
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: xret := (not (dd or ad))
----------------------------------
----------------------------------
--4--
TIME: 2.114994
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_1, #gconf_1, #gval_1, #gwrit_1, #gget_1, #gset_1 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_1 == $$empty))
	(! (#gset_1 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: goto 6
----------------------------------
----------------------------------
--6--
TIME: 2.115064
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_1, #gconf_1, #gval_1, #gwrit_1, #gget_1, #gset_1 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_1 == $$empty))
	(! (#gset_1 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isGenericDescriptor
----------------------------------
--3--
TIME: 2.115302
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_1, #gconf_1, #gval_1, #gwrit_1, #gget_1, #gset_1 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_1 == $$empty))
	(! (#gget_1 == $$empty))
Gamma: 	
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: xret := (not (dd or ad))
----------------------------------
----------------------------------
--4--
TIME: 2.115375
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_1, #gconf_1, #gval_1, #gwrit_1, #gget_1, #gset_1 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_1 == $$empty))
	(! (#gget_1 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: goto 6
----------------------------------
----------------------------------
--6--
TIME: 2.115458
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_1, #gconf_1, #gval_1, #gwrit_1, #gget_1, #gset_1 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_1 == $$empty))
	(! (#gget_1 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isGenericDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isGenericDescriptor
----------------------------------
--0--
TIME: 2.115664
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_2, #gconf_2, #gval_2, #gwrit_2, #gget_2, #gset_2 }})
Pure Formulae: 	
	(! (#gwrit_2 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 5 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 2.115747
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_2, #gconf_2, #gval_2, #gwrit_2, #gget_2, #gset_2 }})
Pure Formulae: 	
	(! (#gwrit_2 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: dd := "i__isDataDescriptor"(desc) 
----------------------------------
I found the model: 

(define-fun |#gval_2| () Extended_JSIL_Literal
  (Set (_ as-array k!424)))
(define-fun |#gwrit_2| () Extended_JSIL_Literal
  (Set (_ as-array k!423)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun k!423 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!424 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#gval_2| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#gwrit_2| () Extended_JSIL_Literal
  (Set (_ as-array k!430)))
(define-fun k!430 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
----------------------------------
--2--
TIME: 2.143094
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_2, #gconf_2, #gval_2, #gwrit_2, #gget_2, #gset_2 }})
	(dd: $$t)
Pure Formulae: 	
	(! (#gwrit_2 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(dd: $$boolean_type)
Preds: 
CMD: ad := "i__isAccessorDescriptor"(desc) 
----------------------------------
I found the model: 

(define-fun |#gget_2| () Extended_JSIL_Literal
  (Set (_ as-array k!437)))
(define-fun |#gwrit_2| () Extended_JSIL_Literal
  (Set (_ as-array k!436)))
(define-fun k!437 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!436 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#gget_2| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#gwrit_2| () Extended_JSIL_Literal
  (Set (_ as-array k!443)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun k!443 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#gset_2| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#gwrit_2| () Extended_JSIL_Literal
  (Set (_ as-array k!449)))
(define-fun k!449 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
----------------------------------
--3--
TIME: 2.245771
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_2, #gconf_2, #gval_2, #gwrit_2, #gget_2, #gset_2 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_2 == $$empty))
	(! (#gset_2 == $$empty))
Gamma: 	
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: xret := (not (dd or ad))
----------------------------------
----------------------------------
--4--
TIME: 2.245871
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_2, #gconf_2, #gval_2, #gwrit_2, #gget_2, #gset_2 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_2 == $$empty))
	(! (#gset_2 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: goto 6
----------------------------------
----------------------------------
--6--
TIME: 2.245940
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_2, #gconf_2, #gval_2, #gwrit_2, #gget_2, #gset_2 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_2 == $$empty))
	(! (#gset_2 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isGenericDescriptor
----------------------------------
--3--
TIME: 2.257075
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_2, #gconf_2, #gval_2, #gwrit_2, #gget_2, #gset_2 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_2 == $$empty))
	(! (#gget_2 == $$empty))
Gamma: 	
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: xret := (not (dd or ad))
----------------------------------
----------------------------------
--4--
TIME: 2.257155
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_2, #gconf_2, #gval_2, #gwrit_2, #gget_2, #gset_2 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_2 == $$empty))
	(! (#gget_2 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: goto 6
----------------------------------
----------------------------------
--6--
TIME: 2.257224
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_2, #gconf_2, #gval_2, #gwrit_2, #gget_2, #gset_2 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_2 == $$empty))
	(! (#gget_2 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isGenericDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isGenericDescriptor
----------------------------------
--0--
TIME: 2.257430
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_3, #gconf_3, #gval_3, #gwrit_3, #gget_3, #gset_3 }})
Pure Formulae: 	
	(! (#gget_3 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 5 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 2.257513
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_3, #gconf_3, #gval_3, #gwrit_3, #gget_3, #gset_3 }})
Pure Formulae: 	
	(! (#gget_3 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: dd := "i__isDataDescriptor"(desc) 
----------------------------------
I found the model: 

(define-fun |#gval_3| () Extended_JSIL_Literal
  (Set (_ as-array k!467)))
(define-fun |#gget_3| () Extended_JSIL_Literal
  (Set (_ as-array k!466)))
(define-fun k!466 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun k!467 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#gval_3| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#gget_3| () Extended_JSIL_Literal
  (Set (_ as-array k!473)))
(define-fun k!473 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#gwrit_3| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#gget_3| () Extended_JSIL_Literal
  (Set (_ as-array k!479)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun k!479 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
----------------------------------
--2--
TIME: 2.348802
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_3, #gconf_3, #gval_3, #gwrit_3, #gget_3, #gset_3 }})
	(dd: $$t)
Pure Formulae: 	
	(! (#gget_3 == $$empty))
	(! (#gwrit_3 == $$empty))
Gamma: 	
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: ad := "i__isAccessorDescriptor"(desc) 
----------------------------------
----------------------------------
--3--
TIME: 2.349243
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_3, #gconf_3, #gval_3, #gwrit_3, #gget_3, #gset_3 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_3 == $$empty))
	(! (#gget_3 == $$empty))
Gamma: 	
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: xret := (not (dd or ad))
----------------------------------
----------------------------------
--4--
TIME: 2.349320
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_3, #gconf_3, #gval_3, #gwrit_3, #gget_3, #gset_3 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_3 == $$empty))
	(! (#gget_3 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: goto 6
----------------------------------
----------------------------------
--6--
TIME: 2.360149
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_3, #gconf_3, #gval_3, #gwrit_3, #gget_3, #gset_3 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_3 == $$empty))
	(! (#gget_3 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isGenericDescriptor
----------------------------------
--2--
TIME: 2.360520
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_3, #gconf_3, #gval_3, #gwrit_3, #gget_3, #gset_3 }})
	(dd: $$t)
Pure Formulae: 	
	(! (#gget_3 == $$empty))
	(! (#gval_3 == $$empty))
Gamma: 	
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: ad := "i__isAccessorDescriptor"(desc) 
----------------------------------
----------------------------------
--3--
TIME: 2.360915
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_3, #gconf_3, #gval_3, #gwrit_3, #gget_3, #gset_3 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_3 == $$empty))
	(! (#gget_3 == $$empty))
Gamma: 	
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: xret := (not (dd or ad))
----------------------------------
----------------------------------
--4--
TIME: 2.360991
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_3, #gconf_3, #gval_3, #gwrit_3, #gget_3, #gset_3 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_3 == $$empty))
	(! (#gget_3 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: goto 6
----------------------------------
----------------------------------
--6--
TIME: 2.361059
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_3, #gconf_3, #gval_3, #gwrit_3, #gget_3, #gset_3 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_3 == $$empty))
	(! (#gget_3 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isGenericDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__isGenericDescriptor
----------------------------------
--0--
TIME: 2.361883
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_4, #gconf_4, #gval_4, #gwrit_4, #gget_4, #gset_4 }})
Pure Formulae: 	
	(! (#gset_4 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: goto [(desc = $$undefined)] 5 1
----------------------------------
in the ELSE branch
----------------------------------
--1--
TIME: 2.361966
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_4, #gconf_4, #gval_4, #gwrit_4, #gget_4, #gset_4 }})
Pure Formulae: 	
	(! (#gset_4 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 
CMD: dd := "i__isDataDescriptor"(desc) 
----------------------------------
I found the model: 

(define-fun |#gset_4| () Extended_JSIL_Literal
  (Set (_ as-array k!496)))
(define-fun |#gval_4| () Extended_JSIL_Literal
  (Set (_ as-array k!497)))
(define-fun k!497 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!496 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#gval_4| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#gset_4| () Extended_JSIL_Literal
  (Set (_ as-array k!503)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun k!503 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#gset_4| () Extended_JSIL_Literal
  (Set (_ as-array k!509)))
(define-fun |#gwrit_4| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun k!509 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
----------------------------------
--2--
TIME: 2.462056
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_4, #gconf_4, #gval_4, #gwrit_4, #gget_4, #gset_4 }})
	(dd: $$t)
Pure Formulae: 	
	(! (#gset_4 == $$empty))
	(! (#gwrit_4 == $$empty))
Gamma: 	
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: ad := "i__isAccessorDescriptor"(desc) 
----------------------------------
I found the model: 

(define-fun |#gget_4| () Extended_JSIL_Literal
  (Set (_ as-array k!528)))
(define-fun |#gset_4| () Extended_JSIL_Literal
  (Set (_ as-array k!527)))
(define-fun |#gwrit_4| () Extended_JSIL_Literal
  (Set (_ as-array k!529)))
(define-fun k!529 ((x!0 JSIL_Literal)) Bool
  (ite (= x!0 (Bool false)) true
    false))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun k!527 ((x!0 JSIL_Literal)) Bool
  (ite (= x!0 Undefined) true
    false))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!528 ((x!0 JSIL_Literal)) Bool
  (ite (= x!0 Undefined) false
    true))
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#gget_4| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#gset_4| () Extended_JSIL_Literal
  (Set (_ as-array k!536)))
(define-fun |#gwrit_4| () Extended_JSIL_Literal
  (Set (_ as-array k!537)))
(define-fun k!537 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!536 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  0.0)
----------------------------------
--3--
TIME: 2.487973
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_4, #gconf_4, #gval_4, #gwrit_4, #gget_4, #gset_4 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_4 == $$empty))
	(! (#gset_4 == $$empty))
Gamma: 	
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: xret := (not (dd or ad))
----------------------------------
----------------------------------
--4--
TIME: 2.488055
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_4, #gconf_4, #gval_4, #gwrit_4, #gget_4, #gset_4 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_4 == $$empty))
	(! (#gset_4 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: goto 6
----------------------------------
----------------------------------
--6--
TIME: 2.488125
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_4, #gconf_4, #gval_4, #gwrit_4, #gget_4, #gset_4 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gwrit_4 == $$empty))
	(! (#gset_4 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isGenericDescriptor
----------------------------------
--2--
TIME: 2.489023
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_4, #gconf_4, #gval_4, #gwrit_4, #gget_4, #gset_4 }})
	(dd: $$t)
Pure Formulae: 	
	(! (#gset_4 == $$empty))
	(! (#gval_4 == $$empty))
Gamma: 	
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: ad := "i__isAccessorDescriptor"(desc) 
----------------------------------
I found the model: 

(define-fun |#gget_4| () Extended_JSIL_Literal
  (Set (_ as-array k!546)))
(define-fun |#gset_4| () Extended_JSIL_Literal
  (Set (_ as-array k!545)))
(define-fun |#gval_4| () Extended_JSIL_Literal
  (Set (_ as-array k!544)))
(define-fun k!545 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun k!546 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!544 ((x!0 JSIL_Literal)) Bool
  (ite (= x!0 (Bool false)) true
    false))
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#gget_4| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#gset_4| () Extended_JSIL_Literal
  (Set (_ as-array k!554)))
(define-fun |#gval_4| () Extended_JSIL_Literal
  (Set (_ as-array k!553)))
(define-fun k!553 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun k!554 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
    BooleanType))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
----------------------------------
--3--
TIME: 2.516586
STATE:
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_4, #gconf_4, #gval_4, #gwrit_4, #gget_4, #gset_4 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_4 == $$empty))
	(! (#gset_4 == $$empty))
Gamma: 	
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: xret := (not (dd or ad))
----------------------------------
----------------------------------
--4--
TIME: 2.516668
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_4, #gconf_4, #gval_4, #gwrit_4, #gget_4, #gset_4 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_4 == $$empty))
	(! (#gset_4 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: goto 6
----------------------------------
----------------------------------
--6--
TIME: 2.516736
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(desc: {{ \"g\", #genum_4, #gconf_4, #gval_4, #gwrit_4, #gget_4, #gset_4 }})
	(dd: $$t)
	(ad: $$t)
Pure Formulae: 	
	(! (#gval_4 == $$empty))
	(! (#gset_4 == $$empty))
Gamma: 	
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isGenericDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__toDataDescriptor
----------------------------------
--0--
TIME: 2.523920
STATE:
Heap: 
	
Store: 	
	(desc: #desc)
Pure Formulae: 	
	(! (#dval_8 == $$empty))
	(#desc == {{ \"d\", #dval_8, #dwrit_8, #denum_8, #dconf_8 }})
Gamma: 	
	(#desc: $$list_type)
	(#dwrit_8: $$boolean_type)
	(#dconf_8: $$boolean_type)
	(#denum_8: $$boolean_type)
Preds: 
CMD: d := l-nth(desc, 0.)
----------------------------------
----------------------------------
--1--
TIME: 2.523985
STATE:
Heap: 
	
Store: 	
	(desc: #desc)
	(d: \"d\")
Pure Formulae: 	
	(! (#dval_8 == $$empty))
	(#desc == {{ \"d\", #dval_8, #dwrit_8, #denum_8, #dconf_8 }})
Gamma: 	
	(d: $$string_type)
	(#desc: $$list_type)
	(#dwrit_8: $$boolean_type)
	(#dconf_8: $$boolean_type)
	(#denum_8: $$boolean_type)
Preds: 
CMD: goto [(d = "d")] 19 2
----------------------------------
in the THEN branch
----------------------------------
--19--
TIME: 2.524096
STATE:
Heap: 
	
Store: 	
	(desc: #desc)
	(d: \"d\")
Pure Formulae: 	
	(! (#dval_8 == $$empty))
	(#desc == {{ \"d\", #dval_8, #dwrit_8, #denum_8, #dconf_8 }})
Gamma: 	
	(d: $$string_type)
	(#desc: $$list_type)
	(#dwrit_8: $$boolean_type)
	(#dconf_8: $$boolean_type)
	(#denum_8: $$boolean_type)
Preds: 
CMD: xret := desc
----------------------------------
----------------------------------
--20--
TIME: 2.524151
STATE:
Heap: 
	
Store: 	
	(xret: #desc)
	(desc: #desc)
	(d: \"d\")
Pure Formulae: 	
	(! (#dval_8 == $$empty))
	(#desc == {{ \"d\", #dval_8, #dwrit_8, #denum_8, #dconf_8 }})
Gamma: 	
	(xret: $$list_type)
	(d: $$string_type)
	(#desc: $$list_type)
	(#dwrit_8: $$boolean_type)
	(#dconf_8: $$boolean_type)
	(#denum_8: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__toDataDescriptor
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 2.524419
STATE:
Heap: 
	
Store: 	
	(v1: $$undefined)
	(v2: $$undefined)
Pure Formulae: 	
	(#v2 == $$undefined)
	(#v1 == $$undefined)
Gamma: 	
	(#v1: $$undefined_type)
	(v1: $$undefined_type)
	(#v2: $$undefined_type)
	(v2: $$undefined_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
----------------------------------
--1--
TIME: 2.524507
STATE:
Heap: 
	
Store: 	
	(v1: $$undefined)
	(xret: $$t)
	(v2: $$undefined)
Pure Formulae: 	
	(#v2 == $$undefined)
	(#v1 == $$undefined)
Gamma: 	
	(#v1: $$undefined_type)
	(v1: $$undefined_type)
	(xret: $$boolean_type)
	(#v2: $$undefined_type)
	(v2: $$undefined_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 2.524650
STATE:
Heap: 
	
Store: 	
	(v1: $$undefined)
	(xret: $$t)
	(v2: $$undefined)
Pure Formulae: 	
	(#v2 == $$undefined)
	(#v1 == $$undefined)
Gamma: 	
	(#v1: $$undefined_type)
	(v1: $$undefined_type)
	(xret: $$boolean_type)
	(#v2: $$undefined_type)
	(v2: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 2.526089
STATE:
Heap: 
	
Store: 	
	(v1: $$null)
	(v2: $$null)
Pure Formulae: 	
	(#v2 == $$null)
	(#v1 == $$null)
Gamma: 	
	(#v1: $$null_type)
	(v1: $$null_type)
	(#v2: $$null_type)
	(v2: $$null_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
----------------------------------
--1--
TIME: 2.526192
STATE:
Heap: 
	
Store: 	
	(v1: $$null)
	(xret: $$t)
	(v2: $$null)
Pure Formulae: 	
	(#v2 == $$null)
	(#v1 == $$null)
Gamma: 	
	(#v1: $$null_type)
	(v1: $$null_type)
	(xret: $$boolean_type)
	(#v2: $$null_type)
	(v2: $$null_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 2.526354
STATE:
Heap: 
	
Store: 	
	(v1: $$null)
	(xret: $$t)
	(v2: $$null)
Pure Formulae: 	
	(#v2 == $$null)
	(#v1 == $$null)
Gamma: 	
	(#v1: $$null_type)
	(v1: $$null_type)
	(xret: $$boolean_type)
	(#v2: $$null_type)
	(v2: $$null_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 2.526685
STATE:
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(#v1: $$boolean_type)
	(#v2: $$boolean_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
typing the jsil equality. t1: $$boolean_type. t2: $$boolean_type.
----------------------------------
--1--
TIME: 2.526750
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$boolean_type)
	(#v2: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 2.526864
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$boolean_type)
	(#v2: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
typing the jsil equality. t1: $$boolean_type. t2: $$boolean_type.
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 2.537614
STATE:
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(#v1: $$string_type)
	(#v2: $$string_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
typing the jsil equality. t1: $$string_type. t2: $$string_type.
----------------------------------
--1--
TIME: 2.537670
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$string_type)
	(#v2: $$string_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 2.537766
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$string_type)
	(#v2: $$string_type)
Preds: 
CMD: skip
----------------------------------
typing the jsil equality. t1: $$string_type. t2: $$string_type.
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 2.550746
STATE:
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(#v1: $$object_type)
	(#v2: $$object_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
typing the jsil equality. t1: $$object_type. t2: $$object_type.
----------------------------------
--1--
TIME: 2.550801
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$object_type)
	(#v2: $$object_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 2.550901
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$object_type)
	(#v2: $$object_type)
Preds: 
CMD: skip
----------------------------------
typing the jsil equality. t1: $$object_type. t2: $$object_type.
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 2.563227
STATE:
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
Gamma: 	
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
----------------------------------
--1--
TIME: 2.563276
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
I found the model: 

(define-fun |#v1| () Extended_JSIL_Literal
  (Set (_ as-array k!567)))
(define-fun |#v2| () Extended_JSIL_Literal
  (Set (_ as-array k!568)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Set (_ as-array k!567))) NullType
    BooleanType)))))
(define-fun k!567 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!568 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#v1| () Extended_JSIL_Literal
  (Set (_ as-array k!575)))
(define-fun |#v2| () Extended_JSIL_Literal
  (Set (_ as-array k!576)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Set (_ as-array k!575))) NumberType
    BooleanType)))))
(define-fun k!575 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!576 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
Could NOT determine the branch.
----------------------------------
--2--
TIME: 2.588797
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
	(typeOf(#v1) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
I found the model: 

(define-fun |#v1| () Extended_JSIL_Literal
  (Set (_ as-array k!583)))
(define-fun |#v2| () Extended_JSIL_Literal
  (Set (_ as-array k!584)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Set (_ as-array k!583))) NumberType
  (ite (= x!0 (Set (_ as-array k!584))) NullType
    BooleanType))))))
(define-fun k!583 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!584 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#v1| () Extended_JSIL_Literal
  (Set (_ as-array k!591)))
(define-fun |#v2| () Extended_JSIL_Literal
  (Set (_ as-array k!592)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Set (_ as-array k!591))) NumberType
  (ite (= x!0 (Set (_ as-array k!592))) NumberType
    BooleanType))))))
(define-fun k!591 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!592 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  0.0)
Could NOT determine the branch.
----------------------------------
--3--
TIME: 2.616835
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
	(typeOf(#v1) == $$number_type)
	(typeOf(#v2) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(not (v1 = v1))] 4 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.630228
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
	(typeOf(#v1) == $$number_type)
	(typeOf(#v2) == $$number_type)
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: goto [(v1 = 0.)] 6 12
----------------------------------
I found the model: 

(define-fun |#v1| () Extended_JSIL_Literal
  (Set (_ as-array k!603)))
(define-fun |#v2| () Extended_JSIL_Literal
  (Set (_ as-array k!604)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Set (_ as-array k!603))) NumberType
  (ite (= x!0 (Set (_ as-array k!604))) NumberType
    BooleanType))))))
(define-fun k!603 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!604 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  0.0)
I found the model: 

(define-fun |#v1| () Extended_JSIL_Literal
  (Elem (Num 0.0)))
(define-fun |#v2| () Extended_JSIL_Literal
  (Set (_ as-array k!611)))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Num 0.0))) NumberType
  (ite (= x!0 (Set (_ as-array k!611))) NumberType
    BooleanType))))))
(define-fun k!611 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  0.0)
Could NOT determine the branch.
----------------------------------
--6--
TIME: 2.656375
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (0. == #v2))
	(typeOf(0.) == $$number_type)
	(typeOf(#v2) == $$number_type)
	(#v1 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$number_type)
Preds: 
CMD: goto [(v2 = 0.)] 7 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 2.668022
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (0. == #v2))
	(typeOf(0.) == $$number_type)
	(typeOf(#v2) == $$number_type)
	(#v1 == 0.)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
--12--
TIME: 2.681449
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
	(typeOf(#v1) == $$number_type)
	(typeOf(#v2) == $$number_type)
	(! (#v1 == 0.))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
--12--
TIME: 2.704442
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
	(typeOf(#v1) == $$number_type)
	(! (typeOf(#v2) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
--12--
TIME: 2.753375
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
	(! (typeOf(#v1) == $$number_type))
Gamma: 	
	(xret: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 2.775512
STATE:
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v2 == 0.))
	(#v1 == #v2)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
typing the jsil equality. t1: $$number_type. t2: $$number_type.
----------------------------------
--1--
TIME: 2.775571
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v2 == 0.))
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.775665
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v2 == 0.))
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
Preds: 
CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.775751
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v2 == 0.))
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
Preds: 
CMD: goto [(not (v1 = v1))] 4 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.775863
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v2 == 0.))
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
Preds: 
CMD: goto [(v1 = 0.)] 6 12
----------------------------------
in the ELSE branch
----------------------------------
--12--
TIME: 2.775983
STATE:
Heap: 
	
Store: 	
	(xret: (#v1 = #v2))
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v2 == 0.))
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
Preds: 
CMD: skip
----------------------------------
typing the jsil equality. t1: $$number_type. t2: $$number_type.
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 2.786787
STATE:
Heap: 
	
Store: 	
	(v2: 0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
----------------------------------
--1--
TIME: 2.786826
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.786890
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.786946
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(not (v1 = v1))] 4 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.787018
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(v1 = 0.)] 6 12
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 2.787074
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(v2 = 0.)] 7 12
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 2.787132
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: sv1 := (m_sgn v1)
----------------------------------
----------------------------------
--8--
TIME: 2.787167
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(sv1: 1.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: sv2 := (m_sgn v2)
----------------------------------
----------------------------------
--9--
TIME: 2.787203
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(sv2: 1.)
	(v2: 0.)
	(sv1: 1.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: xret := (sv1 = sv2)
----------------------------------
----------------------------------
--10--
TIME: 2.787240
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(sv2: 1.)
	(v2: 0.)
	(sv1: 1.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto 12
----------------------------------
----------------------------------
--12--
TIME: 2.787275
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(sv2: 1.)
	(v2: 0.)
	(sv1: 1.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 2.787441
STATE:
Heap: 
	
Store: 	
	(v2: -0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
----------------------------------
--1--
TIME: 2.787475
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.787548
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.787602
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(not (v1 = v1))] 4 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.794604
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(v1 = 0.)] 6 12
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 2.794671
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(v2 = 0.)] 7 12
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 2.794729
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: sv1 := (m_sgn v1)
----------------------------------
----------------------------------
--8--
TIME: 2.794767
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(sv1: 1.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: sv2 := (m_sgn v2)
----------------------------------
----------------------------------
--9--
TIME: 2.794804
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(sv2: -1.)
	(v2: -0.)
	(sv1: 1.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: xret := (sv1 = sv2)
----------------------------------
----------------------------------
--10--
TIME: 2.794842
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(sv2: -1.)
	(v2: -0.)
	(sv1: 1.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto 12
----------------------------------
----------------------------------
--12--
TIME: 2.794878
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(sv2: -1.)
	(v2: -0.)
	(sv1: 1.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 2.795048
STATE:
Heap: 
	
Store: 	
	(v2: 0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
----------------------------------
--1--
TIME: 2.795083
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.795139
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.795195
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(not (v1 = v1))] 4 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.795280
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(v1 = 0.)] 6 12
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 2.795336
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(v2 = 0.)] 7 12
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 2.795389
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: sv1 := (m_sgn v1)
----------------------------------
----------------------------------
--8--
TIME: 2.795424
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: 0.)
	(sv1: -1.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: sv2 := (m_sgn v2)
----------------------------------
----------------------------------
--9--
TIME: 2.795459
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(sv2: 1.)
	(v2: 0.)
	(sv1: -1.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: xret := (sv1 = sv2)
----------------------------------
----------------------------------
--10--
TIME: 2.795496
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(sv2: 1.)
	(v2: 0.)
	(sv1: -1.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto 12
----------------------------------
----------------------------------
--12--
TIME: 2.795530
STATE:
Heap: 
	
Store: 	
	(xret: $$f)
	(sv2: 1.)
	(v2: 0.)
	(sv1: -1.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__sameValue
----------------------------------
--0--
TIME: 2.795690
STATE:
Heap: 
	
Store: 	
	(v2: -0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: xret := (v1 = v2)
----------------------------------
----------------------------------
--1--
TIME: 2.795723
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(typeOf(v1) = $$number_type)] 2 12
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.795779
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(typeOf(v2) = $$number_type)] 3 12
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.795835
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(not (v1 = v1))] 4 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.795904
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(v1 = 0.)] 6 12
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 2.795960
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto [(v2 = 0.)] 7 12
----------------------------------
in the THEN branch
----------------------------------
--7--
TIME: 2.796018
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: sv1 := (m_sgn v1)
----------------------------------
----------------------------------
--8--
TIME: 2.796053
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(v2: -0.)
	(sv1: -1.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: sv2 := (m_sgn v2)
----------------------------------
----------------------------------
--9--
TIME: 2.796089
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(sv2: -1.)
	(v2: -0.)
	(sv1: -1.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: xret := (sv1 = sv2)
----------------------------------
----------------------------------
--10--
TIME: 2.796124
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(sv2: -1.)
	(v2: -0.)
	(sv1: -1.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: goto 12
----------------------------------
----------------------------------
--12--
TIME: 2.796159
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(sv2: -1.)
	(v2: -0.)
	(sv1: -1.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(sv2: $$number_type)
	(v2: $$number_type)
	(sv1: $$number_type)
	(v1: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__sameValue
----------------------------------
----------------------------------
Symbolic execution of i__checkAssignmentErrors
----------------------------------
--0--
TIME: 2.796353
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 2.796426
STATE:
Heap: 
	
Store: 	
	(tv: $$undefined_type)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(tv: $$type_type)
	(v: $$undefined_type)
Preds: 
CMD: goto [(tv = $$list_type)] 2 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.796532
STATE:
Heap: 
	
Store: 	
	(tv: $$undefined_type)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(tv: $$type_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := $$t
----------------------------------
Verified one spec of proc i__checkAssignmentErrors
----------------------------------
----------------------------------
Symbolic execution of i__checkAssignmentErrors
----------------------------------
--0--
TIME: 2.796709
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 2.796781
STATE:
Heap: 
	
Store: 	
	(tv: $$null_type)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(tv: $$type_type)
	(v: $$null_type)
Preds: 
CMD: goto [(tv = $$list_type)] 2 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.796878
STATE:
Heap: 
	
Store: 	
	(tv: $$null_type)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(tv: $$type_type)
	(v: $$null_type)
Preds: 
CMD: xret := $$t
----------------------------------
Verified one spec of proc i__checkAssignmentErrors
----------------------------------
----------------------------------
Symbolic execution of i__checkAssignmentErrors
----------------------------------
--0--
TIME: 2.797057
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 2.797090
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$number_type)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(tv: $$type_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: goto [(tv = $$list_type)] 2 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.797162
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$number_type)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(tv: $$type_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: xret := $$t
----------------------------------
Verified one spec of proc i__checkAssignmentErrors
----------------------------------
----------------------------------
Symbolic execution of i__checkAssignmentErrors
----------------------------------
--0--
TIME: 2.797293
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 2.797325
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$boolean_type)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(tv: $$type_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: goto [(tv = $$list_type)] 2 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.797390
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$boolean_type)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(tv: $$type_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
Verified one spec of proc i__checkAssignmentErrors
----------------------------------
----------------------------------
Symbolic execution of i__checkAssignmentErrors
----------------------------------
--0--
TIME: 2.797519
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 2.797550
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$string_type)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(tv: $$type_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: goto [(tv = $$list_type)] 2 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.797616
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$string_type)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(tv: $$type_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
Verified one spec of proc i__checkAssignmentErrors
----------------------------------
----------------------------------
Symbolic execution of i__checkAssignmentErrors
----------------------------------
--0--
TIME: 2.797744
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(_lvar_v: $$object_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 2.797775
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$object_type)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(tv: $$type_type)
	(_lvar_v: $$object_type)
Preds: 
CMD: goto [(tv = $$list_type)] 2 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.797842
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
	(tv: $$object_type)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(tv: $$type_type)
	(_lvar_v: $$object_type)
Preds: 
CMD: xret := $$t
----------------------------------
Verified one spec of proc i__checkAssignmentErrors
----------------------------------
----------------------------------
Symbolic execution of i__checkAssignmentErrors
----------------------------------
--0--
TIME: 2.798436
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(! (#prop == \"arguments\"))
	(! (#prop == \"eval\"))
	(#v == {{ \"v\", #l, #prop }})
Gamma: 	
	(#v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 2.798497
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(! (#prop == \"arguments\"))
	(! (#prop == \"eval\"))
	(#v == {{ \"v\", #l, #prop }})
Gamma: 	
	(#v: $$list_type)
	(#prop: $$string_type)
	(tv: $$type_type)
	(#l: $$object_type)
Preds: 
CMD: goto [(tv = $$list_type)] 2 5
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.798610
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(! (#prop == \"arguments\"))
	(! (#prop == \"eval\"))
	(#v == {{ \"v\", #l, #prop }})
Gamma: 	
	(#v: $$list_type)
	(#prop: $$string_type)
	(tv: $$type_type)
	(#l: $$object_type)
Preds: 
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 3 5
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.798863
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(! (#prop == \"arguments\"))
	(! (#prop == \"eval\"))
	(#v == {{ \"v\", #l, #prop }})
Gamma: 	
	(#v: $$list_type)
	(#prop: $$string_type)
	(tv: $$type_type)
	(#l: $$object_type)
Preds: 
CMD: fv := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 2.799024
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
	(fv: #prop)
Pure Formulae: 	
	(! (#prop == \"arguments\"))
	(! (#prop == \"eval\"))
	(#v == {{ \"v\", #l, #prop }})
Gamma: 	
	(#v: $$list_type)
	(#prop: $$string_type)
	(tv: $$type_type)
	(fv: $$string_type)
	(#l: $$object_type)
Preds: 
CMD: goto [((l-nth(v, 0.) = "v") and ((fv = "eval") or (fv = "arguments")))] 6 5
----------------------------------
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 0)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 8.0) (= x!1 8.0)) 16.0
  (ite (and (= x!0 8.0) (= x!1 7.0)) 17.0
  (ite (and (= x!0 8.0) (= x!1 6.0)) 11.0
  (ite (and (= x!0 8.0) (= x!1 5.0)) 18.0
  (ite (and (= x!0 8.0) (= x!1 4.0)) 14.0
  (ite (and (= x!0 8.0) (= x!1 3.0)) 19.0
  (ite (and (= x!0 8.0) (= x!1 2.0)) 15.0
  (ite (and (= x!0 8.0) (= x!1 1.0)) 20.0
  (ite (and (= x!0 9.0) (= x!1 3.0)) 21.0
  (ite (and (= x!0 9.0) (= x!1 1.0)) 22.0
  (ite (and (= x!0 9.0) (= x!1 0.0)) 18.0
    13.0))))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 0))) StringType
    BooleanType)))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 8.0) 9.0
  (ite (= x!0 9.0) 4.0
    0.0)))
in the ELSE branch
----------------------------------
--5--
TIME: 2.833448
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
	(fv: #prop)
Pure Formulae: 	
	(! (#prop == \"arguments\"))
	(! (#prop == \"eval\"))
	(#v == {{ \"v\", #l, #prop }})
Gamma: 	
	(#v: $$list_type)
	(#prop: $$string_type)
	(tv: $$type_type)
	(fv: $$string_type)
	(#l: $$object_type)
Preds: 
CMD: xret := $$t
----------------------------------
Verified one spec of proc i__checkAssignmentErrors
----------------------------------
----------------------------------
Symbolic execution of i__checkAssignmentErrors
----------------------------------
--0--
TIME: 2.835265
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"eval\" }})
Gamma: 	
	(#v: $$list_type)
	(#l: $$object_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 2.835316
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"eval\" }})
Gamma: 	
	(#v: $$list_type)
	(tv: $$type_type)
	(#l: $$object_type)
Preds: 
CMD: goto [(tv = $$list_type)] 2 5
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.835395
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"eval\" }})
Gamma: 	
	(#v: $$list_type)
	(tv: $$type_type)
	(#l: $$object_type)
Preds: 
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 3 5
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.835469
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"eval\" }})
Gamma: 	
	(#v: $$list_type)
	(tv: $$type_type)
	(#l: $$object_type)
Preds: 
CMD: fv := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 2.835534
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
	(fv: \"eval\")
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"eval\" }})
Gamma: 	
	(#v: $$list_type)
	(tv: $$type_type)
	(fv: $$string_type)
	(#l: $$object_type)
Preds: 
CMD: goto [((l-nth(v, 0.) = "v") and ((fv = "eval") or (fv = "arguments")))] 6 5
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 2.835609
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
	(fv: \"eval\")
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"eval\" }})
Gamma: 	
	(#v: $$list_type)
	(tv: $$type_type)
	(fv: $$string_type)
	(#l: $$object_type)
Preds: 
CMD: xret := "SyntaxError"() 
----------------------------------
----------------------------------
--7--
TIME: 2.835875
STATE:
Heap: 
	_$l_10 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lserr_proto), (default: None)]
Store: 	
	(xret: _$l_10)
	(v: #v)
	(tv: $$list_type)
	(fv: \"eval\")
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"eval\" }})
Gamma: 	
	(xret: $$object_type)
	(#v: $$list_type)
	(tv: $$type_type)
	(fv: $$string_type)
	(#l: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__checkAssignmentErrors
----------------------------------
----------------------------------
Symbolic execution of i__checkAssignmentErrors
----------------------------------
--0--
TIME: 2.836354
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"arguments\" }})
Gamma: 	
	(#v: $$list_type)
	(#l: $$object_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 2.836401
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"arguments\" }})
Gamma: 	
	(#v: $$list_type)
	(tv: $$type_type)
	(#l: $$object_type)
Preds: 
CMD: goto [(tv = $$list_type)] 2 5
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.836477
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"arguments\" }})
Gamma: 	
	(#v: $$list_type)
	(tv: $$type_type)
	(#l: $$object_type)
Preds: 
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 3 5
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.836551
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"arguments\" }})
Gamma: 	
	(#v: $$list_type)
	(tv: $$type_type)
	(#l: $$object_type)
Preds: 
CMD: fv := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 2.836603
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
	(fv: \"arguments\")
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"arguments\" }})
Gamma: 	
	(#v: $$list_type)
	(tv: $$type_type)
	(fv: $$string_type)
	(#l: $$object_type)
Preds: 
CMD: goto [((l-nth(v, 0.) = "v") and ((fv = "eval") or (fv = "arguments")))] 6 5
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 2.836679
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
	(fv: \"arguments\")
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"arguments\" }})
Gamma: 	
	(#v: $$list_type)
	(tv: $$type_type)
	(fv: $$string_type)
	(#l: $$object_type)
Preds: 
CMD: xret := "SyntaxError"() 
----------------------------------
----------------------------------
--7--
TIME: 2.836968
STATE:
Heap: 
	_$l_11 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lserr_proto), (default: None)]
Store: 	
	(xret: _$l_11)
	(v: #v)
	(tv: $$list_type)
	(fv: \"arguments\")
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"arguments\" }})
Gamma: 	
	(xret: $$object_type)
	(#v: $$list_type)
	(tv: $$type_type)
	(fv: $$string_type)
	(#l: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__checkAssignmentErrors
----------------------------------
----------------------------------
Symbolic execution of i__checkAssignmentErrors
----------------------------------
--0--
TIME: 2.837232
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(#v == {{ \"o\", #base, #field }})
Gamma: 	
	(#base: $$object_type)
	(#v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: tv := typeOf(v)
----------------------------------
----------------------------------
--1--
TIME: 2.837313
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(#v == {{ \"o\", #base, #field }})
Gamma: 	
	(#base: $$object_type)
	(#v: $$list_type)
	(tv: $$type_type)
	(#field: $$string_type)
Preds: 
CMD: goto [(tv = $$list_type)] 2 5
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.837395
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(#v == {{ \"o\", #base, #field }})
Gamma: 	
	(#base: $$object_type)
	(#v: $$list_type)
	(tv: $$type_type)
	(#field: $$string_type)
Preds: 
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 3 5
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.837473
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
Pure Formulae: 	
	(#v == {{ \"o\", #base, #field }})
Gamma: 	
	(#base: $$object_type)
	(#v: $$list_type)
	(tv: $$type_type)
	(#field: $$string_type)
Preds: 
CMD: fv := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 2.837527
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
	(fv: #field)
Pure Formulae: 	
	(#v == {{ \"o\", #base, #field }})
Gamma: 	
	(#base: $$object_type)
	(#v: $$list_type)
	(tv: $$type_type)
	(#field: $$string_type)
	(fv: $$string_type)
Preds: 
CMD: goto [((l-nth(v, 0.) = "v") and ((fv = "eval") or (fv = "arguments")))] 6 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 2.837638
STATE:
Heap: 
	
Store: 	
	(v: #v)
	(tv: $$list_type)
	(fv: #field)
Pure Formulae: 	
	(#v == {{ \"o\", #base, #field }})
Gamma: 	
	(#base: $$object_type)
	(#v: $$list_type)
	(tv: $$type_type)
	(#field: $$string_type)
	(fv: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
Verified one spec of proc i__checkAssignmentErrors
----------------------------------
----------------------------------
Symbolic execution of i__checkObjectCoercible
----------------------------------
--0--
TIME: 2.837862
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: xret := $$empty
----------------------------------
----------------------------------
--1--
TIME: 2.837936
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(v: $$undefined_type)
Preds: 
CMD: goto [(v = $$undefined)] 6 2
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 2.838026
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(v: $$undefined_type)
Preds: 
CMD: xret := "TypeError"() 
----------------------------------
----------------------------------
--7--
TIME: 2.838239
STATE:
Heap: 
	_$l_12 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_12)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__checkObjectCoercible
----------------------------------
----------------------------------
Symbolic execution of i__checkObjectCoercible
----------------------------------
--0--
TIME: 2.838676
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 
CMD: xret := $$empty
----------------------------------
----------------------------------
--1--
TIME: 2.838748
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(v: $$null_type)
Preds: 
CMD: goto [(v = $$undefined)] 6 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 2.838849
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(v: $$null_type)
Preds: 
CMD: goto [(v = $$null)] 6 3
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 2.838944
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(v: $$null_type)
Preds: 
CMD: xret := "TypeError"() 
----------------------------------
----------------------------------
--7--
TIME: 2.839150
STATE:
Heap: 
	_$l_13 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_13)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(v: $$null_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__checkObjectCoercible
----------------------------------
----------------------------------
Symbolic execution of i__checkObjectCoercible
----------------------------------
--0--
TIME: 2.839315
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: xret := $$empty
----------------------------------
----------------------------------
--1--
TIME: 2.839388
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$number_type)
	(v: $$number_type)
Preds: 
CMD: goto [(v = $$undefined)] 6 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 2.839550
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$number_type)
	(v: $$number_type)
Preds: 
CMD: goto [(v = $$null)] 6 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 2.839703
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$number_type)
	(v: $$number_type)
Preds: 
CMD: goto [((((typeOf(v) = $$boolean_type) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type)) or (typeOf(v) = $$object_type))] 5 4
----------------------------------
in the THEN branch
----------------------------------
--5--
TIME: 2.839801
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$number_type)
	(v: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__checkObjectCoercible
----------------------------------
----------------------------------
Symbolic execution of i__checkObjectCoercible
----------------------------------
--0--
TIME: 2.839961
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: xret := $$empty
----------------------------------
----------------------------------
--1--
TIME: 2.840033
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$boolean_type)
	(v: $$boolean_type)
Preds: 
CMD: goto [(v = $$undefined)] 6 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 2.840134
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$boolean_type)
	(v: $$boolean_type)
Preds: 
CMD: goto [(v = $$null)] 6 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 2.840290
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$boolean_type)
	(v: $$boolean_type)
Preds: 
CMD: goto [((((typeOf(v) = $$boolean_type) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type)) or (typeOf(v) = $$object_type))] 5 4
----------------------------------
in the THEN branch
----------------------------------
--5--
TIME: 2.840382
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$boolean_type)
	(v: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__checkObjectCoercible
----------------------------------
----------------------------------
Symbolic execution of i__checkObjectCoercible
----------------------------------
--0--
TIME: 2.840549
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: xret := $$empty
----------------------------------
----------------------------------
--1--
TIME: 2.840620
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$string_type)
	(v: $$string_type)
Preds: 
CMD: goto [(v = $$undefined)] 6 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 2.840719
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$string_type)
	(v: $$string_type)
Preds: 
CMD: goto [(v = $$null)] 6 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 2.840822
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$string_type)
	(v: $$string_type)
Preds: 
CMD: goto [((((typeOf(v) = $$boolean_type) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type)) or (typeOf(v) = $$object_type))] 5 4
----------------------------------
in the THEN branch
----------------------------------
--5--
TIME: 2.840914
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$string_type)
	(v: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__checkObjectCoercible
----------------------------------
----------------------------------
Symbolic execution of i__checkObjectCoercible
----------------------------------
--0--
TIME: 2.841070
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(_lvar_v: $$object_type)
Preds: 
CMD: xret := $$empty
----------------------------------
----------------------------------
--1--
TIME: 2.841141
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$object_type)
	(v: $$object_type)
Preds: 
CMD: goto [(v = $$undefined)] 6 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 2.841238
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$object_type)
	(v: $$object_type)
Preds: 
CMD: goto [(v = $$null)] 6 3
----------------------------------
in the ELSE branch
----------------------------------
--3--
TIME: 2.841341
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$object_type)
	(v: $$object_type)
Preds: 
CMD: goto [((((typeOf(v) = $$boolean_type) or (typeOf(v) = $$number_type)) or (typeOf(v) = $$string_type)) or (typeOf(v) = $$object_type))] 5 4
----------------------------------
in the THEN branch
----------------------------------
--5--
TIME: 2.841431
STATE:
Heap: 
	
Store: 	
	(xret: $$empty)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(_lvar_v: $$object_type)
	(v: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__checkObjectCoercible
----------------------------------
----------------------------------
Symbolic execution of i__isCallable
----------------------------------
--0--
TIME: 2.841710
STATE:
Heap: 
	_$l_l |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(l: _$l_l)
Pure Formulae: 	
Gamma: 	
	(l: $$object_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 2.841743
STATE:
Heap: 
	_$l_l |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(l: _$l_l)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 
CMD: goto [(typeOf(l) = $$object_type)] 2 3
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.841803
STATE:
Heap: 
	_$l_l |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(l: _$l_l)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 
CMD: xret := hasField(l,"@call")
----------------------------------
----------------------------------
--3--
TIME: 2.841836
STATE:
Heap: 
	_$l_l |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(l: _$l_l)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isCallable
----------------------------------
----------------------------------
Symbolic execution of i__isCallable
----------------------------------
--0--
TIME: 2.841986
STATE:
Heap: 
	_$l_l |-> [(\"@call\": #y), (default: $$unknown)]
Store: 	
	(l: _$l_l)
Pure Formulae: 	
	(! (#y == None))
Gamma: 	
	(l: $$object_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--1--
TIME: 2.842022
STATE:
Heap: 
	_$l_l |-> [(\"@call\": #y), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(l: _$l_l)
Pure Formulae: 	
	(! (#y == None))
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 
CMD: goto [(typeOf(l) = $$object_type)] 2 3
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.842083
STATE:
Heap: 
	_$l_l |-> [(\"@call\": #y), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(l: _$l_l)
Pure Formulae: 	
	(! (#y == None))
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 
CMD: xret := hasField(l,"@call")
----------------------------------
----------------------------------
--3--
TIME: 2.842167
STATE:
Heap: 
	_$l_l |-> [(\"@call\": #y), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(l: _$l_l)
Pure Formulae: 	
	(! (#y == None))
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__isCallable
----------------------------------
----------------------------------
Symbolic execution of o__getOwnProperty
----------------------------------
--0--
TIME: 2.842352
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 
CMD: x := hasField(l,prop)
----------------------------------
----------------------------------
--1--
TIME: 2.842396
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
	(x: $$f)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(x: $$boolean_type)
Preds: 
CMD: goto [x] 4 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 2.842497
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
	(x: $$f)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(x: $$boolean_type)
Preds: 
CMD: xret := $$undefined
----------------------------------
----------------------------------
--3--
TIME: 2.842591
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
	(x: $$f)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(xret: $$undefined_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
CMD: goto 5
----------------------------------
----------------------------------
--5--
TIME: 2.842722
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
	(x: $$f)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(xret: $$undefined_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
	(x: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__getOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__getOwnProperty
----------------------------------
--0--
TIME: 2.843008
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_34, #dwrit_3_34, #denum_3_34, #dconf_3_34 }}), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_34 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_34, #dwrit_3_34, #denum_3_34, #dconf_3_34 }})
Gamma: 	
	(#prop: $$string_type)
	(#dconf_3_34: $$boolean_type)
	(#dwrit_3_34: $$boolean_type)
	(l: $$object_type)
	(#dx: $$list_type)
	(#l: $$object_type)
	(#denum_3_34: $$boolean_type)
Preds: 
CMD: x := hasField(l,prop)
----------------------------------
----------------------------------
--1--
TIME: 2.843083
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_34, #dwrit_3_34, #denum_3_34, #dconf_3_34 }}), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
	(x: $$t)
Pure Formulae: 	
	(! (#dval_3_34 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_34, #dwrit_3_34, #denum_3_34, #dconf_3_34 }})
Gamma: 	
	(#prop: $$string_type)
	(#dconf_3_34: $$boolean_type)
	(#dwrit_3_34: $$boolean_type)
	(l: $$object_type)
	(#dx: $$list_type)
	(#l: $$object_type)
	(x: $$boolean_type)
	(#denum_3_34: $$boolean_type)
Preds: 
CMD: goto [x] 4 2
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 2.843206
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_34, #dwrit_3_34, #denum_3_34, #dconf_3_34 }}), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
	(x: $$t)
Pure Formulae: 	
	(! (#dval_3_34 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_34, #dwrit_3_34, #denum_3_34, #dconf_3_34 }})
Gamma: 	
	(#prop: $$string_type)
	(#dconf_3_34: $$boolean_type)
	(#dwrit_3_34: $$boolean_type)
	(l: $$object_type)
	(#dx: $$list_type)
	(#l: $$object_type)
	(x: $$boolean_type)
	(#denum_3_34: $$boolean_type)
Preds: 
CMD: xret := [l, prop]
----------------------------------
----------------------------------
--5--
TIME: 2.843285
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_34, #dwrit_3_34, #denum_3_34, #dconf_3_34 }}), (default: $$unknown)]
Store: 	
	(xret: {{ \"d\", #dval_3_34, #dwrit_3_34, #denum_3_34, #dconf_3_34 }})
	(prop: #prop)
	(l: _$l_#l)
	(x: $$t)
Pure Formulae: 	
	(! (#dval_3_34 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_34, #dwrit_3_34, #denum_3_34, #dconf_3_34 }})
Gamma: 	
	(xret: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_34: $$boolean_type)
	(#dwrit_3_34: $$boolean_type)
	(l: $$object_type)
	(#dx: $$list_type)
	(#l: $$object_type)
	(x: $$boolean_type)
	(#denum_3_34: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__getOwnProperty
----------------------------------
----------------------------------
Symbolic execution of getOwnProperty
----------------------------------
--0--
TIME: 2.843719
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: None), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 2.843772
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: None), (default: $$unknown)]
Store: 	
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(class: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(class = "String")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 2.843968
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: None), (default: $$unknown)]
Store: 	
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(class: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := "o__getOwnProperty"(l, prop) with 6
----------------------------------
----------------------------------
--5--
TIME: 2.844391
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
	(class: #cls)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(xret: $$undefined_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(class: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc getOwnProperty
----------------------------------
----------------------------------
Symbolic execution of getOwnProperty
----------------------------------
--0--
TIME: 2.844723
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: {{ \"d\", #dval_3_2, #dwrit_3_2, #denum_3_2, #dconf_3_2 }}), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_2 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_2, #dwrit_3_2, #denum_3_2, #dconf_3_2 }})
Gamma: 	
	(#dwrit_3_2: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_2: $$boolean_type)
	(#dconf_3_2: $$boolean_type)
	(l: $$object_type)
	(#dx: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 2.844836
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: {{ \"d\", #dval_3_2, #dwrit_3_2, #denum_3_2, #dconf_3_2 }}), (default: $$unknown)]
Store: 	
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_2 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_2, #dwrit_3_2, #denum_3_2, #dconf_3_2 }})
Gamma: 	
	(#dwrit_3_2: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_2: $$boolean_type)
	(class: $$string_type)
	(#dconf_3_2: $$boolean_type)
	(l: $$object_type)
	(#dx: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(class = "String")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 2.845032
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: {{ \"d\", #dval_3_2, #dwrit_3_2, #denum_3_2, #dconf_3_2 }}), (default: $$unknown)]
Store: 	
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_2 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_2, #dwrit_3_2, #denum_3_2, #dconf_3_2 }})
Gamma: 	
	(#dwrit_3_2: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_2: $$boolean_type)
	(class: $$string_type)
	(#dconf_3_2: $$boolean_type)
	(l: $$object_type)
	(#dx: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := "o__getOwnProperty"(l, prop) with 6
----------------------------------
----------------------------------
--5--
TIME: 2.845739
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_2, #dwrit_3_2, #denum_3_2, #dconf_3_2 }}), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: {{ \"d\", #dval_3_2, #dwrit_3_2, #denum_3_2, #dconf_3_2 }})
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_2 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_2, #dwrit_3_2, #denum_3_2, #dconf_3_2 }})
Gamma: 	
	(#dwrit_3_2: $$boolean_type)
	(xret: $$list_type)
	(#prop: $$string_type)
	(#denum_3_2: $$boolean_type)
	(class: $$string_type)
	(#dconf_3_2: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dx: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc getOwnProperty
----------------------------------
----------------------------------
Symbolic execution of getProperty
Unfold. Time: 2.846232
----------------------------------
--0--
TIME: 2.884165
STATE:
Heap: 
	_$l_16 |-> [(#prop: None), (\"@proto\": _lvar_168), (\"@class\": _lvar_160), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_16)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_160 == \"String\"))
	(#gp_aux_4 == (\"\" :: (_lvar_162 :: _lvar_161)))
	(#gp_aux_3 == ($$f :: (_lvar_165 :: _lvar_164)))
	(#gp_aux_0 == (_lvar_160 :: (_lvar_171 :: _lvar_170)))
	(#l == _$l_16)
	(#gp_aux_2 == (_$l_16 :: (_lvar_168 :: _lvar_167)))
Gamma: 	
	(_lvar_164: $$list_type)
	(_lvar_161: $$list_type)
	(_lvar_165: $$boolean_type)
	(#prop: $$string_type)
	(#gp_aux_0: $$list_type)
	(#gp_aux_3: $$list_type)
	(_lvar_160: $$string_type)
	(_lvar_167: $$list_type)
	(_lvar_168: $$object_type)
	(_lvar_171: $$string_type)
	(#l: $$object_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(_lvar_170: $$list_type)
	(l: $$object_type)
	(#gp_aux_4: $$list_type)
	(_lvar_162: $$string_type)
Preds: Pi(_lvar_168, #prop, (_lvar_171 :: _lvar_170), #gp_aux_1, (_lvar_168 :: _lvar_167), (_lvar_165 :: _lvar_164), (_lvar_162 :: _lvar_161))
CMD: xret := "getOwnProperty"(l, prop) with 6
----------------------------------
----------------------------------
--1--
TIME: 2.888893
STATE:
Heap: 
	_$l_16 |-> [(#prop: None), (\"@class\": _lvar_160), (\"@proto\": _lvar_168), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_16)
Pure Formulae: 	
	(! (_lvar_160 == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#gp_aux_4 == (\"\" :: (_lvar_162 :: _lvar_161)))
	(#gp_aux_3 == ($$f :: (_lvar_165 :: _lvar_164)))
	(#gp_aux_0 == (_lvar_160 :: (_lvar_171 :: _lvar_170)))
	(#l == _$l_16)
	(#gp_aux_2 == (_$l_16 :: (_lvar_168 :: _lvar_167)))
Gamma: 	
	(_lvar_164: $$list_type)
	(_lvar_161: $$list_type)
	(_lvar_165: $$boolean_type)
	(#prop: $$string_type)
	(#gp_aux_0: $$list_type)
	(#gp_aux_3: $$list_type)
	(xret: $$undefined_type)
	(_lvar_160: $$string_type)
	(_lvar_167: $$list_type)
	(_lvar_168: $$object_type)
	(_lvar_171: $$string_type)
	(#l: $$object_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(_lvar_170: $$list_type)
	(l: $$object_type)
	(#gp_aux_4: $$list_type)
	(_lvar_162: $$string_type)
Preds: Pi(_lvar_168, #prop, (_lvar_171 :: _lvar_170), #gp_aux_1, (_lvar_168 :: _lvar_167), (_lvar_165 :: _lvar_164), (_lvar_162 :: _lvar_161))
CMD: goto [(xret = $$undefined)] 2 5
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.890146
STATE:
Heap: 
	_$l_16 |-> [(#prop: None), (\"@class\": _lvar_160), (\"@proto\": _lvar_168), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_16)
Pure Formulae: 	
	(! (_lvar_160 == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#gp_aux_4 == (\"\" :: (_lvar_162 :: _lvar_161)))
	(#gp_aux_0 == (_lvar_160 :: (_lvar_171 :: _lvar_170)))
	(#gp_aux_3 == ($$f :: (_lvar_165 :: _lvar_164)))
	(#l == _$l_16)
	(#gp_aux_2 == (_$l_16 :: (_lvar_168 :: _lvar_167)))
Gamma: 	
	(_lvar_164: $$list_type)
	(_lvar_161: $$list_type)
	(#prop: $$string_type)
	(_lvar_165: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(#gp_aux_0: $$list_type)
	(_lvar_160: $$string_type)
	(xret: $$undefined_type)
	(_lvar_168: $$object_type)
	(_lvar_167: $$list_type)
	(_lvar_171: $$string_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#gp_aux_2: $$list_type)
	(_lvar_170: $$list_type)
	(l: $$object_type)
	(_lvar_162: $$string_type)
	(#gp_aux_4: $$list_type)
Preds: Pi(_lvar_168, #prop, (_lvar_171 :: _lvar_170), #gp_aux_1, (_lvar_168 :: _lvar_167), (_lvar_165 :: _lvar_164), (_lvar_162 :: _lvar_161))
CMD: proto := [l, "@proto"]
----------------------------------
----------------------------------
--3--
TIME: 2.890521
STATE:
Heap: 
	_$l_16 |-> [(#prop: None), (\"@class\": _lvar_160), (\"@proto\": _lvar_168), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(proto: _lvar_168)
	(prop: #prop)
	(l: _$l_16)
Pure Formulae: 	
	(! (_lvar_160 == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#gp_aux_4 == (\"\" :: (_lvar_162 :: _lvar_161)))
	(#gp_aux_3 == ($$f :: (_lvar_165 :: _lvar_164)))
	(#gp_aux_0 == (_lvar_160 :: (_lvar_171 :: _lvar_170)))
	(#l == _$l_16)
	(#gp_aux_2 == (_$l_16 :: (_lvar_168 :: _lvar_167)))
Gamma: 	
	(_lvar_164: $$list_type)
	(_lvar_161: $$list_type)
	(_lvar_165: $$boolean_type)
	(#prop: $$string_type)
	(#gp_aux_0: $$list_type)
	(#gp_aux_3: $$list_type)
	(xret: $$undefined_type)
	(_lvar_160: $$string_type)
	(_lvar_167: $$list_type)
	(_lvar_168: $$object_type)
	(_lvar_171: $$string_type)
	(proto: $$object_type)
	(#l: $$object_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(_lvar_170: $$list_type)
	(l: $$object_type)
	(#gp_aux_4: $$list_type)
	(_lvar_162: $$string_type)
Preds: Pi(_lvar_168, #prop, (_lvar_171 :: _lvar_170), #gp_aux_1, (_lvar_168 :: _lvar_167), (_lvar_165 :: _lvar_164), (_lvar_162 :: _lvar_161))
CMD: goto [(proto = $$null)] 5 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 2.891029
STATE:
Heap: 
	_$l_16 |-> [(#prop: None), (\"@class\": _lvar_160), (\"@proto\": _lvar_168), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(proto: _lvar_168)
	(prop: #prop)
	(l: _$l_16)
Pure Formulae: 	
	(! (_lvar_160 == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#gp_aux_4 == (\"\" :: (_lvar_162 :: _lvar_161)))
	(#gp_aux_0 == (_lvar_160 :: (_lvar_171 :: _lvar_170)))
	(#gp_aux_3 == ($$f :: (_lvar_165 :: _lvar_164)))
	(#l == _$l_16)
	(#gp_aux_2 == (_$l_16 :: (_lvar_168 :: _lvar_167)))
Gamma: 	
	(_lvar_164: $$list_type)
	(_lvar_161: $$list_type)
	(#prop: $$string_type)
	(_lvar_165: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(#gp_aux_0: $$list_type)
	(_lvar_160: $$string_type)
	(xret: $$undefined_type)
	(_lvar_168: $$object_type)
	(_lvar_167: $$list_type)
	(proto: $$object_type)
	(_lvar_171: $$string_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#gp_aux_2: $$list_type)
	(_lvar_170: $$list_type)
	(l: $$object_type)
	(_lvar_162: $$string_type)
	(#gp_aux_4: $$list_type)
Preds: Pi(_lvar_168, #prop, (_lvar_171 :: _lvar_170), #gp_aux_1, (_lvar_168 :: _lvar_167), (_lvar_165 :: _lvar_164), (_lvar_162 :: _lvar_161))
CMD: xret := "getProperty"(proto, prop) with 6
----------------------------------
Fold. Time: 2.892040
----------------------------------
--5--
TIME: 2.892977
STATE:
Heap: 
	
Store: 	
	(xret: #gp_aux_1)
	(proto: _lvar_168)
	(prop: #prop)
	(l: _$l_16)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_160 == \"String\"))
	(#gp_aux_4 == (\"\" :: (_lvar_162 :: _lvar_161)))
	(#gp_aux_3 == ($$f :: (_lvar_165 :: _lvar_164)))
	(#gp_aux_0 == (_lvar_160 :: (_lvar_171 :: _lvar_170)))
	(#l == _$l_16)
	(#gp_aux_2 == (_$l_16 :: (_lvar_168 :: _lvar_167)))
Gamma: 	
	(_lvar_164: $$list_type)
	(_lvar_161: $$list_type)
	(#prop: $$string_type)
	(_lvar_165: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(#gp_aux_0: $$list_type)
	(_lvar_160: $$string_type)
	(_lvar_168: $$object_type)
	(_lvar_167: $$list_type)
	(proto: $$object_type)
	(_lvar_171: $$string_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#gp_aux_2: $$list_type)
	(_lvar_170: $$list_type)
	(l: $$object_type)
	(_lvar_162: $$string_type)
	(#gp_aux_4: $$list_type)
Preds: Pi(_$l_16, #prop, (_lvar_160 :: (_lvar_171 :: _lvar_170)), #gp_aux_1, (_$l_16 :: (_lvar_168 :: _lvar_167)), ($$f :: (_lvar_165 :: _lvar_164)), (\"\" :: (_lvar_162 :: _lvar_161)))
CMD: skip
----------------------------------
Verified one spec of proc getProperty
----------------------------------
--0--
TIME: 2.893970
STATE:
Heap: 
	_$l_15 |-> [(#prop: {{ \"d\", _lvar_155, _lvar_157, _lvar_158, _lvar_159 }}), (\"@class\": _lvar_156), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_15)
Pure Formulae: 	
	(! (_lvar_155 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_156 == \"String\"))
	(#gp_aux_1 == {{ \"d\", _lvar_155, _lvar_157, _lvar_158, _lvar_159 }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_0 == {{ _lvar_156 }})
	(#gp_aux_3 == {{ $$f }})
	(#l == _$l_15)
	(#gp_aux_2 == {{ _$l_15 }})
Gamma: 	
	(_lvar_156: $$string_type)
	(#prop: $$string_type)
	(#gp_aux_0: $$list_type)
	(#gp_aux_3: $$list_type)
	(#gp_aux_1: $$list_type)
	(#l: $$object_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(_lvar_158: $$boolean_type)
	(l: $$object_type)
	(_lvar_159: $$boolean_type)
	(#gp_aux_4: $$list_type)
	(_lvar_157: $$boolean_type)
Preds: 
CMD: xret := "getOwnProperty"(l, prop) with 6
----------------------------------
----------------------------------
--1--
TIME: 2.895147
STATE:
Heap: 
	_$l_15 |-> [(\"@class\": _lvar_156), (#prop: {{ \"d\", _lvar_180, _lvar_181, _lvar_182, _lvar_183 }}), (default: $$unknown)]
Store: 	
	(xret: {{ \"d\", _lvar_180, _lvar_181, _lvar_182, _lvar_183 }})
	(prop: #prop)
	(l: _$l_15)
Pure Formulae: 	
	(! (_lvar_156 == \"String\"))
	(! (_lvar_180 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#gp_aux_1 == {{ \"d\", _lvar_180, _lvar_181, _lvar_182, _lvar_183 }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_0 == {{ _lvar_156 }})
	(#gp_aux_3 == {{ $$f }})
	(#l == _$l_15)
	(#gp_aux_2 == {{ _$l_15 }})
Gamma: 	
	(_lvar_156: $$string_type)
	(_lvar_181: $$boolean_type)
	(#prop: $$string_type)
	(#gp_aux_0: $$list_type)
	(#gp_aux_3: $$list_type)
	(#gp_aux_1: $$list_type)
	(xret: $$list_type)
	(_lvar_183: $$boolean_type)
	(#l: $$object_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(_lvar_182: $$boolean_type)
	(l: $$object_type)
	(#gp_aux_4: $$list_type)
Preds: 
CMD: goto [(xret = $$undefined)] 2 5
----------------------------------
in the ELSE branch
Fold. Time: 2.905928
----------------------------------
--5--
TIME: 2.908077
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", _lvar_180, _lvar_181, _lvar_182, _lvar_183 }})
	(prop: #prop)
	(l: _$l_15)
Pure Formulae: 	
	(! (_lvar_180 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_156 == \"String\"))
	(#gp_aux_1 == {{ \"d\", _lvar_180, _lvar_181, _lvar_182, _lvar_183 }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#gp_aux_0 == {{ _lvar_156 }})
	(#l == _$l_15)
	(#gp_aux_2 == {{ _$l_15 }})
Gamma: 	
	(_lvar_156: $$string_type)
	(_lvar_181: $$boolean_type)
	(#prop: $$string_type)
	(#gp_aux_0: $$list_type)
	(#gp_aux_3: $$list_type)
	(#gp_aux_1: $$list_type)
	(xret: $$list_type)
	(_lvar_183: $$boolean_type)
	(#l: $$object_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(_lvar_182: $$boolean_type)
	(l: $$object_type)
	(#gp_aux_4: $$list_type)
Preds: Pi(_$l_15, #prop, {{ _lvar_156 }}, {{ \"d\", _lvar_180, _lvar_181, _lvar_182, _lvar_183 }}, {{ _$l_15 }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
Verified one spec of proc getProperty
----------------------------------
--0--
TIME: 2.909117
STATE:
Heap: 
	_$l_14 |-> [(#prop: None), (\"@class\": _lvar_154), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_14)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_154 == \"String\"))
	(#gp_aux_1 == $$undefined)
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_0 == {{ _lvar_154 }})
	(#gp_aux_3 == {{ $$f }})
	(#l == _$l_14)
	(#gp_aux_2 == {{ _$l_14 }})
Gamma: 	
	(_lvar_154: $$string_type)
	(#prop: $$string_type)
	(#gp_aux_0: $$list_type)
	(#gp_aux_3: $$list_type)
	(#gp_aux_1: $$undefined_type)
	(#l: $$object_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#gp_aux_4: $$list_type)
Preds: 
CMD: xret := "getOwnProperty"(l, prop) with 6
----------------------------------
----------------------------------
--1--
TIME: 2.909874
STATE:
Heap: 
	_$l_14 |-> [(#prop: None), (\"@class\": _lvar_154), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_14)
Pure Formulae: 	
	(! (_lvar_154 == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#gp_aux_1 == $$undefined)
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_0 == {{ _lvar_154 }})
	(#gp_aux_3 == {{ $$f }})
	(#l == _$l_14)
	(#gp_aux_2 == {{ _$l_14 }})
Gamma: 	
	(_lvar_154: $$string_type)
	(#prop: $$string_type)
	(#gp_aux_0: $$list_type)
	(#gp_aux_3: $$list_type)
	(#gp_aux_1: $$undefined_type)
	(xret: $$undefined_type)
	(#l: $$object_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#gp_aux_4: $$list_type)
Preds: 
CMD: goto [(xret = $$undefined)] 2 5
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 2.910570
STATE:
Heap: 
	_$l_14 |-> [(#prop: None), (\"@class\": _lvar_154), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_14)
Pure Formulae: 	
	(! (_lvar_154 == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#gp_aux_1 == $$undefined)
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#gp_aux_0 == {{ _lvar_154 }})
	(#l == _$l_14)
	(#gp_aux_2 == {{ _$l_14 }})
Gamma: 	
	(_lvar_154: $$string_type)
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#gp_aux_0: $$list_type)
	(#gp_aux_1: $$undefined_type)
	(xret: $$undefined_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#gp_aux_2: $$list_type)
	(l: $$object_type)
	(#gp_aux_4: $$list_type)
Preds: 
CMD: proto := [l, "@proto"]
----------------------------------
----------------------------------
--3--
TIME: 2.910803
STATE:
Heap: 
	_$l_14 |-> [(#prop: None), (\"@class\": _lvar_154), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(proto: $$null)
	(prop: #prop)
	(l: _$l_14)
Pure Formulae: 	
	(! (_lvar_154 == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#gp_aux_1 == $$undefined)
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_0 == {{ _lvar_154 }})
	(#gp_aux_3 == {{ $$f }})
	(#l == _$l_14)
	(#gp_aux_2 == {{ _$l_14 }})
Gamma: 	
	(_lvar_154: $$string_type)
	(#prop: $$string_type)
	(#gp_aux_0: $$list_type)
	(#gp_aux_3: $$list_type)
	(#gp_aux_1: $$undefined_type)
	(xret: $$undefined_type)
	(proto: $$null_type)
	(#l: $$object_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#gp_aux_4: $$list_type)
Preds: 
CMD: goto [(proto = $$null)] 5 4
----------------------------------
in the THEN branch
Fold. Time: 2.911033
----------------------------------
--5--
TIME: 2.911773
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(proto: $$null)
	(prop: #prop)
	(l: _$l_14)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_154 == \"String\"))
	(#gp_aux_1 == $$undefined)
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#gp_aux_0 == {{ _lvar_154 }})
	(#l == _$l_14)
	(#gp_aux_2 == {{ _$l_14 }})
Gamma: 	
	(_lvar_154: $$string_type)
	(#prop: $$string_type)
	(#gp_aux_0: $$list_type)
	(#gp_aux_3: $$list_type)
	(#gp_aux_1: $$undefined_type)
	(xret: $$undefined_type)
	(proto: $$null_type)
	(#l: $$object_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#gp_aux_4: $$list_type)
Preds: Pi(_$l_14, #prop, {{ _lvar_154 }}, $$undefined, {{ _$l_14 }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
Verified one spec of proc getProperty
----------------------------------
----------------------------------
Symbolic execution of get
----------------------------------
--0--
TIME: 2.913210
STATE:
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(! (#dval_28 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }})
Gamma: 	
	(#dwrit_28: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_28: $$boolean_type)
	(#l: $$object_type)
	(#denum_28: $$boolean_type)
Preds: Pi(#l, #prop, #g_aux_0, {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: xret := "getProperty"(l, prop) with 12
----------------------------------
----------------------------------
--1--
TIME: 2.913543
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }})
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(! (#dval_28 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }})
Gamma: 	
	(#dwrit_28: $$boolean_type)
	(xret: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_28: $$boolean_type)
	(#l: $$object_type)
	(#denum_28: $$boolean_type)
Preds: Pi(#l, #prop, #g_aux_0, {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(xret = $$undefined)] 11 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 2.914633
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }})
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(! (#dval_28 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }})
Gamma: 	
	(#dwrit_28: $$boolean_type)
	(xret: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_28: $$boolean_type)
	(#l: $$object_type)
	(#denum_28: $$boolean_type)
Preds: Pi(#l, #prop, #g_aux_0, {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: d := l-nth(xret, 0.)
----------------------------------
----------------------------------
--3--
TIME: 2.914755
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }})
	(d: \"d\")
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(! (#dval_28 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }})
Gamma: 	
	(#dwrit_28: $$boolean_type)
	(xret: $$list_type)
	(d: $$string_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_28: $$boolean_type)
	(#l: $$object_type)
	(#denum_28: $$boolean_type)
Preds: Pi(#l, #prop, #g_aux_0, {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: xret := l-nth(xret, 1.)
----------------------------------
----------------------------------
--4--
TIME: 2.914861
STATE:
Heap: 
	
Store: 	
	(xret: #dval_28)
	(d: \"d\")
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(! (#dval_28 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }})
Gamma: 	
	(#dwrit_28: $$boolean_type)
	(d: $$string_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_28: $$boolean_type)
	(#l: $$object_type)
	(#denum_28: $$boolean_type)
Preds: Pi(#l, #prop, #g_aux_0, {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(d = "d")] 11 5
----------------------------------
in the THEN branch
----------------------------------
--11--
TIME: 2.915002
STATE:
Heap: 
	
Store: 	
	(xret: #dval_28)
	(d: \"d\")
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(! (#dval_28 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }})
Gamma: 	
	(#dwrit_28: $$boolean_type)
	(d: $$string_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_28: $$boolean_type)
	(#l: $$object_type)
	(#denum_28: $$boolean_type)
Preds: Pi(#l, #prop, #g_aux_0, {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc get
----------------------------------
----------------------------------
Symbolic execution of get
----------------------------------
--0--
TIME: 2.915383
STATE:
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(#g_aux_1 == $$undefined)
Gamma: 	
	(#prop: $$string_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: xret := "getProperty"(l, prop) with 12
----------------------------------
----------------------------------
--1--
TIME: 2.915704
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(#g_aux_1 == $$undefined)
Gamma: 	
	(#prop: $$string_type)
	(xret: $$undefined_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(xret = $$undefined)] 11 2
----------------------------------
in the THEN branch
----------------------------------
--11--
TIME: 2.915823
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(#g_aux_1 == $$undefined)
Gamma: 	
	(#prop: $$string_type)
	(xret: $$undefined_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc get
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.916158
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (#dval_39 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 2.916319
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (#dval_39 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rtype := l-nth(v, 0.)
----------------------------------
----------------------------------
--2--
TIME: 2.916404
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
	(rtype: \"o\")
Pure Formulae: 	
	(! (#dval_39 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(rtype: $$string_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [((rtype = "v") or (rtype = "o"))] 3 28
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.916537
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
	(rtype: \"o\")
Pure Formulae: 	
	(! (#dval_39 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(rtype: $$string_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--4--
TIME: 2.916621
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
	(rtype: \"o\")
	(rbase: #obj)
Pure Formulae: 	
	(! (#dval_39 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--5--
TIME: 2.916707
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
	(rfield: #field)
	(rtype: \"o\")
	(rbase: #obj)
Pure Formulae: 	
	(! (#dval_39 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 30 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 2.916889
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
	(rfield: #field)
	(rtype: \"o\")
	(rbase: #obj)
Pure Formulae: 	
	(! (#dval_39 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--7--
TIME: 2.917439
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"o\")
	(rbase: #obj)
Pure Formulae: 	
	(! (#dval_39 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [prim] 8 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 2.917750
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"o\")
	(rbase: #obj)
Pure Formulae: 	
	(! (#dval_39 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 21 23
----------------------------------
in the THEN branch
----------------------------------
--21--
TIME: 2.917929
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"o\")
	(rbase: #obj)
Pure Formulae: 	
	(! (#dval_39 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: xret := "get"(rbase, rfield) with 31
----------------------------------
----------------------------------
--22--
TIME: 2.918455
STATE:
Heap: 
	
Store: 	
	(xret: #dval_39)
	(v: {{ \"o\", #obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"o\")
	(rbase: #obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (#dval_39 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto 29
----------------------------------
----------------------------------
--29--
TIME: 2.918589
STATE:
Heap: 
	
Store: 	
	(xret: #dval_39)
	(v: {{ \"o\", #obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"o\")
	(rbase: #obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (#dval_39 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.919191
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 2.919279
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
Preds: 
CMD: rtype := l-nth(v, 0.)
----------------------------------
----------------------------------
--2--
TIME: 2.919328
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rtype: \"v\")
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rtype: $$string_type)
Preds: 
CMD: goto [((rtype = "v") or (rtype = "o"))] 3 28
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.919414
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rtype: \"v\")
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rtype: $$string_type)
Preds: 
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--4--
TIME: 2.919464
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rtype: \"v\")
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--5--
TIME: 2.919515
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(rtype: \"v\")
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: goto [(rbase = $$undefined)] 30 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 2.919637
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(rtype: \"v\")
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--7--
TIME: 2.920207
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: goto [prim] 8 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 2.920357
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: goto [(l-nth(v, 0.) = "o")] 21 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 2.920503
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: goto [(rbase = $lg)] 24 26
----------------------------------
in the ELSE branch
----------------------------------
--26--
TIME: 2.920762
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: xret := [rbase, rfield]
----------------------------------
----------------------------------
--27--
TIME: 2.920846
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(xret: #value)
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: goto 29
----------------------------------
----------------------------------
--29--
TIME: 2.920926
STATE:
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(xret: #value)
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.921237
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 2.921365
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rtype := l-nth(v, 0.)
----------------------------------
----------------------------------
--2--
TIME: 2.921474
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
	(rtype: \"v\")
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [((rtype = "v") or (rtype = "o"))] 3 28
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.921605
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
	(rtype: \"v\")
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--4--
TIME: 2.921689
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
	(rtype: \"v\")
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--5--
TIME: 2.921775
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
	(rfield: #field)
	(rtype: \"v\")
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 30 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 2.921950
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
	(rfield: #field)
	(rtype: \"v\")
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--7--
TIME: 2.922748
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [prim] 8 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 2.922974
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 21 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 2.923231
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $lg)] 24 26
----------------------------------
in the THEN branch
----------------------------------
--24--
TIME: 2.923409
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: xret := "get"(rbase, rfield) with 31
----------------------------------
----------------------------------
--25--
TIME: 2.923988
STATE:
Heap: 
	
Store: 	
	(xret: #dval_40)
	(v: {{ \"v\", $lg, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (#dval_40 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto 29
----------------------------------
----------------------------------
--29--
TIME: 2.924116
STATE:
Heap: 
	
Store: 	
	(xret: #dval_40)
	(v: {{ \"v\", $lg, #field }})
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (#dval_40 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.924612
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 2.924755
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rtype := l-nth(v, 0.)
----------------------------------
----------------------------------
--2--
TIME: 2.924856
STATE:
Heap: 
	
Store: 	
	(rtype: \"o\")
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rtype: $$string_type)
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [((rtype = "v") or (rtype = "o"))] 3 28
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.925124
STATE:
Heap: 
	
Store: 	
	(rtype: \"o\")
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rtype: $$string_type)
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--4--
TIME: 2.925263
STATE:
Heap: 
	
Store: 	
	(rtype: \"o\")
	(rbase: #obj)
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--5--
TIME: 2.925418
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(rtype: \"o\")
	(rbase: #obj)
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 30 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 2.926058
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(rtype: \"o\")
	(rbase: #obj)
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--7--
TIME: 2.926756
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(prim: $$f)
	(rtype: \"o\")
	(rbase: #obj)
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [prim] 8 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 2.927067
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(prim: $$f)
	(rtype: \"o\")
	(rbase: #obj)
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 21 23
----------------------------------
in the THEN branch
----------------------------------
--21--
TIME: 2.927474
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(prim: $$f)
	(rtype: \"o\")
	(rbase: #obj)
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: xret := "get"(rbase, rfield) with 31
----------------------------------
----------------------------------
--22--
TIME: 2.928137
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(rfield: #field)
	(prim: $$f)
	(rtype: \"o\")
	(rbase: #obj)
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(xret: $$undefined_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto 29
----------------------------------
----------------------------------
--29--
TIME: 2.928268
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(rfield: #field)
	(prim: $$f)
	(rtype: \"o\")
	(rbase: #obj)
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(xret: $$undefined_type)
	(prim: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.928790
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 2.928929
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rtype := l-nth(v, 0.)
----------------------------------
----------------------------------
--2--
TIME: 2.929029
STATE:
Heap: 
	
Store: 	
	(rtype: \"v\")
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rtype: $$string_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [((rtype = "v") or (rtype = "o"))] 3 28
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.929171
STATE:
Heap: 
	
Store: 	
	(rtype: \"v\")
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rtype: $$string_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--4--
TIME: 2.929269
STATE:
Heap: 
	
Store: 	
	(rtype: \"v\")
	(rbase: $lg)
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rtype: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--5--
TIME: 2.929373
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(rtype: \"v\")
	(rbase: $lg)
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 30 6
----------------------------------
in the ELSE branch
----------------------------------
--6--
TIME: 2.929602
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(rtype: \"v\")
	(rbase: $lg)
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--7--
TIME: 2.929994
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [prim] 8 20
----------------------------------
in the ELSE branch
----------------------------------
--20--
TIME: 2.930183
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 21 23
----------------------------------
in the ELSE branch
----------------------------------
--23--
TIME: 2.930467
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $lg)] 24 26
----------------------------------
in the THEN branch
----------------------------------
--24--
TIME: 2.930622
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: xret := "get"(rbase, rfield) with 31
----------------------------------
----------------------------------
--25--
TIME: 2.931084
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(xret: $$undefined_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto 29
----------------------------------
----------------------------------
--29--
TIME: 2.931194
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(rfield: #field)
	(prim: $$f)
	(rtype: \"v\")
	(rbase: $lg)
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(rfield: $$string_type)
	(xret: $$undefined_type)
	(prim: $$boolean_type)
	(rtype: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.931599
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 2.931696
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--29--
TIME: 2.931768
STATE:
Heap: 
	
Store: 	
	(xret: $$null)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$null_type)
	(v: $$null_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.931919
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$object_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 2.931982
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$object_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--29--
TIME: 2.932012
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#v: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.932146
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 2.932209
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--29--
TIME: 2.932239
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.932443
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 2.932507
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--29--
TIME: 2.932571
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.932818
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 2.932976
STATE:
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--29--
TIME: 2.933046
STATE:
Heap: 
	
Store: 	
	(xret: #v)
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(#v: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.933454
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the ELSE branch
----------------------------------
--28--
TIME: 2.933635
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: xret := v
----------------------------------
----------------------------------
--29--
TIME: 2.933773
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$undefined_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.934088
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 2.934235
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: rtype := l-nth(v, 0.)
----------------------------------
----------------------------------
--2--
TIME: 2.934317
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", $$undefined, #field }})
	(rtype: \"o\")
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
	(rtype: $$string_type)
Preds: 
CMD: goto [((rtype = "v") or (rtype = "o"))] 3 28
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.934463
STATE:
Heap: 
	
Store: 	
	(v: {{ \"o\", $$undefined, #field }})
	(rtype: \"o\")
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
	(rtype: $$string_type)
Preds: 
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--4--
TIME: 2.935509
STATE:
Heap: 
	
Store: 	
	(rtype: \"o\")
	(rbase: $$undefined)
	(v: {{ \"o\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(rtype: $$string_type)
	(rbase: $$undefined_type)
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--5--
TIME: 2.935684
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(rtype: \"o\")
	(rbase: $$undefined)
	(v: {{ \"o\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(rfield: $$string_type)
	(rtype: $$string_type)
	(rbase: $$undefined_type)
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: goto [(rbase = $$undefined)] 30 6
----------------------------------
in the THEN branch
----------------------------------
--30--
TIME: 2.935913
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(rtype: \"o\")
	(rbase: $$undefined)
	(v: {{ \"o\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(rfield: $$string_type)
	(rtype: $$string_type)
	(rbase: $$undefined_type)
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: xret := "ReferenceError"() 
----------------------------------
----------------------------------
--31--
TIME: 2.936420
STATE:
Heap: 
	_$l_17 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_17)
	(rfield: #field)
	(rtype: \"o\")
	(rbase: $$undefined)
	(v: {{ \"o\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(xret: $$object_type)
	(rfield: $$string_type)
	(rtype: $$string_type)
	(rbase: $$undefined_type)
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of i__getValue
----------------------------------
--0--
TIME: 2.936824
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 28
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 2.936911
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: rtype := l-nth(v, 0.)
----------------------------------
----------------------------------
--2--
TIME: 2.936999
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $$undefined, #field }})
	(rtype: \"v\")
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
	(rtype: $$string_type)
Preds: 
CMD: goto [((rtype = "v") or (rtype = "o"))] 3 28
----------------------------------
in the THEN branch
----------------------------------
--3--
TIME: 2.937089
STATE:
Heap: 
	
Store: 	
	(v: {{ \"v\", $$undefined, #field }})
	(rtype: \"v\")
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
	(rtype: $$string_type)
Preds: 
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--4--
TIME: 2.937186
STATE:
Heap: 
	
Store: 	
	(rtype: \"v\")
	(rbase: $$undefined)
	(v: {{ \"v\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(rtype: $$string_type)
	(rbase: $$undefined_type)
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--5--
TIME: 2.937287
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(rtype: \"v\")
	(rbase: $$undefined)
	(v: {{ \"v\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(rfield: $$string_type)
	(rtype: $$string_type)
	(rbase: $$undefined_type)
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: goto [(rbase = $$undefined)] 30 6
----------------------------------
in the THEN branch
----------------------------------
--30--
TIME: 2.937423
STATE:
Heap: 
	
Store: 	
	(rfield: #field)
	(rtype: \"v\")
	(rbase: $$undefined)
	(v: {{ \"v\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(rfield: $$string_type)
	(rtype: $$string_type)
	(rbase: $$undefined_type)
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: xret := "ReferenceError"() 
----------------------------------
----------------------------------
--31--
TIME: 2.937742
STATE:
Heap: 
	_$l_18 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_18)
	(rfield: #field)
	(rtype: \"v\")
	(rbase: $$undefined)
	(v: {{ \"v\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(xret: $$object_type)
	(rfield: $$string_type)
	(rtype: $$string_type)
	(rbase: $$undefined_type)
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__getValue
----------------------------------
----------------------------------
Symbolic execution of hasProperty
----------------------------------
--0--
TIME: 2.939260
STATE:
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #gp_aux_0, #gp_aux_1, #gp_aux_2, #gp_aux_3, #gp_aux_4)
CMD: xret := "getProperty"(l, prop) with 2
----------------------------------
----------------------------------
--1--
TIME: 2.939576
STATE:
Heap: 
	
Store: 	
	(xret: #gp_aux_1)
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #gp_aux_0, #gp_aux_1, #gp_aux_2, #gp_aux_3, #gp_aux_4)
CMD: xret := (not (xret = $$undefined))
----------------------------------
Verified one spec of proc hasProperty
----------------------------------
----------------------------------
Symbolic execution of deleteProperty
Unfold. Time: 2.939841
----------------------------------
--0--
TIME: 2.965657
STATE:
Heap: 
	_$l_21 |-> [(#prop: None), (\"@proto\": _lvar_200), (\"@class\": _lvar_192), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_21)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_192 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_194 :: _lvar_193)))
	(#g_aux_2 == (_$l_21 :: (_lvar_200 :: _lvar_199)))
	(#desc == $$undefined)
	(#gp_aux_4 == (\"\" :: (_lvar_194 :: _lvar_193)))
	(#gp_aux_3 == ($$f :: (_lvar_197 :: _lvar_196)))
	(#g_aux_3 == ($$f :: (_lvar_197 :: _lvar_196)))
	(#clsx == (_lvar_192 :: (_lvar_203 :: _lvar_202)))
	(#l == _$l_21)
	(#gp_aux_2 == (_$l_21 :: (_lvar_200 :: _lvar_199)))
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(#clsx: $$list_type)
	(_lvar_200: $$object_type)
	(_lvar_194: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(_lvar_203: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(_lvar_199: $$list_type)
	(_lvar_193: $$list_type)
	(_lvar_202: $$list_type)
	(#desc: $$undefined_type)
	(#gp_aux_4: $$list_type)
	(_lvar_196: $$list_type)
	(_lvar_197: $$boolean_type)
	(_lvar_192: $$string_type)
Preds: Pi(_lvar_200, #prop, (_lvar_203 :: _lvar_202), $$undefined, (_lvar_200 :: _lvar_199), (_lvar_197 :: _lvar_196), (_lvar_194 :: _lvar_193))
CMD: xret := "getOwnProperty"(l, prop) with 11
----------------------------------
Fold. Time: 2.968713
----------------------------------
--1--
TIME: 2.970356
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_21)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_192 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_194 :: _lvar_193)))
	(#g_aux_2 == (_$l_21 :: (_lvar_200 :: _lvar_199)))
	(#desc == $$undefined)
	(#gp_aux_4 == (\"\" :: (_lvar_194 :: _lvar_193)))
	(#gp_aux_3 == ($$f :: (_lvar_197 :: _lvar_196)))
	(#g_aux_3 == ($$f :: (_lvar_197 :: _lvar_196)))
	(#clsx == (_lvar_192 :: (_lvar_203 :: _lvar_202)))
	(#l == _$l_21)
	(#gp_aux_2 == (_$l_21 :: (_lvar_200 :: _lvar_199)))
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#clsx: $$list_type)
	(_lvar_200: $$object_type)
	(_lvar_194: $$string_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#gp_aux_2: $$list_type)
	(#g_aux_4: $$list_type)
	(_lvar_203: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_199: $$list_type)
	(_lvar_193: $$list_type)
	(#desc: $$undefined_type)
	(_lvar_202: $$list_type)
	(_lvar_196: $$list_type)
	(#gp_aux_4: $$list_type)
	(_lvar_197: $$boolean_type)
	(_lvar_192: $$string_type)
Preds: Pi(_$l_21, #prop, (_lvar_192 :: (_lvar_203 :: _lvar_202)), $$undefined, (_$l_21 :: (_lvar_200 :: _lvar_199)), ($$f :: (_lvar_197 :: _lvar_196)), (\"\" :: (_lvar_194 :: _lvar_193)))
CMD: goto [(xret = $$undefined)] 5 2
----------------------------------
in the THEN branch
----------------------------------
--5--
TIME: 2.971216
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_21)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_192 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_194 :: _lvar_193)))
	(#g_aux_2 == (_$l_21 :: (_lvar_200 :: _lvar_199)))
	(#desc == $$undefined)
	(#gp_aux_4 == (\"\" :: (_lvar_194 :: _lvar_193)))
	(#gp_aux_3 == ($$f :: (_lvar_197 :: _lvar_196)))
	(#g_aux_3 == ($$f :: (_lvar_197 :: _lvar_196)))
	(#clsx == (_lvar_192 :: (_lvar_203 :: _lvar_202)))
	(#l == _$l_21)
	(#gp_aux_2 == (_$l_21 :: (_lvar_200 :: _lvar_199)))
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#clsx: $$list_type)
	(_lvar_200: $$object_type)
	(_lvar_194: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(_lvar_203: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(_lvar_199: $$list_type)
	(_lvar_193: $$list_type)
	(_lvar_202: $$list_type)
	(#desc: $$undefined_type)
	(#gp_aux_4: $$list_type)
	(_lvar_196: $$list_type)
	(_lvar_197: $$boolean_type)
	(_lvar_192: $$string_type)
Preds: Pi(_$l_21, #prop, (_lvar_192 :: (_lvar_203 :: _lvar_202)), $$undefined, (_$l_21 :: (_lvar_200 :: _lvar_199)), ($$f :: (_lvar_197 :: _lvar_196)), (\"\" :: (_lvar_194 :: _lvar_193)))
CMD: xret := $$t
----------------------------------
----------------------------------
--6--
TIME: 2.971654
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(prop: #prop)
	(l: _$l_21)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_192 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_194 :: _lvar_193)))
	(#g_aux_2 == (_$l_21 :: (_lvar_200 :: _lvar_199)))
	(#desc == $$undefined)
	(#gp_aux_4 == (\"\" :: (_lvar_194 :: _lvar_193)))
	(#gp_aux_3 == ($$f :: (_lvar_197 :: _lvar_196)))
	(#g_aux_3 == ($$f :: (_lvar_197 :: _lvar_196)))
	(#clsx == (_lvar_192 :: (_lvar_203 :: _lvar_202)))
	(#l == _$l_21)
	(#gp_aux_2 == (_$l_21 :: (_lvar_200 :: _lvar_199)))
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#clsx: $$list_type)
	(_lvar_200: $$object_type)
	(_lvar_194: $$string_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#gp_aux_2: $$list_type)
	(#g_aux_4: $$list_type)
	(_lvar_203: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_199: $$list_type)
	(_lvar_193: $$list_type)
	(#desc: $$undefined_type)
	(_lvar_202: $$list_type)
	(_lvar_196: $$list_type)
	(#gp_aux_4: $$list_type)
	(_lvar_197: $$boolean_type)
	(_lvar_192: $$string_type)
Preds: Pi(_$l_21, #prop, (_lvar_192 :: (_lvar_203 :: _lvar_202)), $$undefined, (_$l_21 :: (_lvar_200 :: _lvar_199)), ($$f :: (_lvar_197 :: _lvar_196)), (\"\" :: (_lvar_194 :: _lvar_193)))
CMD: goto 8
----------------------------------
----------------------------------
--8--
TIME: 2.972023
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(prop: #prop)
	(l: _$l_21)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_192 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_194 :: _lvar_193)))
	(#g_aux_2 == (_$l_21 :: (_lvar_200 :: _lvar_199)))
	(#desc == $$undefined)
	(#gp_aux_4 == (\"\" :: (_lvar_194 :: _lvar_193)))
	(#gp_aux_3 == ($$f :: (_lvar_197 :: _lvar_196)))
	(#g_aux_3 == ($$f :: (_lvar_197 :: _lvar_196)))
	(#clsx == (_lvar_192 :: (_lvar_203 :: _lvar_202)))
	(#l == _$l_21)
	(#gp_aux_2 == (_$l_21 :: (_lvar_200 :: _lvar_199)))
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#clsx: $$list_type)
	(_lvar_200: $$object_type)
	(_lvar_194: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(_lvar_203: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(_lvar_199: $$list_type)
	(_lvar_193: $$list_type)
	(_lvar_202: $$list_type)
	(#desc: $$undefined_type)
	(#gp_aux_4: $$list_type)
	(_lvar_196: $$list_type)
	(_lvar_197: $$boolean_type)
	(_lvar_192: $$string_type)
Preds: Pi(_$l_21, #prop, (_lvar_192 :: (_lvar_203 :: _lvar_202)), $$undefined, (_$l_21 :: (_lvar_200 :: _lvar_199)), ($$f :: (_lvar_197 :: _lvar_196)), (\"\" :: (_lvar_194 :: _lvar_193)))
CMD: skip
----------------------------------
Verified one spec of proc deleteProperty
----------------------------------
--0--
TIME: 2.973936
STATE:
Heap: 
	_$l_19 |-> [(#prop: None), (\"@class\": _lvar_191), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_19)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_191 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_19 }})
	(#desc == $$undefined)
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_191 }})
	(#l == _$l_19)
	(#gp_aux_2 == {{ _$l_19 }})
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$undefined_type)
	(#gp_aux_4: $$list_type)
	(_lvar_191: $$string_type)
Preds: 
CMD: xret := "getOwnProperty"(l, prop) with 11
----------------------------------
Fold. Time: 2.974739
----------------------------------
--1--
TIME: 2.975779
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_19)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_191 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_19 }})
	(#desc == $$undefined)
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_191 }})
	(#l == _$l_19)
	(#gp_aux_2 == {{ _$l_19 }})
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#gp_aux_2: $$list_type)
	(#g_aux_4: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#desc: $$undefined_type)
	(#gp_aux_4: $$list_type)
	(_lvar_191: $$string_type)
Preds: Pi(_$l_19, #prop, {{ _lvar_191 }}, $$undefined, {{ _$l_19 }}, {{ $$f }}, {{ \"\" }})
CMD: goto [(xret = $$undefined)] 5 2
----------------------------------
in the THEN branch
----------------------------------
--5--
TIME: 2.976202
STATE:
Heap: 
	
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_19)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_191 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_19 }})
	(#desc == $$undefined)
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_191 }})
	(#l == _$l_19)
	(#gp_aux_2 == {{ _$l_19 }})
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$undefined_type)
	(#gp_aux_4: $$list_type)
	(_lvar_191: $$string_type)
Preds: Pi(_$l_19, #prop, {{ _lvar_191 }}, $$undefined, {{ _$l_19 }}, {{ $$f }}, {{ \"\" }})
CMD: xret := $$t
----------------------------------
----------------------------------
--6--
TIME: 2.976519
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(prop: #prop)
	(l: _$l_19)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_191 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_19 }})
	(#desc == $$undefined)
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_191 }})
	(#l == _$l_19)
	(#gp_aux_2 == {{ _$l_19 }})
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#gp_aux_2: $$list_type)
	(#g_aux_4: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#desc: $$undefined_type)
	(#gp_aux_4: $$list_type)
	(_lvar_191: $$string_type)
Preds: Pi(_$l_19, #prop, {{ _lvar_191 }}, $$undefined, {{ _$l_19 }}, {{ $$f }}, {{ \"\" }})
CMD: goto 8
----------------------------------
----------------------------------
--8--
TIME: 2.976806
STATE:
Heap: 
	
Store: 	
	(xret: $$t)
	(prop: #prop)
	(l: _$l_19)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_191 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_19 }})
	(#desc == $$undefined)
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_191 }})
	(#l == _$l_19)
	(#gp_aux_2 == {{ _$l_19 }})
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#gp_aux_2: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$undefined_type)
	(#gp_aux_4: $$list_type)
	(_lvar_191: $$string_type)
Preds: Pi(_$l_19, #prop, {{ _lvar_191 }}, $$undefined, {{ _$l_19 }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
Verified one spec of proc deleteProperty
----------------------------------
----------------------------------
Symbolic execution of deleteProperty
Unfold. Time: 2.978078
----------------------------------
--0--
TIME: 2.990822
STATE:
Heap: 
	_$l_25 |-> [(#prop: {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }}), (\"@class\": _lvar_212), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_25)
Pure Formulae: 	
	(! (#dval_5 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_212 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#dconf_5 == $$t)
	(#g_aux_2 == {{ _$l_25 }})
	(#desc == {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_212 }})
	(#l == _$l_25)
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#denum_5: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#dconf_5: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(_lvar_212: $$string_type)
	(#dwrit_5: $$boolean_type)
Preds: 
CMD: xret := "getOwnProperty"(l, prop) with 11
----------------------------------
Fold. Time: 2.994183
----------------------------------
--1--
TIME: 2.995363
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(prop: #prop)
	(l: _$l_25)
Pure Formulae: 	
	(! (#dval_5 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_212 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#dconf_5 == $$t)
	(#g_aux_2 == {{ _$l_25 }})
	(#desc == {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_212 }})
	(#l == _$l_25)
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#denum_5: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#dconf_5: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(_lvar_212: $$string_type)
	(#dwrit_5: $$boolean_type)
Preds: Pi(_$l_25, #prop, {{ _lvar_212 }}, {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }}, {{ _$l_25 }}, {{ $$f }}, {{ \"\" }})
CMD: goto [(xret = $$undefined)] 5 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 2.995935
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(prop: #prop)
	(l: _$l_25)
Pure Formulae: 	
	(! (#dval_5 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_212 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#dconf_5 == $$t)
	(#g_aux_2 == {{ _$l_25 }})
	(#desc == {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_212 }})
	(#l == _$l_25)
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#denum_5: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#dconf_5: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(_lvar_212: $$string_type)
	(#dwrit_5: $$boolean_type)
Preds: Pi(_$l_25, #prop, {{ _lvar_212 }}, {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }}, {{ _$l_25 }}, {{ $$f }}, {{ \"\" }})
CMD: c := l-nth(xret, 4.)
----------------------------------
----------------------------------
--3--
TIME: 2.996324
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(prop: #prop)
	(l: _$l_25)
	(c: $$t)
Pure Formulae: 	
	(! (#dval_5 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_212 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#dconf_5 == $$t)
	(#g_aux_2 == {{ _$l_25 }})
	(#desc == {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_212 }})
	(#l == _$l_25)
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#denum_5: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#dconf_5: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(_lvar_212: $$string_type)
	(#dwrit_5: $$boolean_type)
	(c: $$boolean_type)
Preds: Pi(_$l_25, #prop, {{ _lvar_212 }}, {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }}, {{ _$l_25 }}, {{ $$f }}, {{ \"\" }})
CMD: goto [c] 4 9
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 2.996770
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(prop: #prop)
	(l: _$l_25)
	(c: $$t)
Pure Formulae: 	
	(! (#dval_5 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_212 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#dconf_5 == $$t)
	(#g_aux_2 == {{ _$l_25 }})
	(#desc == {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_212 }})
	(#l == _$l_25)
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#denum_5: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#dconf_5: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(_lvar_212: $$string_type)
	(#dwrit_5: $$boolean_type)
	(c: $$boolean_type)
Preds: Pi(_$l_25, #prop, {{ _lvar_212 }}, {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }}, {{ _$l_25 }}, {{ $$f }}, {{ \"\" }})
CMD: delete(l,prop)
----------------------------------
----------------------------------
--5--
TIME: 2.997133
STATE:
Heap: 
	_$l_25 |-> [(#prop: None), (default: $$unknown)]
Store: 	
	(xret: {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(prop: #prop)
	(l: _$l_25)
	(c: $$t)
Pure Formulae: 	
	(! (#dval_5 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_212 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#dconf_5 == $$t)
	(#g_aux_2 == {{ _$l_25 }})
	(#desc == {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_212 }})
	(#l == _$l_25)
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#denum_5: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#dconf_5: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(_lvar_212: $$string_type)
	(#dwrit_5: $$boolean_type)
	(c: $$boolean_type)
Preds: Pi(_$l_25, #prop, {{ _lvar_212 }}, {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }}, {{ _$l_25 }}, {{ $$f }}, {{ \"\" }})
CMD: xret := $$t
----------------------------------
----------------------------------
--6--
TIME: 2.997479
STATE:
Heap: 
	_$l_25 |-> [(#prop: None), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(prop: #prop)
	(l: _$l_25)
	(c: $$t)
Pure Formulae: 	
	(! (#dval_5 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_212 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#dconf_5 == $$t)
	(#g_aux_2 == {{ _$l_25 }})
	(#desc == {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_212 }})
	(#l == _$l_25)
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#denum_5: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#dconf_5: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(_lvar_212: $$string_type)
	(#dwrit_5: $$boolean_type)
	(c: $$boolean_type)
Preds: Pi(_$l_25, #prop, {{ _lvar_212 }}, {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }}, {{ _$l_25 }}, {{ $$f }}, {{ \"\" }})
CMD: goto 8
----------------------------------
----------------------------------
--8--
TIME: 2.997867
STATE:
Heap: 
	_$l_25 |-> [(#prop: None), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(prop: #prop)
	(l: _$l_25)
	(c: $$t)
Pure Formulae: 	
	(! (#dval_5 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_212 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#dconf_5 == $$t)
	(#g_aux_2 == {{ _$l_25 }})
	(#desc == {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_212 }})
	(#l == _$l_25)
Gamma: 	
	(#prop: $$string_type)
	(#gp_aux_3: $$list_type)
	(#denum_5: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#dconf_5: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(_lvar_212: $$string_type)
	(#dwrit_5: $$boolean_type)
	(c: $$boolean_type)
Preds: Pi(_$l_25, #prop, {{ _lvar_212 }}, {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }}, {{ _$l_25 }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
Verified one spec of proc deleteProperty
----------------------------------
----------------------------------
Symbolic execution of deleteProperty
Unfold. Time: 2.999076
----------------------------------
--0--
TIME: 3.013189
STATE:
Heap: 
	_$l_30 |-> [(#prop: {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }}), (\"@class\": _lvar_236), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(prop: #prop)
	(l: _$l_30)
Pure Formulae: 	
	(! (#dval_6 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_236 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_30 }})
	(#desc == {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_236 }})
	(#l == _$l_30)
	(#dconf_6 == $$f)
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(_lvar_236: $$string_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#dwrit_6: $$boolean_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#denum_6: $$boolean_type)
	(#dconf_6: $$boolean_type)
Preds: 
CMD: xret := "getOwnProperty"(l, prop) with 11
----------------------------------
Fold. Time: 3.015757
----------------------------------
--1--
TIME: 3.016867
STATE:
Heap: 
	
Store: 	
	(throw: $$t)
	(xret: {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(prop: #prop)
	(l: _$l_30)
Pure Formulae: 	
	(! (#dval_6 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_236 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_30 }})
	(#desc == {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_236 }})
	(#l == _$l_30)
	(#dconf_6 == $$f)
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(_lvar_236: $$string_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#dwrit_6: $$boolean_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#denum_6: $$boolean_type)
	(#dconf_6: $$boolean_type)
Preds: Pi(_$l_30, #prop, {{ _lvar_236 }}, {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }}, {{ _$l_30 }}, {{ $$f }}, {{ \"\" }})
CMD: goto [(xret = $$undefined)] 5 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 3.017459
STATE:
Heap: 
	
Store: 	
	(throw: $$t)
	(xret: {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(prop: #prop)
	(l: _$l_30)
Pure Formulae: 	
	(! (#dval_6 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_236 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_30 }})
	(#desc == {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_236 }})
	(#l == _$l_30)
	(#dconf_6 == $$f)
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(_lvar_236: $$string_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#dwrit_6: $$boolean_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#denum_6: $$boolean_type)
	(#dconf_6: $$boolean_type)
Preds: Pi(_$l_30, #prop, {{ _lvar_236 }}, {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }}, {{ _$l_30 }}, {{ $$f }}, {{ \"\" }})
CMD: c := l-nth(xret, 4.)
----------------------------------
----------------------------------
--3--
TIME: 3.017816
STATE:
Heap: 
	
Store: 	
	(throw: $$t)
	(xret: {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(prop: #prop)
	(l: _$l_30)
	(c: $$f)
Pure Formulae: 	
	(! (#dval_6 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_236 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_30 }})
	(#desc == {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_236 }})
	(#l == _$l_30)
	(#dconf_6 == $$f)
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(_lvar_236: $$string_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#dwrit_6: $$boolean_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#denum_6: $$boolean_type)
	(c: $$boolean_type)
	(#dconf_6: $$boolean_type)
Preds: Pi(_$l_30, #prop, {{ _lvar_236 }}, {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }}, {{ _$l_30 }}, {{ $$f }}, {{ \"\" }})
CMD: goto [c] 4 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 3.018347
STATE:
Heap: 
	
Store: 	
	(throw: $$t)
	(xret: {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(prop: #prop)
	(l: _$l_30)
	(c: $$f)
Pure Formulae: 	
	(! (#dval_6 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_236 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_30 }})
	(#desc == {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_236 }})
	(#l == _$l_30)
	(#dconf_6 == $$f)
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(_lvar_236: $$string_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#dwrit_6: $$boolean_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#denum_6: $$boolean_type)
	(c: $$boolean_type)
	(#dconf_6: $$boolean_type)
Preds: Pi(_$l_30, #prop, {{ _lvar_236 }}, {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }}, {{ _$l_30 }}, {{ $$f }}, {{ \"\" }})
CMD: goto [throw] 10 7
----------------------------------
in the THEN branch
----------------------------------
--10--
TIME: 3.018807
STATE:
Heap: 
	
Store: 	
	(throw: $$t)
	(xret: {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(prop: #prop)
	(l: _$l_30)
	(c: $$f)
Pure Formulae: 	
	(! (#dval_6 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_236 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_30 }})
	(#desc == {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_236 }})
	(#l == _$l_30)
	(#dconf_6 == $$f)
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(_lvar_236: $$string_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#dwrit_6: $$boolean_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#denum_6: $$boolean_type)
	(c: $$boolean_type)
	(#dconf_6: $$boolean_type)
Preds: Pi(_$l_30, #prop, {{ _lvar_236 }}, {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }}, {{ _$l_30 }}, {{ $$f }}, {{ \"\" }})
CMD: xret := "TypeError"() 
----------------------------------
----------------------------------
--11--
TIME: 3.019678
STATE:
Heap: 
	_$l_32 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(throw: $$t)
	(xret: _$l_32)
	(prop: #prop)
	(l: _$l_30)
	(c: $$f)
Pure Formulae: 	
	(! (#dval_6 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_236 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_30 }})
	(#desc == {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_236 }})
	(#l == _$l_30)
	(#dconf_6 == $$f)
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$object_type)
	(_lvar_236: $$string_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#dwrit_6: $$boolean_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#denum_6: $$boolean_type)
	(c: $$boolean_type)
	(#dconf_6: $$boolean_type)
Preds: Pi(_$l_30, #prop, {{ _lvar_236 }}, {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }}, {{ _$l_30 }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
Verified one spec of proc deleteProperty
----------------------------------
----------------------------------
Symbolic execution of deleteProperty
Unfold. Time: 3.020730
----------------------------------
--0--
TIME: 3.034855
STATE:
Heap: 
	_$l_36 |-> [(#prop: {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }}), (\"@class\": _lvar_260), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(prop: #prop)
	(l: _$l_36)
Pure Formulae: 	
	(! (#dval_7 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_260 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_36 }})
	(#desc == {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_260 }})
	(#l == _$l_36)
	(#dconf_7 == $$f)
Gamma: 	
	(#denum_7: $$boolean_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(_lvar_260: $$string_type)
	(#g_aux_3: $$list_type)
	(#dwrit_7: $$boolean_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#dconf_7: $$boolean_type)
Preds: 
CMD: xret := "getOwnProperty"(l, prop) with 11
----------------------------------
Fold. Time: 3.037308
----------------------------------
--1--
TIME: 3.038433
STATE:
Heap: 
	
Store: 	
	(throw: $$f)
	(xret: {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(prop: #prop)
	(l: _$l_36)
Pure Formulae: 	
	(! (#dval_7 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_260 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_36 }})
	(#desc == {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_260 }})
	(#l == _$l_36)
	(#dconf_7 == $$f)
Gamma: 	
	(#denum_7: $$boolean_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(_lvar_260: $$string_type)
	(#g_aux_3: $$list_type)
	(#dwrit_7: $$boolean_type)
	(xret: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#dconf_7: $$boolean_type)
Preds: Pi(_$l_36, #prop, {{ _lvar_260 }}, {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }}, {{ _$l_36 }}, {{ $$f }}, {{ \"\" }})
CMD: goto [(xret = $$undefined)] 5 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 3.039112
STATE:
Heap: 
	
Store: 	
	(throw: $$f)
	(xret: {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(prop: #prop)
	(l: _$l_36)
Pure Formulae: 	
	(! (#dval_7 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_260 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_36 }})
	(#desc == {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_260 }})
	(#l == _$l_36)
	(#dconf_7 == $$f)
Gamma: 	
	(#denum_7: $$boolean_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(_lvar_260: $$string_type)
	(#g_aux_3: $$list_type)
	(#dwrit_7: $$boolean_type)
	(xret: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#dconf_7: $$boolean_type)
Preds: Pi(_$l_36, #prop, {{ _lvar_260 }}, {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }}, {{ _$l_36 }}, {{ $$f }}, {{ \"\" }})
CMD: c := l-nth(xret, 4.)
----------------------------------
----------------------------------
--3--
TIME: 3.039469
STATE:
Heap: 
	
Store: 	
	(throw: $$f)
	(xret: {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(prop: #prop)
	(l: _$l_36)
	(c: $$f)
Pure Formulae: 	
	(! (#dval_7 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_260 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_36 }})
	(#desc == {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_260 }})
	(#l == _$l_36)
	(#dconf_7 == $$f)
Gamma: 	
	(#denum_7: $$boolean_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(_lvar_260: $$string_type)
	(#g_aux_3: $$list_type)
	(#dwrit_7: $$boolean_type)
	(xret: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#dconf_7: $$boolean_type)
	(c: $$boolean_type)
Preds: Pi(_$l_36, #prop, {{ _lvar_260 }}, {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }}, {{ _$l_36 }}, {{ $$f }}, {{ \"\" }})
CMD: goto [c] 4 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 3.040019
STATE:
Heap: 
	
Store: 	
	(throw: $$f)
	(xret: {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(prop: #prop)
	(l: _$l_36)
	(c: $$f)
Pure Formulae: 	
	(! (#dval_7 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_260 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_36 }})
	(#desc == {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_260 }})
	(#l == _$l_36)
	(#dconf_7 == $$f)
Gamma: 	
	(#denum_7: $$boolean_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(_lvar_260: $$string_type)
	(#g_aux_3: $$list_type)
	(#dwrit_7: $$boolean_type)
	(xret: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#dconf_7: $$boolean_type)
	(c: $$boolean_type)
Preds: Pi(_$l_36, #prop, {{ _lvar_260 }}, {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }}, {{ _$l_36 }}, {{ $$f }}, {{ \"\" }})
CMD: goto [throw] 10 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 3.040590
STATE:
Heap: 
	
Store: 	
	(throw: $$f)
	(xret: {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(prop: #prop)
	(l: _$l_36)
	(c: $$f)
Pure Formulae: 	
	(! (#dval_7 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_260 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_36 }})
	(#desc == {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_260 }})
	(#l == _$l_36)
	(#dconf_7 == $$f)
Gamma: 	
	(#denum_7: $$boolean_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(_lvar_260: $$string_type)
	(#g_aux_3: $$list_type)
	(#dwrit_7: $$boolean_type)
	(xret: $$list_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#dconf_7: $$boolean_type)
	(c: $$boolean_type)
Preds: Pi(_$l_36, #prop, {{ _lvar_260 }}, {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }}, {{ _$l_36 }}, {{ $$f }}, {{ \"\" }})
CMD: xret := $$f
----------------------------------
----------------------------------
--8--
TIME: 3.040938
STATE:
Heap: 
	
Store: 	
	(throw: $$f)
	(xret: $$f)
	(prop: #prop)
	(l: _$l_36)
	(c: $$f)
Pure Formulae: 	
	(! (#dval_7 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_260 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_36 }})
	(#desc == {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(#gp_aux_4 == {{ \"\" }})
	(#gp_aux_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
	(#clsx == {{ _lvar_260 }})
	(#l == _$l_36)
	(#dconf_7 == $$f)
Gamma: 	
	(#denum_7: $$boolean_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#gp_aux_3: $$list_type)
	(_lvar_260: $$string_type)
	(#g_aux_3: $$list_type)
	(#dwrit_7: $$boolean_type)
	(xret: $$boolean_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#desc: $$list_type)
	(#gp_aux_4: $$list_type)
	(#dconf_7: $$boolean_type)
	(c: $$boolean_type)
Preds: Pi(_$l_36, #prop, {{ _lvar_260 }}, {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }}, {{ _$l_36 }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
Verified one spec of proc deleteProperty
----------------------------------
----------------------------------
Symbolic execution of canPut
Unfold. Time: 3.042027
----------------------------------
--0--
TIME: 3.065685
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": _lvar_284), (\"@proto\": _lvar_292), (#prop: None), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_284 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_286 :: _lvar_285)))
	(#g_aux_2 == (_$l_#l :: (_lvar_292 :: _lvar_291)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (_lvar_284 :: (_lvar_295 :: _lvar_294)))
	(#g_aux_3 == ($$f :: (_lvar_289 :: _lvar_288)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(_lvar_286: $$string_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(_lvar_294: $$list_type)
	(#ext: $$boolean_type)
	(_lvar_292: $$object_type)
	(_lvar_291: $$list_type)
	(_lvar_284: $$string_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(_lvar_289: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(_lvar_295: $$string_type)
	(_lvar_285: $$list_type)
	(_lvar_288: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_lvar_292, #prop, (_lvar_295 :: _lvar_294), $$undefined, (_lvar_292 :: _lvar_291), (_lvar_289 :: _lvar_288), (_lvar_286 :: _lvar_285))
CMD: xret := "getOwnProperty"(l, prop) with 19
----------------------------------
Fold. Time: 3.068955
----------------------------------
--1--
TIME: 3.070104
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_284 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_286 :: _lvar_285)))
	(#g_aux_2 == (_$l_#l :: (_lvar_292 :: _lvar_291)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (_lvar_284 :: (_lvar_295 :: _lvar_294)))
	(#g_aux_3 == ($$f :: (_lvar_289 :: _lvar_288)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(_lvar_286: $$string_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#ext: $$boolean_type)
	(_lvar_294: $$list_type)
	(_lvar_292: $$object_type)
	(_lvar_291: $$list_type)
	(_lvar_284: $$string_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(_lvar_289: $$boolean_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_295: $$string_type)
	(_lvar_285: $$list_type)
	(_lvar_288: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, (_lvar_284 :: (_lvar_295 :: _lvar_294)), $$undefined, (_$l_#l :: (_lvar_292 :: _lvar_291)), ($$f :: (_lvar_289 :: _lvar_288)), (\"\" :: (_lvar_286 :: _lvar_285)))
CMD: goto [(xret = $$undefined)] 6 2
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 3.070510
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_284 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_286 :: _lvar_285)))
	(#g_aux_2 == (_$l_#l :: (_lvar_292 :: _lvar_291)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (_lvar_284 :: (_lvar_295 :: _lvar_294)))
	(#g_aux_3 == ($$f :: (_lvar_289 :: _lvar_288)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(_lvar_286: $$string_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(_lvar_294: $$list_type)
	(#ext: $$boolean_type)
	(_lvar_292: $$object_type)
	(_lvar_291: $$list_type)
	(_lvar_284: $$string_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(_lvar_289: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(_lvar_295: $$string_type)
	(_lvar_285: $$list_type)
	(_lvar_288: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, (_lvar_284 :: (_lvar_295 :: _lvar_294)), $$undefined, (_$l_#l :: (_lvar_292 :: _lvar_291)), ($$f :: (_lvar_289 :: _lvar_288)), (\"\" :: (_lvar_286 :: _lvar_285)))
CMD: e := [l, "@extensible"]
----------------------------------
----------------------------------
--7--
TIME: 3.070768
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(e: #ext)
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_284 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_286 :: _lvar_285)))
	(#g_aux_2 == (_$l_#l :: (_lvar_292 :: _lvar_291)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (_lvar_284 :: (_lvar_295 :: _lvar_294)))
	(#g_aux_3 == ($$f :: (_lvar_289 :: _lvar_288)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(_lvar_286: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#ext: $$boolean_type)
	(_lvar_294: $$list_type)
	(_lvar_292: $$object_type)
	(_lvar_291: $$list_type)
	(_lvar_284: $$string_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(_lvar_289: $$boolean_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_295: $$string_type)
	(_lvar_285: $$list_type)
	(_lvar_288: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, (_lvar_284 :: (_lvar_295 :: _lvar_294)), $$undefined, (_$l_#l :: (_lvar_292 :: _lvar_291)), ($$f :: (_lvar_289 :: _lvar_288)), (\"\" :: (_lvar_286 :: _lvar_285)))
CMD: xret := "getProperty"(l, prop) with 19
----------------------------------
----------------------------------
--8--
TIME: 3.071625
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(e: #ext)
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_284 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_286 :: _lvar_285)))
	(#g_aux_2 == (_$l_#l :: (_lvar_292 :: _lvar_291)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (_lvar_284 :: (_lvar_295 :: _lvar_294)))
	(#g_aux_3 == ($$f :: (_lvar_289 :: _lvar_288)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(_lvar_286: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#ext: $$boolean_type)
	(_lvar_294: $$list_type)
	(_lvar_292: $$object_type)
	(_lvar_291: $$list_type)
	(_lvar_284: $$string_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(_lvar_289: $$boolean_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_295: $$string_type)
	(_lvar_285: $$list_type)
	(_lvar_288: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, (_lvar_284 :: (_lvar_295 :: _lvar_294)), $$undefined, (_$l_#l :: (_lvar_292 :: _lvar_291)), ($$f :: (_lvar_289 :: _lvar_288)), (\"\" :: (_lvar_286 :: _lvar_285)))
CMD: goto [(xret = $$undefined)] 17 9
----------------------------------
in the THEN branch
----------------------------------
--17--
TIME: 3.072328
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(e: #ext)
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_284 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_286 :: _lvar_285)))
	(#g_aux_2 == (_$l_#l :: (_lvar_292 :: _lvar_291)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (_lvar_284 :: (_lvar_295 :: _lvar_294)))
	(#g_aux_3 == ($$f :: (_lvar_289 :: _lvar_288)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(_lvar_286: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(_lvar_294: $$list_type)
	(#ext: $$boolean_type)
	(_lvar_292: $$object_type)
	(_lvar_291: $$list_type)
	(_lvar_284: $$string_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(_lvar_289: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(_lvar_295: $$string_type)
	(_lvar_285: $$list_type)
	(_lvar_288: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, (_lvar_284 :: (_lvar_295 :: _lvar_294)), $$undefined, (_$l_#l :: (_lvar_292 :: _lvar_291)), ($$f :: (_lvar_289 :: _lvar_288)), (\"\" :: (_lvar_286 :: _lvar_285)))
CMD: xret := e
----------------------------------
----------------------------------
--18--
TIME: 3.072817
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(e: #ext)
	(xret: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_284 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_286 :: _lvar_285)))
	(#g_aux_2 == (_$l_#l :: (_lvar_292 :: _lvar_291)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (_lvar_284 :: (_lvar_295 :: _lvar_294)))
	(#g_aux_3 == ($$f :: (_lvar_289 :: _lvar_288)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(_lvar_286: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(_lvar_294: $$list_type)
	(_lvar_292: $$object_type)
	(_lvar_291: $$list_type)
	(_lvar_284: $$string_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(_lvar_289: $$boolean_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_295: $$string_type)
	(_lvar_285: $$list_type)
	(_lvar_288: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, (_lvar_284 :: (_lvar_295 :: _lvar_294)), $$undefined, (_$l_#l :: (_lvar_292 :: _lvar_291)), ($$f :: (_lvar_289 :: _lvar_288)), (\"\" :: (_lvar_286 :: _lvar_285)))
CMD: skip
----------------------------------
Verified one spec of proc canPut
----------------------------------
--0--
TIME: 3.074669
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (\"@class\": _lvar_283), (#prop: None), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_283 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ _lvar_283 }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(#ext: $$boolean_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(_lvar_283: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: 
CMD: xret := "getOwnProperty"(l, prop) with 19
----------------------------------
Fold. Time: 3.075714
----------------------------------
--1--
TIME: 3.076896
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_283 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ _lvar_283 }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#ext: $$boolean_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_283: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ _lvar_283 }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: goto [(xret = $$undefined)] 6 2
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 3.077233
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_283 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ _lvar_283 }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#ext: $$boolean_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(_lvar_283: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ _lvar_283 }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: e := [l, "@extensible"]
----------------------------------
----------------------------------
--7--
TIME: 3.077472
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(e: #ext)
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_283 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ _lvar_283 }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#ext: $$boolean_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_283: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ _lvar_283 }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: xret := "getProperty"(l, prop) with 19
----------------------------------
----------------------------------
--8--
TIME: 3.078233
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(e: #ext)
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_283 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ _lvar_283 }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#ext: $$boolean_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_283: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ _lvar_283 }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: goto [(xret = $$undefined)] 17 9
----------------------------------
in the THEN branch
----------------------------------
--17--
TIME: 3.079254
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(e: #ext)
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_283 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ _lvar_283 }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#ext: $$boolean_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(_lvar_283: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ _lvar_283 }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: xret := e
----------------------------------
----------------------------------
--18--
TIME: 3.079501
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(e: #ext)
	(xret: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_283 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ _lvar_283 }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_283: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ _lvar_283 }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
Verified one spec of proc canPut
----------------------------------
----------------------------------
Symbolic execution of canPut
Unfold. Time: 3.080428
----------------------------------
--0--
TIME: 3.093842
STATE:
Heap: 
	_$l_41 |-> [(#prop: {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }}), (\"@class\": _lvar_304), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_41)
Pure Formulae: 	
	(! (#dval_41 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_304 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_41 }})
	(#writ == #dwrit_41)
	(#g_aux_1 == {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
	(#g_aux_0 == {{ _lvar_304 }})
	(#g_aux_3 == {{ $$f }})
	(#l == _$l_41)
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf_41: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#dwrit_41: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(_lvar_304: $$string_type)
	(#denum_41: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#writ: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: 
CMD: xret := "getOwnProperty"(l, prop) with 19
----------------------------------
Fold. Time: 3.096236
----------------------------------
--1--
TIME: 3.097240
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
	(prop: #prop)
	(l: _$l_41)
Pure Formulae: 	
	(! (#dval_41 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_304 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_41 }})
	(#writ == #dwrit_41)
	(#g_aux_1 == {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
	(#g_aux_0 == {{ _lvar_304 }})
	(#g_aux_3 == {{ $$f }})
	(#l == _$l_41)
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf_41: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#dwrit_41: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(_lvar_304: $$string_type)
	(#denum_41: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#writ: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_41, #prop, {{ _lvar_304 }}, {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }}, {{ _$l_41 }}, {{ $$f }}, {{ \"\" }})
CMD: goto [(xret = $$undefined)] 6 2
----------------------------------
in the ELSE branch
----------------------------------
--2--
TIME: 3.097774
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
	(prop: #prop)
	(l: _$l_41)
Pure Formulae: 	
	(! (#dval_41 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_304 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_41 }})
	(#writ == #dwrit_41)
	(#g_aux_1 == {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
	(#g_aux_0 == {{ _lvar_304 }})
	(#g_aux_3 == {{ $$f }})
	(#l == _$l_41)
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf_41: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#dwrit_41: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(_lvar_304: $$string_type)
	(#denum_41: $$boolean_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#writ: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_41, #prop, {{ _lvar_304 }}, {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }}, {{ _$l_41 }}, {{ $$f }}, {{ \"\" }})
CMD: d := l-nth(xret, 0.)
----------------------------------
----------------------------------
--3--
TIME: 3.098057
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
	(prop: #prop)
	(d: \"d\")
	(l: _$l_41)
Pure Formulae: 	
	(! (#dval_41 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_304 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_41 }})
	(#writ == #dwrit_41)
	(#g_aux_1 == {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
	(#g_aux_0 == {{ _lvar_304 }})
	(#g_aux_3 == {{ $$f }})
	(#l == _$l_41)
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf_41: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#dwrit_41: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(_lvar_304: $$string_type)
	(#denum_41: $$boolean_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#writ: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_41, #prop, {{ _lvar_304 }}, {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }}, {{ _$l_41 }}, {{ $$f }}, {{ \"\" }})
CMD: goto [(d = "d")] 4 6
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 3.098532
STATE:
Heap: 
	
Store: 	
	(xret: {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
	(prop: #prop)
	(d: \"d\")
	(l: _$l_41)
Pure Formulae: 	
	(! (#dval_41 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_304 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_41 }})
	(#writ == #dwrit_41)
	(#g_aux_1 == {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
	(#g_aux_0 == {{ _lvar_304 }})
	(#g_aux_3 == {{ $$f }})
	(#l == _$l_41)
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf_41: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#dwrit_41: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(_lvar_304: $$string_type)
	(#denum_41: $$boolean_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#writ: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_41, #prop, {{ _lvar_304 }}, {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }}, {{ _$l_41 }}, {{ $$f }}, {{ \"\" }})
CMD: xret := l-nth(xret, 2.)
----------------------------------
----------------------------------
--5--
TIME: 3.098821
STATE:
Heap: 
	
Store: 	
	(xret: #dwrit_41)
	(prop: #prop)
	(d: \"d\")
	(l: _$l_41)
Pure Formulae: 	
	(! (#dval_41 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_304 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_41 }})
	(#writ == #dwrit_41)
	(#g_aux_1 == {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
	(#g_aux_0 == {{ _lvar_304 }})
	(#g_aux_3 == {{ $$f }})
	(#l == _$l_41)
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf_41: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#dwrit_41: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(_lvar_304: $$string_type)
	(#denum_41: $$boolean_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#writ: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_41, #prop, {{ _lvar_304 }}, {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }}, {{ _$l_41 }}, {{ $$f }}, {{ \"\" }})
CMD: goto 18
----------------------------------
----------------------------------
--18--
TIME: 3.099191
STATE:
Heap: 
	
Store: 	
	(xret: #dwrit_41)
	(prop: #prop)
	(d: \"d\")
	(l: _$l_41)
Pure Formulae: 	
	(! (#dval_41 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_304 == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_41 }})
	(#writ == #dwrit_41)
	(#g_aux_1 == {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
	(#g_aux_0 == {{ _lvar_304 }})
	(#g_aux_3 == {{ $$f }})
	(#l == _$l_41)
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf_41: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#dwrit_41: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(_lvar_304: $$string_type)
	(#denum_41: $$boolean_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#writ: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_41, #prop, {{ _lvar_304 }}, {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }}, {{ _$l_41 }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
Verified one spec of proc canPut
----------------------------------
----------------------------------
Symbolic execution of canPut
Unfold. Time: 3.100261
----------------------------------
--0--
TIME: 3.116001
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": _lvar_332), (\"@proto\": #lp), (#prop: None), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_332 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_334 :: _lvar_333)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(#g_aux_0 == (_lvar_332 :: (_lvar_343 :: _lvar_342)))
	(#g_aux_3 == ($$f :: (_lvar_337 :: _lvar_336)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(_lvar_342: $$list_type)
	(#dconf_42: $$boolean_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(#denum_42: $$boolean_type)
	(_lvar_334: $$string_type)
	(_lvar_332: $$string_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(#other: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_336: $$list_type)
	(#lp: $$object_type)
	(_lvar_343: $$string_type)
	(#dwrit_42: $$boolean_type)
	(_lvar_337: $$boolean_type)
	(_lvar_333: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(#lp, #prop, (_lvar_343 :: _lvar_342), {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (#lp :: #other), (_lvar_337 :: _lvar_336), (_lvar_334 :: _lvar_333))
CMD: xret := "getOwnProperty"(l, prop) with 19
----------------------------------
Fold. Time: 3.117117
----------------------------------
--1--
TIME: 3.119931
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_332 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_334 :: _lvar_333)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(#g_aux_0 == (_lvar_332 :: (_lvar_343 :: _lvar_342)))
	(#g_aux_3 == ($$f :: (_lvar_337 :: _lvar_336)))
Gamma: 	
	(#dconf_42: $$boolean_type)
	(_lvar_342: $$list_type)
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(#denum_42: $$boolean_type)
	(xret: $$undefined_type)
	(_lvar_334: $$string_type)
	(_lvar_332: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_336: $$list_type)
	(#dwrit_42: $$boolean_type)
	(_lvar_343: $$string_type)
	(#g_aux_1: $$list_type)
	(_lvar_333: $$list_type)
	(_lvar_337: $$boolean_type)
Preds: Pi(_$l_#l, #prop, (_lvar_332 :: (_lvar_343 :: _lvar_342)), {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_337 :: _lvar_336)), (\"\" :: (_lvar_334 :: _lvar_333)))
CMD: goto [(xret = $$undefined)] 6 2
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 3.120400
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_332 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_334 :: _lvar_333)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(#g_aux_0 == (_lvar_332 :: (_lvar_343 :: _lvar_342)))
	(#g_aux_3 == ($$f :: (_lvar_337 :: _lvar_336)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(_lvar_342: $$list_type)
	(#dconf_42: $$boolean_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#denum_42: $$boolean_type)
	(_lvar_334: $$string_type)
	(_lvar_332: $$string_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(#other: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(_lvar_336: $$list_type)
	(#lp: $$object_type)
	(_lvar_343: $$string_type)
	(#dwrit_42: $$boolean_type)
	(_lvar_337: $$boolean_type)
	(_lvar_333: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_332 :: (_lvar_343 :: _lvar_342)), {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_337 :: _lvar_336)), (\"\" :: (_lvar_334 :: _lvar_333)))
CMD: e := [l, "@extensible"]
----------------------------------
----------------------------------
--7--
TIME: 3.121074
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(e: $$f)
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_332 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_334 :: _lvar_333)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(#g_aux_0 == (_lvar_332 :: (_lvar_343 :: _lvar_342)))
	(#g_aux_3 == ($$f :: (_lvar_337 :: _lvar_336)))
Gamma: 	
	(#dconf_42: $$boolean_type)
	(_lvar_342: $$list_type)
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#denum_42: $$boolean_type)
	(xret: $$undefined_type)
	(_lvar_334: $$string_type)
	(_lvar_332: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_336: $$list_type)
	(#dwrit_42: $$boolean_type)
	(_lvar_343: $$string_type)
	(#g_aux_1: $$list_type)
	(_lvar_333: $$list_type)
	(_lvar_337: $$boolean_type)
Preds: Pi(_$l_#l, #prop, (_lvar_332 :: (_lvar_343 :: _lvar_342)), {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_337 :: _lvar_336)), (\"\" :: (_lvar_334 :: _lvar_333)))
CMD: xret := "getProperty"(l, prop) with 19
----------------------------------
----------------------------------
--8--
TIME: 3.121898
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(e: $$f)
	(xret: {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_332 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_334 :: _lvar_333)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(#g_aux_0 == (_lvar_332 :: (_lvar_343 :: _lvar_342)))
	(#g_aux_3 == ($$f :: (_lvar_337 :: _lvar_336)))
Gamma: 	
	(#dconf_42: $$boolean_type)
	(_lvar_342: $$list_type)
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#denum_42: $$boolean_type)
	(xret: $$list_type)
	(_lvar_334: $$string_type)
	(_lvar_332: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_336: $$list_type)
	(#dwrit_42: $$boolean_type)
	(_lvar_343: $$string_type)
	(#g_aux_1: $$list_type)
	(_lvar_333: $$list_type)
	(_lvar_337: $$boolean_type)
Preds: Pi(_$l_#l, #prop, (_lvar_332 :: (_lvar_343 :: _lvar_342)), {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_337 :: _lvar_336)), (\"\" :: (_lvar_334 :: _lvar_333)))
CMD: goto [(xret = $$undefined)] 17 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 3.122481
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(e: $$f)
	(xret: {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_332 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_334 :: _lvar_333)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(#g_aux_0 == (_lvar_332 :: (_lvar_343 :: _lvar_342)))
	(#g_aux_3 == ($$f :: (_lvar_337 :: _lvar_336)))
Gamma: 	
	(#dconf_42: $$boolean_type)
	(_lvar_342: $$list_type)
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#denum_42: $$boolean_type)
	(xret: $$list_type)
	(_lvar_334: $$string_type)
	(_lvar_332: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_336: $$list_type)
	(#dwrit_42: $$boolean_type)
	(_lvar_343: $$string_type)
	(#g_aux_1: $$list_type)
	(_lvar_333: $$list_type)
	(_lvar_337: $$boolean_type)
Preds: Pi(_$l_#l, #prop, (_lvar_332 :: (_lvar_343 :: _lvar_342)), {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_337 :: _lvar_336)), (\"\" :: (_lvar_334 :: _lvar_333)))
CMD: d := l-nth(xret, 0.)
----------------------------------
----------------------------------
--10--
TIME: 3.122878
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(e: $$f)
	(xret: {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(prop: #prop)
	(d: \"d\")
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_332 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_334 :: _lvar_333)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(#g_aux_0 == (_lvar_332 :: (_lvar_343 :: _lvar_342)))
	(#g_aux_3 == ($$f :: (_lvar_337 :: _lvar_336)))
Gamma: 	
	(#dconf_42: $$boolean_type)
	(_lvar_342: $$list_type)
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#denum_42: $$boolean_type)
	(xret: $$list_type)
	(_lvar_334: $$string_type)
	(_lvar_332: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_336: $$list_type)
	(#dwrit_42: $$boolean_type)
	(_lvar_343: $$string_type)
	(#g_aux_1: $$list_type)
	(_lvar_333: $$list_type)
	(_lvar_337: $$boolean_type)
Preds: Pi(_$l_#l, #prop, (_lvar_332 :: (_lvar_343 :: _lvar_342)), {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_337 :: _lvar_336)), (\"\" :: (_lvar_334 :: _lvar_333)))
CMD: v := l-nth(xret, 2.)
----------------------------------
----------------------------------
--11--
TIME: 3.123202
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(e: $$f)
	(xret: {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(prop: #prop)
	(d: \"d\")
	(l: _$l_#l)
	(v: #dwrit_42)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_332 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_334 :: _lvar_333)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(#g_aux_0 == (_lvar_332 :: (_lvar_343 :: _lvar_342)))
	(#g_aux_3 == ($$f :: (_lvar_337 :: _lvar_336)))
Gamma: 	
	(#dconf_42: $$boolean_type)
	(_lvar_342: $$list_type)
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#denum_42: $$boolean_type)
	(xret: $$list_type)
	(_lvar_334: $$string_type)
	(_lvar_332: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_336: $$list_type)
	(v: $$boolean_type)
	(#dwrit_42: $$boolean_type)
	(_lvar_343: $$string_type)
	(#g_aux_1: $$list_type)
	(_lvar_333: $$list_type)
	(_lvar_337: $$boolean_type)
Preds: Pi(_$l_#l, #prop, (_lvar_332 :: (_lvar_343 :: _lvar_342)), {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_337 :: _lvar_336)), (\"\" :: (_lvar_334 :: _lvar_333)))
CMD: goto [(d = "d")] 12 15
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 3.123598
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(e: $$f)
	(xret: {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(prop: #prop)
	(d: \"d\")
	(l: _$l_#l)
	(v: #dwrit_42)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_332 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_334 :: _lvar_333)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(#g_aux_0 == (_lvar_332 :: (_lvar_343 :: _lvar_342)))
	(#g_aux_3 == ($$f :: (_lvar_337 :: _lvar_336)))
Gamma: 	
	(#dconf_42: $$boolean_type)
	(_lvar_342: $$list_type)
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#denum_42: $$boolean_type)
	(xret: $$list_type)
	(_lvar_334: $$string_type)
	(_lvar_332: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_336: $$list_type)
	(v: $$boolean_type)
	(#dwrit_42: $$boolean_type)
	(_lvar_343: $$string_type)
	(#g_aux_1: $$list_type)
	(_lvar_333: $$list_type)
	(_lvar_337: $$boolean_type)
Preds: Pi(_$l_#l, #prop, (_lvar_332 :: (_lvar_343 :: _lvar_342)), {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_337 :: _lvar_336)), (\"\" :: (_lvar_334 :: _lvar_333)))
CMD: goto [e] 13 17
----------------------------------
in the ELSE branch
----------------------------------
--17--
TIME: 3.124065
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(e: $$f)
	(xret: {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(prop: #prop)
	(d: \"d\")
	(l: _$l_#l)
	(v: #dwrit_42)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_332 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_334 :: _lvar_333)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(#g_aux_0 == (_lvar_332 :: (_lvar_343 :: _lvar_342)))
	(#g_aux_3 == ($$f :: (_lvar_337 :: _lvar_336)))
Gamma: 	
	(#dconf_42: $$boolean_type)
	(_lvar_342: $$list_type)
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#denum_42: $$boolean_type)
	(xret: $$list_type)
	(_lvar_334: $$string_type)
	(_lvar_332: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_336: $$list_type)
	(v: $$boolean_type)
	(#dwrit_42: $$boolean_type)
	(_lvar_343: $$string_type)
	(#g_aux_1: $$list_type)
	(_lvar_333: $$list_type)
	(_lvar_337: $$boolean_type)
Preds: Pi(_$l_#l, #prop, (_lvar_332 :: (_lvar_343 :: _lvar_342)), {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_337 :: _lvar_336)), (\"\" :: (_lvar_334 :: _lvar_333)))
CMD: xret := e
----------------------------------
----------------------------------
--18--
TIME: 3.124351
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(e: $$f)
	(xret: $$f)
	(prop: #prop)
	(d: \"d\")
	(l: _$l_#l)
	(v: #dwrit_42)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_332 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_334 :: _lvar_333)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
	(#g_aux_0 == (_lvar_332 :: (_lvar_343 :: _lvar_342)))
	(#g_aux_3 == ($$f :: (_lvar_337 :: _lvar_336)))
Gamma: 	
	(#dconf_42: $$boolean_type)
	(_lvar_342: $$list_type)
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#denum_42: $$boolean_type)
	(xret: $$boolean_type)
	(_lvar_334: $$string_type)
	(_lvar_332: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_336: $$list_type)
	(v: $$boolean_type)
	(#dwrit_42: $$boolean_type)
	(_lvar_343: $$string_type)
	(#g_aux_1: $$list_type)
	(_lvar_333: $$list_type)
	(_lvar_337: $$boolean_type)
Preds: Pi(_$l_#l, #prop, (_lvar_332 :: (_lvar_343 :: _lvar_342)), {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_337 :: _lvar_336)), (\"\" :: (_lvar_334 :: _lvar_333)))
CMD: skip
----------------------------------
Verified one spec of proc canPut
----------------------------------
----------------------------------
Symbolic execution of canPut
Unfold. Time: 3.125412
----------------------------------
--0--
TIME: 3.141059
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": _lvar_355), (\"@proto\": #lp), (#prop: None), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#dconf_43: $$boolean_type)
	(#denum_43: $$boolean_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(#other: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(_lvar_357: $$string_type)
	(_lvar_359: $$list_type)
	(#writ: $$boolean_type)
	(_lvar_360: $$boolean_type)
	(_lvar_365: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(#lp, #prop, (_lvar_366 :: _lvar_365), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (#lp :: #other), (_lvar_360 :: _lvar_359), (_lvar_357 :: _lvar_356))
CMD: xret := "getOwnProperty"(l, prop) with 19
----------------------------------
Fold. Time: 3.142646
----------------------------------
--1--
TIME: 3.144138
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dconf_43: $$boolean_type)
	(#g_aux_0: $$list_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(_lvar_357: $$string_type)
	(#writ: $$boolean_type)
	(_lvar_359: $$list_type)
	(_lvar_360: $$boolean_type)
	(#g_aux_1: $$list_type)
	(_lvar_365: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_355 :: (_lvar_366 :: _lvar_365)), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_360 :: _lvar_359)), (\"\" :: (_lvar_357 :: _lvar_356)))
CMD: goto [(xret = $$undefined)] 6 2
----------------------------------
in the THEN branch
----------------------------------
--6--
TIME: 3.144770
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#dconf_43: $$boolean_type)
	(#denum_43: $$boolean_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#g_aux_4: $$list_type)
	(#other: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(_lvar_357: $$string_type)
	(_lvar_359: $$list_type)
	(#writ: $$boolean_type)
	(_lvar_360: $$boolean_type)
	(_lvar_365: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_355 :: (_lvar_366 :: _lvar_365)), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_360 :: _lvar_359)), (\"\" :: (_lvar_357 :: _lvar_356)))
CMD: e := [l, "@extensible"]
----------------------------------
----------------------------------
--7--
TIME: 3.145281
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(e: $$t)
	(xret: $$undefined)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dconf_43: $$boolean_type)
	(#g_aux_0: $$list_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(_lvar_357: $$string_type)
	(#writ: $$boolean_type)
	(_lvar_359: $$list_type)
	(_lvar_360: $$boolean_type)
	(#g_aux_1: $$list_type)
	(_lvar_365: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_355 :: (_lvar_366 :: _lvar_365)), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_360 :: _lvar_359)), (\"\" :: (_lvar_357 :: _lvar_356)))
CMD: xret := "getProperty"(l, prop) with 19
----------------------------------
----------------------------------
--8--
TIME: 3.146277
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(e: $$t)
	(xret: {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dconf_43: $$boolean_type)
	(#g_aux_0: $$list_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(_lvar_357: $$string_type)
	(#writ: $$boolean_type)
	(_lvar_359: $$list_type)
	(_lvar_360: $$boolean_type)
	(#g_aux_1: $$list_type)
	(_lvar_365: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_355 :: (_lvar_366 :: _lvar_365)), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_360 :: _lvar_359)), (\"\" :: (_lvar_357 :: _lvar_356)))
CMD: goto [(xret = $$undefined)] 17 9
----------------------------------
in the ELSE branch
----------------------------------
--9--
TIME: 3.146928
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(e: $$t)
	(xret: {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dconf_43: $$boolean_type)
	(#g_aux_0: $$list_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(_lvar_357: $$string_type)
	(#writ: $$boolean_type)
	(_lvar_359: $$list_type)
	(_lvar_360: $$boolean_type)
	(#g_aux_1: $$list_type)
	(_lvar_365: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_355 :: (_lvar_366 :: _lvar_365)), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_360 :: _lvar_359)), (\"\" :: (_lvar_357 :: _lvar_356)))
CMD: d := l-nth(xret, 0.)
----------------------------------
----------------------------------
--10--
TIME: 3.147312
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(e: $$t)
	(xret: {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(prop: #prop)
	(d: \"d\")
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dconf_43: $$boolean_type)
	(#g_aux_0: $$list_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(_lvar_357: $$string_type)
	(#writ: $$boolean_type)
	(_lvar_359: $$list_type)
	(_lvar_360: $$boolean_type)
	(#g_aux_1: $$list_type)
	(_lvar_365: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_355 :: (_lvar_366 :: _lvar_365)), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_360 :: _lvar_359)), (\"\" :: (_lvar_357 :: _lvar_356)))
CMD: v := l-nth(xret, 2.)
----------------------------------
----------------------------------
--11--
TIME: 3.147679
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(e: $$t)
	(xret: {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(prop: #prop)
	(d: \"d\")
	(l: _$l_#l)
	(v: #dwrit_43)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dconf_43: $$boolean_type)
	(#g_aux_0: $$list_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(v: $$boolean_type)
	(_lvar_357: $$string_type)
	(#writ: $$boolean_type)
	(_lvar_359: $$list_type)
	(_lvar_360: $$boolean_type)
	(#g_aux_1: $$list_type)
	(_lvar_365: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_355 :: (_lvar_366 :: _lvar_365)), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_360 :: _lvar_359)), (\"\" :: (_lvar_357 :: _lvar_356)))
CMD: goto [(d = "d")] 12 15
----------------------------------
in the THEN branch
----------------------------------
--12--
TIME: 3.148189
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(e: $$t)
	(xret: {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(prop: #prop)
	(d: \"d\")
	(l: _$l_#l)
	(v: #dwrit_43)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dconf_43: $$boolean_type)
	(#g_aux_0: $$list_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(v: $$boolean_type)
	(_lvar_357: $$string_type)
	(#writ: $$boolean_type)
	(_lvar_359: $$list_type)
	(_lvar_360: $$boolean_type)
	(#g_aux_1: $$list_type)
	(_lvar_365: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_355 :: (_lvar_366 :: _lvar_365)), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_360 :: _lvar_359)), (\"\" :: (_lvar_357 :: _lvar_356)))
CMD: goto [e] 13 17
----------------------------------
in the THEN branch
----------------------------------
--13--
TIME: 3.148736
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(e: $$t)
	(xret: {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(prop: #prop)
	(d: \"d\")
	(l: _$l_#l)
	(v: #dwrit_43)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dconf_43: $$boolean_type)
	(#g_aux_0: $$list_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(v: $$boolean_type)
	(_lvar_357: $$string_type)
	(#writ: $$boolean_type)
	(_lvar_359: $$list_type)
	(_lvar_360: $$boolean_type)
	(#g_aux_1: $$list_type)
	(_lvar_365: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_355 :: (_lvar_366 :: _lvar_365)), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_360 :: _lvar_359)), (\"\" :: (_lvar_357 :: _lvar_356)))
CMD: xret := v
----------------------------------
----------------------------------
--14--
TIME: 3.149219
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(e: $$t)
	(xret: #dwrit_43)
	(prop: #prop)
	(d: \"d\")
	(l: _$l_#l)
	(v: #dwrit_43)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dconf_43: $$boolean_type)
	(#g_aux_0: $$list_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(v: $$boolean_type)
	(_lvar_357: $$string_type)
	(#writ: $$boolean_type)
	(_lvar_359: $$list_type)
	(_lvar_360: $$boolean_type)
	(#g_aux_1: $$list_type)
	(_lvar_365: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_355 :: (_lvar_366 :: _lvar_365)), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_360 :: _lvar_359)), (\"\" :: (_lvar_357 :: _lvar_356)))
CMD: goto 18
----------------------------------
----------------------------------
--18--
TIME: 3.149604
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(e: $$t)
	(xret: #dwrit_43)
	(prop: #prop)
	(d: \"d\")
	(l: _$l_#l)
	(v: #dwrit_43)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (_lvar_355 == \"String\"))
	(#g_aux_4 == (\"\" :: (_lvar_357 :: _lvar_356)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
	(#g_aux_0 == (_lvar_355 :: (_lvar_366 :: _lvar_365)))
	(#g_aux_3 == ($$f :: (_lvar_360 :: _lvar_359)))
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dconf_43: $$boolean_type)
	(#g_aux_0: $$list_type)
	(_lvar_355: $$string_type)
	(#prop: $$string_type)
	(e: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#dwrit_43: $$boolean_type)
	(_lvar_366: $$string_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(d: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(_lvar_356: $$list_type)
	(v: $$boolean_type)
	(_lvar_357: $$string_type)
	(#writ: $$boolean_type)
	(_lvar_359: $$list_type)
	(_lvar_360: $$boolean_type)
	(#g_aux_1: $$list_type)
	(_lvar_365: $$list_type)
Preds: Pi(_$l_#l, #prop, (_lvar_355 :: (_lvar_366 :: _lvar_365)), {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), ($$f :: (_lvar_360 :: _lvar_359)), (\"\" :: (_lvar_357 :: _lvar_356)))
CMD: skip
----------------------------------
Verified one spec of proc canPut
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 3.150873
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 3.150936
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 3.151418
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 3.151542
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(extensible: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 3.151706
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(extensible: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: goto [(extensible = $$f)] 130 5
----------------------------------
in the THEN branch
----------------------------------
--130--
TIME: 3.152095
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(extensible: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: goto [throw] 131 126
----------------------------------
in the THEN branch
----------------------------------
--131--
TIME: 3.152266
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(extensible: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: xerr := "TypeError"() 
----------------------------------
----------------------------------
--132--
TIME: 3.152638
STATE:
Heap: 
	_$l_43 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(xerr: _$l_43)
	(extensible: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(xerr: $$object_type)
	(extensible: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 3.153074
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 3.153132
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 3.153671
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 3.153789
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(extensible: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 3.153977
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(extensible: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: goto [(extensible = $$f)] 130 5
----------------------------------
in the THEN branch
----------------------------------
--130--
TIME: 3.154126
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(extensible: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: goto [throw] 131 126
----------------------------------
in the ELSE branch
----------------------------------
--126--
TIME: 3.154298
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(extensible: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--127--
TIME: 3.154405
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$f)
	(extensible: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#desc: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 3.154823
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#desc: $$list_type)
	(#dconf_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_29: $$boolean_type)
	(l: $$object_type)
	(#denum_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 3.154925
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(xret: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_29: $$boolean_type)
	(l: $$object_type)
	(#denum_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 3.155555
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#dval_29 == $$empty))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_29: $$boolean_type)
	(#dwrit_29: $$boolean_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 3.155726
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#dval_29 == $$empty))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dwrit_29: $$boolean_type)
	(#dconf_29: $$boolean_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the THEN branch
----------------------------------
--4--
TIME: 3.155995
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#dval_29 == $$empty))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_29: $$boolean_type)
	(#dwrit_29: $$boolean_type)
Preds: 
CMD: goto [(extensible = $$f)] 130 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 3.156316
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#dval_29 == $$empty))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dwrit_29: $$boolean_type)
	(#dconf_29: $$boolean_type)
Preds: 
CMD: gd := "i__isGenericDescriptor"(desc) 
----------------------------------
----------------------------------
--6--
TIME: 3.157029
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: $$t)
	(gd: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_29 == $$empty))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dwrit_29: $$boolean_type)
	(#dconf_29: $$boolean_type)
Preds: 
CMD: dd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--7--
TIME: 3.157718
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: $$t)
	(gd: $$f)
	(dd: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_29 == $$empty))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dwrit_29: $$boolean_type)
	(#dconf_29: $$boolean_type)
Preds: 
CMD: goto [(gd or dd)] 8 11
----------------------------------
in the THEN branch
----------------------------------
--8--
TIME: 3.157952
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: $$t)
	(gd: $$f)
	(dd: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_29 == $$empty))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_29: $$boolean_type)
	(#dwrit_29: $$boolean_type)
Preds: 
CMD: ndesc := "i__toDataDescriptor"(desc) 
----------------------------------
----------------------------------
--9--
TIME: 3.158604
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: $$t)
	(gd: $$f)
	(dd: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
	(ndesc: #desc)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_29 == $$empty))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_29: $$boolean_type)
	(#dwrit_29: $$boolean_type)
	(ndesc: $$list_type)
Preds: 
CMD: [l, prop] := ndesc
----------------------------------
----------------------------------
--10--
TIME: 3.158847
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }}), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: $$t)
	(gd: $$f)
	(dd: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
	(ndesc: #desc)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_29 == $$empty))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dwrit_29: $$boolean_type)
	(#dconf_29: $$boolean_type)
	(ndesc: $$list_type)
Preds: 
CMD: goto 124
----------------------------------
----------------------------------
--124--
TIME: 3.159026
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }}), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: $$t)
	(gd: $$f)
	(dd: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
	(ndesc: #desc)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_29 == $$empty))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_29: $$boolean_type)
	(#dwrit_29: $$boolean_type)
	(ndesc: $$list_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--125--
TIME: 3.159201
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }}), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: $$t)
	(gd: $$f)
	(dd: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
	(ndesc: #desc)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_29 == $$empty))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dwrit_29: $$boolean_type)
	(#dconf_29: $$boolean_type)
	(ndesc: $$list_type)
Preds: 
CMD: goto 127
----------------------------------
----------------------------------
--127--
TIME: 3.159515
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }}), (\"@class\": #cls), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: $$t)
	(gd: $$f)
	(dd: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
	(current: $$undefined)
	(ndesc: #desc)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_29 == $$empty))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(l: $$object_type)
	(current: $$undefined_type)
	(#denum_29: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_29: $$boolean_type)
	(#dwrit_29: $$boolean_type)
	(ndesc: $$list_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 3.160767
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(#ext: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(l: $$object_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 3.160916
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(l: $$object_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 3.162139
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 3.162380
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 3.162770
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(l-nth(desc, 0.) = "d")] 15 22
----------------------------------
in the THEN branch
----------------------------------
--15--
TIME: 3.163072
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: de := l-nth(desc, 3.)
----------------------------------
----------------------------------
--16--
TIME: 3.163400
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_30)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dc := l-nth(desc, 4.)
----------------------------------
----------------------------------
--17--
TIME: 3.163631
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_30)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dc: #dconf_30)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dv := l-nth(desc, 1.)
----------------------------------
----------------------------------
--18--
TIME: 3.163857
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_30)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dv: #dval_30)
	(dc: #dconf_30)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dw := l-nth(desc, 2.)
----------------------------------
----------------------------------
--19--
TIME: 3.164113
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_30)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dv: #dval_30)
	(dc: #dconf_30)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
	(dw: #dwrit_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(dw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dg := $$empty
----------------------------------
----------------------------------
--20--
TIME: 3.164410
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: ds := $$empty
----------------------------------
----------------------------------
--21--
TIME: 3.164927
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto 36
----------------------------------
----------------------------------
--36--
TIME: 3.165241
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: goto [((((((de = $$empty) and (dc = $$empty)) and (dv = $$empty)) and (dw = $$empty)) and (dg = $$empty)) and (ds = $$empty))] 124 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 3.165740
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [(l-nth(current, 0.) = "d")] 38 47
----------------------------------
in the THEN branch
----------------------------------
--38--
TIME: 3.166489
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: goto [((dg = $$empty) and (ds = $$empty))] 39 56
----------------------------------
in the THEN branch
----------------------------------
--39--
TIME: 3.166915
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: t1 := "i__sameValue"(dc, l-nth(current, 4.)) 
----------------------------------
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!691)))
(define-fun |#dconf_30| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!690)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!690 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!691 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!698)))
(define-fun |#dconf_30| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!699)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!698 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!699 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
----------------------------------
--40--
TIME: 3.237273
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: goto [t1] 41 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 3.237780
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 3.238144
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 3.238479
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the ELSE branch
----------------------------------
--62--
TIME: 3.239418
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: ct := l-nth(current, 0.)
----------------------------------
----------------------------------
--63--
TIME: 3.239809
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cvg := l-nth(current, 1.)
----------------------------------
----------------------------------
--64--
TIME: 3.240132
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cws := l-nth(current, 2.)
----------------------------------
----------------------------------
--65--
TIME: 3.240909
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: gd := "i__isGenericDescriptor"(desc) 
----------------------------------
----------------------------------
--66--
TIME: 3.242305
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: goto [gd] 101 67
----------------------------------
in the ELSE branch
----------------------------------
--67--
TIME: 3.242849
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cdd := "i__isDataDescriptor"(current) 
----------------------------------
----------------------------------
--68--
TIME: 3.244294
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_30 == $$empty))
	(! (#dval_3_23 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(cdd: $$boolean_type)
Preds: 
CMD: ddd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--69--
TIME: 3.245372
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(not (cdd = ddd))] 70 92
----------------------------------
in the ELSE branch
----------------------------------
--92--
TIME: 3.245988
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cdd = $$t)] 93 98
----------------------------------
in the THEN branch
----------------------------------
--93--
TIME: 3.246487
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 94 101
----------------------------------
in the ELSE branch
----------------------------------
--101--
TIME: 3.247146
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: re := de
----------------------------------
----------------------------------
--102--
TIME: 3.247568
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rc := dc
----------------------------------
----------------------------------
--103--
TIME: 3.247938
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 104 105
----------------------------------
in the ELSE branch
----------------------------------
--105--
TIME: 3.248573
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dc = $$empty)] 106 107
----------------------------------
in the ELSE branch
----------------------------------
--107--
TIME: 3.249271
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(ct = "d")] 108 116
----------------------------------
in the THEN branch
----------------------------------
--108--
TIME: 3.249736
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rv := dv
----------------------------------
----------------------------------
--109--
TIME: 3.250145
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rw := dw
----------------------------------
----------------------------------
--110--
TIME: 3.250611
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dv = $$empty)] 111 112
----------------------------------
in the ELSE branch
----------------------------------
--112--
TIME: 3.251190
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dw = $$empty)] 113 114
----------------------------------
in the ELSE branch
----------------------------------
--114--
TIME: 3.251812
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: [l, prop] := {{ "d", rv, rw, re, rc }}
----------------------------------
----------------------------------
--115--
TIME: 3.252226
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 124
----------------------------------
----------------------------------
--124--
TIME: 3.252693
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--125--
TIME: 3.253121
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 127
----------------------------------
----------------------------------
--127--
TIME: 3.253576
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_30 == $$t))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
--40--
TIME: 3.254749
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: goto [t1] 41 56
----------------------------------
in the THEN branch
----------------------------------
--41--
TIME: 3.255265
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: t2 := "i__sameValue"(de, l-nth(current, 3.)) 
----------------------------------
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!710)))
(define-fun |#denum_3_23| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#denum_30| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!711)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!710 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!711 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!718)))
(define-fun |#denum_3_23| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#denum_30| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!719)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!718 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!719 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
----------------------------------
--42--
TIME: 3.320924
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: goto [t2] 43 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 3.321611
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 3.322025
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 3.322393
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the ELSE branch
----------------------------------
--62--
TIME: 3.322988
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: ct := l-nth(current, 0.)
----------------------------------
----------------------------------
--63--
TIME: 3.323398
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cvg := l-nth(current, 1.)
----------------------------------
----------------------------------
--64--
TIME: 3.323807
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cws := l-nth(current, 2.)
----------------------------------
----------------------------------
--65--
TIME: 3.324231
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: gd := "i__isGenericDescriptor"(desc) 
----------------------------------
----------------------------------
--66--
TIME: 3.325428
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: goto [gd] 101 67
----------------------------------
in the ELSE branch
----------------------------------
--67--
TIME: 3.325992
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cdd := "i__isDataDescriptor"(current) 
----------------------------------
----------------------------------
--68--
TIME: 3.327173
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_30 == $$empty))
	(! (#dval_3_23 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(cdd: $$boolean_type)
Preds: 
CMD: ddd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--69--
TIME: 3.328374
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(not (cdd = ddd))] 70 92
----------------------------------
in the ELSE branch
----------------------------------
--92--
TIME: 3.328956
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cdd = $$t)] 93 98
----------------------------------
in the THEN branch
----------------------------------
--93--
TIME: 3.329469
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 94 101
----------------------------------
in the ELSE branch
----------------------------------
--101--
TIME: 3.330216
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: re := de
----------------------------------
----------------------------------
--102--
TIME: 3.330642
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rc := dc
----------------------------------
----------------------------------
--103--
TIME: 3.331087
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 104 105
----------------------------------
in the ELSE branch
----------------------------------
--105--
TIME: 3.331716
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dc = $$empty)] 106 107
----------------------------------
in the ELSE branch
----------------------------------
--107--
TIME: 3.332318
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(ct = "d")] 108 116
----------------------------------
in the THEN branch
----------------------------------
--108--
TIME: 3.333043
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rv := dv
----------------------------------
----------------------------------
--109--
TIME: 3.333483
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rw := dw
----------------------------------
----------------------------------
--110--
TIME: 3.334202
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dv = $$empty)] 111 112
----------------------------------
in the ELSE branch
----------------------------------
--112--
TIME: 3.334867
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dw = $$empty)] 113 114
----------------------------------
in the ELSE branch
----------------------------------
--114--
TIME: 3.335674
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: [l, prop] := {{ "d", rv, rw, re, rc }}
----------------------------------
----------------------------------
--115--
TIME: 3.336120
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 124
----------------------------------
----------------------------------
--124--
TIME: 3.336526
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--125--
TIME: 3.337234
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 127
----------------------------------
----------------------------------
--127--
TIME: 3.337681
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$f)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_30 == #denum_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
--42--
TIME: 3.339423
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: goto [t2] 43 56
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 3.340187
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: t3 := "i__sameValue"(dw, l-nth(current, 2.)) 
----------------------------------
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!731)))
(define-fun |#dwrit_3_23| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dwrit_30| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!730)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!730 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!731 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!739)))
(define-fun |#dwrit_3_23| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#dwrit_30| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!738)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!738 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!739 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
----------------------------------
--44--
TIME: 3.409429
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: goto [t3] 45 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 3.410117
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 3.410572
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 3.411448
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the ELSE branch
----------------------------------
--62--
TIME: 3.412149
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: ct := l-nth(current, 0.)
----------------------------------
----------------------------------
--63--
TIME: 3.413076
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cvg := l-nth(current, 1.)
----------------------------------
----------------------------------
--64--
TIME: 3.413533
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cws := l-nth(current, 2.)
----------------------------------
----------------------------------
--65--
TIME: 3.414056
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: gd := "i__isGenericDescriptor"(desc) 
----------------------------------
----------------------------------
--66--
TIME: 3.415910
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: goto [gd] 101 67
----------------------------------
in the ELSE branch
----------------------------------
--67--
TIME: 3.416684
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cdd := "i__isDataDescriptor"(current) 
----------------------------------
----------------------------------
--68--
TIME: 3.418520
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_30 == $$empty))
	(! (#dval_3_23 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(cdd: $$boolean_type)
Preds: 
CMD: ddd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--69--
TIME: 3.419742
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(not (cdd = ddd))] 70 92
----------------------------------
in the ELSE branch
----------------------------------
--92--
TIME: 3.420345
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cdd = $$t)] 93 98
----------------------------------
in the THEN branch
----------------------------------
--93--
TIME: 3.420921
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 94 101
----------------------------------
in the ELSE branch
----------------------------------
--101--
TIME: 3.422263
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: re := de
----------------------------------
----------------------------------
--102--
TIME: 3.422956
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rc := dc
----------------------------------
----------------------------------
--103--
TIME: 3.423693
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 104 105
----------------------------------
in the ELSE branch
----------------------------------
--105--
TIME: 3.424411
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dc = $$empty)] 106 107
----------------------------------
in the ELSE branch
----------------------------------
--107--
TIME: 3.425164
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(ct = "d")] 108 116
----------------------------------
in the THEN branch
----------------------------------
--108--
TIME: 3.425774
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rv := dv
----------------------------------
----------------------------------
--109--
TIME: 3.426556
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rw := dw
----------------------------------
----------------------------------
--110--
TIME: 3.427189
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dv = $$empty)] 111 112
----------------------------------
in the ELSE branch
----------------------------------
--112--
TIME: 3.428238
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dw = $$empty)] 113 114
----------------------------------
in the ELSE branch
----------------------------------
--114--
TIME: 3.429267
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: [l, prop] := {{ "d", rv, rw, re, rc }}
----------------------------------
----------------------------------
--115--
TIME: 3.429825
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 124
----------------------------------
----------------------------------
--124--
TIME: 3.430314
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--125--
TIME: 3.430861
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 127
----------------------------------
----------------------------------
--127--
TIME: 3.431340
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_30 == #dwrit_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
--44--
TIME: 3.432596
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: goto [t3] 45 56
----------------------------------
in the THEN branch
----------------------------------
--45--
TIME: 3.433138
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: t4 := "i__sameValue"(dv, l-nth(current, 1.)) 
----------------------------------
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!751)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!750)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!750 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!751 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!759)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!758)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!758 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!759 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!766)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!766)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!766 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!774)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!773)))
(define-fun k!773 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!774 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!782)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!781)))
(define-fun k!781 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!782 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!790)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!789)))
(define-fun k!789 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!790 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_3_23| () Extended_JSIL_Literal
  (Set (_ as-array k!798)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_30| () Extended_JSIL_Literal
  (Set (_ as-array k!797)))
(define-fun k!797 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!798 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
----------------------------------
--46--
TIME: 3.619091
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [t4] 124 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 3.626817
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 3.627290
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 3.627762
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the ELSE branch
----------------------------------
--62--
TIME: 3.628408
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: ct := l-nth(current, 0.)
----------------------------------
----------------------------------
--63--
TIME: 3.628842
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cvg := l-nth(current, 1.)
----------------------------------
----------------------------------
--64--
TIME: 3.629301
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cws := l-nth(current, 2.)
----------------------------------
----------------------------------
--65--
TIME: 3.629783
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#dval_30 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: gd := "i__isGenericDescriptor"(desc) 
----------------------------------
----------------------------------
--66--
TIME: 3.631208
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: goto [gd] 101 67
----------------------------------
in the ELSE branch
----------------------------------
--67--
TIME: 3.631892
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
Preds: 
CMD: cdd := "i__isDataDescriptor"(current) 
----------------------------------
----------------------------------
--68--
TIME: 3.633301
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_30 == $$empty))
	(! (#dval_3_23 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(cdd: $$boolean_type)
Preds: 
CMD: ddd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--69--
TIME: 3.634614
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(not (cdd = ddd))] 70 92
----------------------------------
in the ELSE branch
----------------------------------
--92--
TIME: 3.635317
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cdd = $$t)] 93 98
----------------------------------
in the THEN branch
----------------------------------
--93--
TIME: 3.635920
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 94 101
----------------------------------
in the ELSE branch
----------------------------------
--101--
TIME: 3.636569
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: re := de
----------------------------------
----------------------------------
--102--
TIME: 3.637070
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rc := dc
----------------------------------
----------------------------------
--103--
TIME: 3.638128
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 104 105
----------------------------------
in the ELSE branch
----------------------------------
--105--
TIME: 3.639468
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dc = $$empty)] 106 107
----------------------------------
in the ELSE branch
----------------------------------
--107--
TIME: 3.640733
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(ct = "d")] 108 116
----------------------------------
in the THEN branch
----------------------------------
--108--
TIME: 3.641582
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rv := dv
----------------------------------
----------------------------------
--109--
TIME: 3.642172
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rw := dw
----------------------------------
----------------------------------
--110--
TIME: 3.643075
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dv = $$empty)] 111 112
----------------------------------
in the ELSE branch
----------------------------------
--112--
TIME: 3.643897
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dw = $$empty)] 113 114
----------------------------------
in the ELSE branch
----------------------------------
--114--
TIME: 3.644881
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: [l, prop] := {{ "d", rv, rw, re, rc }}
----------------------------------
----------------------------------
--115--
TIME: 3.645477
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 124
----------------------------------
----------------------------------
--124--
TIME: 3.646353
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--125--
TIME: 3.646936
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_30: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_30: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_30: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 127
----------------------------------
----------------------------------
--127--
TIME: 3.647847
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_30)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_30)
	(re: #denum_30)
	(xret: $$t)
	(rv: #dval_30)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: #dwrit_3_23)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_30)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(t2: $$t)
	(rc: #dconf_30)
	(cc: $$t)
	(ce: #denum_3_23)
	(dc: #dconf_30)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_30)
	(cvg: #dval_3_23)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_30 == #dval_3_23))
	(! (#dval_3_23 == $$empty))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_3_23, #denum_3_23, $$t }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
	(#denum_30 == #denum_3_23)
	(#dwrit_30 == #dwrit_3_23)
	(#dconf_30 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#denum_3_23: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_23: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 3.667702
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_31 == $$empty))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(l: $$object_type)
	(#denum_3_24: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 3.667893
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_31 == $$empty))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(l: $$object_type)
	(#denum_3_24: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 3.668979
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_24: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 3.669224
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_24: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 3.670806
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_24: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(l-nth(desc, 0.) = "d")] 15 22
----------------------------------
in the THEN branch
----------------------------------
--15--
TIME: 3.671182
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_24: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: de := l-nth(desc, 3.)
----------------------------------
----------------------------------
--16--
TIME: 3.671429
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_31)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_24: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dc := l-nth(desc, 4.)
----------------------------------
----------------------------------
--17--
TIME: 3.671702
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_31)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(dc: $$t)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_24: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dv := l-nth(desc, 1.)
----------------------------------
----------------------------------
--18--
TIME: 3.671949
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_31)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(dv: #dval_31)
	(dc: $$t)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_24: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dw := l-nth(desc, 2.)
----------------------------------
----------------------------------
--19--
TIME: 3.672201
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_31)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(dv: #dval_31)
	(dc: $$t)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
	(dw: #dwrit_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_24: $$boolean_type)
	(dw: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dg := $$empty
----------------------------------
----------------------------------
--20--
TIME: 3.672581
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#dwrit_3_24: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#denum_3_24: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: ds := $$empty
----------------------------------
----------------------------------
--21--
TIME: 3.672906
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_24: $$boolean_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: goto 36
----------------------------------
----------------------------------
--36--
TIME: 3.673256
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#dwrit_3_24: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#denum_3_24: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: goto [((((((de = $$empty) and (dc = $$empty)) and (dv = $$empty)) and (dw = $$empty)) and (dg = $$empty)) and (ds = $$empty))] 124 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 3.673813
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_24: $$boolean_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: goto [(l-nth(current, 0.) = "d")] 38 47
----------------------------------
in the THEN branch
----------------------------------
--38--
TIME: 3.674289
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#dwrit_3_24: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#denum_3_24: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: goto [((dg = $$empty) and (ds = $$empty))] 39 56
----------------------------------
in the THEN branch
----------------------------------
--39--
TIME: 3.674695
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_24: $$boolean_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: t1 := "i__sameValue"(dc, l-nth(current, 4.)) 
----------------------------------
----------------------------------
--40--
TIME: 3.675851
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_24: $$boolean_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: goto [t1] 41 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 3.676361
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#dwrit_3_24: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#denum_3_24: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 3.676721
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(cc: $$f)
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_24: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 3.677056
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(cc: $$f)
	(ce: #denum_3_24)
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#dwrit_3_24: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#denum_3_24: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the THEN branch
----------------------------------
--59--
TIME: 3.677562
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(cc: $$f)
	(ce: #denum_3_24)
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_24: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: goto [(dc = $$t)] 130 60
----------------------------------
in the THEN branch
----------------------------------
--130--
TIME: 3.678029
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(cc: $$f)
	(ce: #denum_3_24)
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#dwrit_3_24: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#denum_3_24: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: goto [throw] 131 126
----------------------------------
in the THEN branch
----------------------------------
--131--
TIME: 3.678449
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(cc: $$f)
	(ce: #denum_3_24)
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_24: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: xerr := "TypeError"() 
----------------------------------
----------------------------------
--132--
TIME: 3.679434
STATE:
Heap: 
	_$l_44 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_31)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(xerr: _$l_44)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_31)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(cc: $$f)
	(ce: #denum_3_24)
	(dc: $$t)
	(dv: #dval_31)
Pure Formulae: 	
	(! (#dval_31 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(xret: $$boolean_type)
	(xerr: $$object_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_24: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_31: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 3.680562
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_32 == $$empty))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 3.680720
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_32 == $$empty))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 3.681792
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 3.682048
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 3.682467
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(l-nth(desc, 0.) = "d")] 15 22
----------------------------------
in the THEN branch
----------------------------------
--15--
TIME: 3.682789
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: de := l-nth(desc, 3.)
----------------------------------
----------------------------------
--16--
TIME: 3.683034
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_32)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dc := l-nth(desc, 4.)
----------------------------------
----------------------------------
--17--
TIME: 3.683281
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_32)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(dc: $$t)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dv := l-nth(desc, 1.)
----------------------------------
----------------------------------
--18--
TIME: 3.683567
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_32)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(dv: #dval_32)
	(dc: $$t)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dw := l-nth(desc, 2.)
----------------------------------
----------------------------------
--19--
TIME: 3.683818
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_32)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(dv: #dval_32)
	(dc: $$t)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
	(dw: #dwrit_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(dw: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dg := $$empty
----------------------------------
----------------------------------
--20--
TIME: 3.684142
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_32: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_3_25: $$boolean_type)
	(#dconf_32: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: ds := $$empty
----------------------------------
----------------------------------
--21--
TIME: 3.684458
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(#dwrit_32: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto 36
----------------------------------
----------------------------------
--36--
TIME: 3.684850
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_32: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_3_25: $$boolean_type)
	(#dconf_32: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [((((((de = $$empty) and (dc = $$empty)) and (dv = $$empty)) and (dw = $$empty)) and (dg = $$empty)) and (ds = $$empty))] 124 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 3.685332
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(#dwrit_32: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [(l-nth(current, 0.) = "d")] 38 47
----------------------------------
in the THEN branch
----------------------------------
--38--
TIME: 3.685742
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_32: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_3_25: $$boolean_type)
	(#dconf_32: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [((dg = $$empty) and (ds = $$empty))] 39 56
----------------------------------
in the THEN branch
----------------------------------
--39--
TIME: 3.686289
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(#dwrit_32: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: t1 := "i__sameValue"(dc, l-nth(current, 4.)) 
----------------------------------
----------------------------------
--40--
TIME: 3.687548
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(#dwrit_32: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [t1] 41 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 3.688038
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#denum_32: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_3_25: $$boolean_type)
	(#dconf_32: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 3.688374
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(cc: $$f)
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(#dwrit_32: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dconf_32: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 3.688768
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(cc: $$f)
	(ce: #denum_3_25)
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#denum_32: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_3_25: $$boolean_type)
	(#dconf_32: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the THEN branch
----------------------------------
--59--
TIME: 3.689210
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(cc: $$f)
	(ce: #denum_3_25)
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(#dwrit_32: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#dconf_32: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [(dc = $$t)] 130 60
----------------------------------
in the THEN branch
----------------------------------
--130--
TIME: 3.689633
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(cc: $$f)
	(ce: #denum_3_25)
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#denum_32: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_3_25: $$boolean_type)
	(#dconf_32: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [throw] 131 126
----------------------------------
in the ELSE branch
----------------------------------
--126--
TIME: 3.690165
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(cc: $$f)
	(ce: #denum_3_25)
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(#dwrit_32: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#dconf_32: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--127--
TIME: 3.690502
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_32)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$f)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: #denum_32)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(cc: $$f)
	(ce: #denum_3_25)
	(dc: $$t)
	(dv: #dval_32)
Pure Formulae: 	
	(! (#dval_32 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_25: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#denum_32: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_25: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_3_25: $$boolean_type)
	(#dconf_32: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 3.691402
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(#denum_33: $$boolean_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 3.691626
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(#denum_33: $$boolean_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 3.692900
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(#denum_33: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 3.693251
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(#denum_33: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 3.693826
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(#denum_33: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: goto [(l-nth(desc, 0.) = "d")] 15 22
----------------------------------
in the THEN branch
----------------------------------
--15--
TIME: 3.694282
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(#denum_33: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: de := l-nth(desc, 3.)
----------------------------------
----------------------------------
--16--
TIME: 3.694635
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_33)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(#denum_33: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: dc := l-nth(desc, 4.)
----------------------------------
----------------------------------
--17--
TIME: 3.695028
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_33)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_33: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: dv := l-nth(desc, 1.)
----------------------------------
----------------------------------
--18--
TIME: 3.695383
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_33)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(dv: #dval_33)
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_33: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: dw := l-nth(desc, 2.)
----------------------------------
----------------------------------
--19--
TIME: 3.695744
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_33)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(dv: #dval_33)
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
	(dw: #dwrit_33)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_33: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(dw: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: dg := $$empty
----------------------------------
----------------------------------
--20--
TIME: 3.696208
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_33: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_26: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_26: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dconf_3_26: $$boolean_type)
	(#dcur: $$list_type)
	(#ec: $$boolean_type)
	(#dconf_33: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: ds := $$empty
----------------------------------
----------------------------------
--21--
TIME: 3.696646
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_33: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: goto 36
----------------------------------
----------------------------------
--36--
TIME: 3.697040
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_33: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_26: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_26: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dconf_3_26: $$boolean_type)
	(#dcur: $$list_type)
	(#ec: $$boolean_type)
	(#dconf_33: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [((((((de = $$empty) and (dc = $$empty)) and (dv = $$empty)) and (dw = $$empty)) and (dg = $$empty)) and (ds = $$empty))] 124 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 3.697650
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_33: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: goto [(l-nth(current, 0.) = "d")] 38 47
----------------------------------
in the THEN branch
----------------------------------
--38--
TIME: 3.698162
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_33: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_26: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_26: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dconf_3_26: $$boolean_type)
	(#dcur: $$list_type)
	(#ec: $$boolean_type)
	(#dconf_33: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [((dg = $$empty) and (ds = $$empty))] 39 56
----------------------------------
in the THEN branch
----------------------------------
--39--
TIME: 3.698687
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_33: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: t1 := "i__sameValue"(dc, l-nth(current, 4.)) 
----------------------------------
----------------------------------
--40--
TIME: 3.699634
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_33: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: goto [t1] 41 56
----------------------------------
in the THEN branch
----------------------------------
--41--
TIME: 3.700156
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_33: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_26: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#dwrit_3_26: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dconf_3_26: $$boolean_type)
	(#dcur: $$list_type)
	(#ec: $$boolean_type)
	(#dconf_33: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: t2 := "i__sameValue"(de, l-nth(current, 3.)) 
----------------------------------
----------------------------------
--42--
TIME: 3.701844
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(t2: $$f)
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_33 == #denum_3_26))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_33: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_26: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dconf_3_26: $$boolean_type)
	(#dcur: $$list_type)
	(#ec: $$boolean_type)
	(#dconf_33: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [t2] 43 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 3.702452
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(t2: $$f)
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_33 == #denum_3_26))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_33: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 3.702864
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(t2: $$f)
	(cc: $$f)
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_33 == #denum_3_26))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_33: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_26: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dconf_3_26: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#ec: $$boolean_type)
	(#dconf_33: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 3.703268
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_26)
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_33 == #denum_3_26))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_33: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the THEN branch
----------------------------------
--59--
TIME: 3.703974
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_26)
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_33 == #denum_3_26))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_33: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_26: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dconf_3_26: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#ec: $$boolean_type)
	(#dconf_33: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [(dc = $$t)] 130 60
----------------------------------
in the ELSE branch
----------------------------------
--60--
TIME: 3.704604
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_26)
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_33 == #denum_3_26))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_33: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 62 61
----------------------------------
in the ELSE branch
----------------------------------
--61--
TIME: 3.705249
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_26)
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_33 == #denum_3_26))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_33: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_26: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dconf_3_26: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#ec: $$boolean_type)
	(#dconf_33: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: goto [(not (ce = de))] 130 62
----------------------------------
in the THEN branch
----------------------------------
--130--
TIME: 3.705802
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_26)
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_33 == #denum_3_26))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_33: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dwrit_33: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
CMD: goto [throw] 131 126
----------------------------------
in the THEN branch
----------------------------------
--131--
TIME: 3.706570
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_26)
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_33 == #denum_3_26))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_33: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_26: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dconf_3_26: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#ec: $$boolean_type)
	(#dconf_33: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: xerr := "TypeError"() 
----------------------------------
----------------------------------
--132--
TIME: 3.707926
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
	_$l_45 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(dw: #dwrit_33)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(xerr: _$l_45)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_33)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_26)
	(dc: $$f)
	(dv: #dval_33)
Pure Formulae: 	
	(! (#dval_33 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_33 == #denum_3_26))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#dconf_3_26 == $$f)
	(#ed == #denum_33)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_33: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(xerr: $$object_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_26: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#dwrit_3_26: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dconf_3_26: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#ec: $$boolean_type)
	(#dconf_33: $$boolean_type)
	(dc: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 3.710935
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(#dconf_3_27: $$boolean_type)
	(l: $$object_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 3.711171
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(#dconf_3_27: $$boolean_type)
	(l: $$object_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 3.712701
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(l: $$object_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 3.713040
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(l: $$object_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 3.713632
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(l: $$object_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 
CMD: goto [(l-nth(desc, 0.) = "d")] 15 22
----------------------------------
in the THEN branch
----------------------------------
--15--
TIME: 3.714034
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(l: $$object_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 
CMD: de := l-nth(desc, 3.)
----------------------------------
----------------------------------
--16--
TIME: 3.714374
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_34)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(l: $$object_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 
CMD: dc := l-nth(desc, 4.)
----------------------------------
----------------------------------
--17--
TIME: 3.714695
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_34)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(l: $$object_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 
CMD: dv := l-nth(desc, 1.)
----------------------------------
----------------------------------
--18--
TIME: 3.715114
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_34)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(dv: #dval_34)
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(l: $$object_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 
CMD: dw := l-nth(desc, 2.)
----------------------------------
----------------------------------
--19--
TIME: 3.715462
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_34)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(dv: #dval_34)
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
	(dw: #dwrit_34)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(l: $$object_type)
	(dw: $$boolean_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 
CMD: dg := $$empty
----------------------------------
----------------------------------
--20--
TIME: 3.715846
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_3_27: $$boolean_type)
	(throw: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(prop: $$string_type)
	(#dconf_34: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dcur: $$list_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: ds := $$empty
----------------------------------
----------------------------------
--21--
TIME: 3.716497
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: goto 36
----------------------------------
----------------------------------
--36--
TIME: 3.716890
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_3_27: $$boolean_type)
	(throw: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(prop: $$string_type)
	(#dconf_34: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dcur: $$list_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: goto [((((((de = $$empty) and (dc = $$empty)) and (dv = $$empty)) and (dw = $$empty)) and (dg = $$empty)) and (ds = $$empty))] 124 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 3.717732
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: goto [(l-nth(current, 0.) = "d")] 38 47
----------------------------------
in the THEN branch
----------------------------------
--38--
TIME: 3.718231
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_3_27: $$boolean_type)
	(throw: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(prop: $$string_type)
	(#dconf_34: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dcur: $$list_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: goto [((dg = $$empty) and (ds = $$empty))] 39 56
----------------------------------
in the THEN branch
----------------------------------
--39--
TIME: 3.718771
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: t1 := "i__sameValue"(dc, l-nth(current, 4.)) 
----------------------------------
----------------------------------
--40--
TIME: 3.720170
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: goto [t1] 41 56
----------------------------------
in the THEN branch
----------------------------------
--41--
TIME: 3.720693
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_3_27: $$boolean_type)
	(throw: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dcur: $$list_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: t2 := "i__sameValue"(de, l-nth(current, 3.)) 
----------------------------------
----------------------------------
--42--
TIME: 3.722247
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(t2: $$f)
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_34 == #denum_3_27))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_3_27: $$boolean_type)
	(throw: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dcur: $$list_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: goto [t2] 43 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 3.722957
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(t2: $$f)
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_34 == #denum_3_27))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 3.723362
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(t2: $$f)
	(cc: $$f)
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_34 == #denum_3_27))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_3_27: $$boolean_type)
	(throw: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 3.723845
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_27)
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_34 == #denum_3_27))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the THEN branch
----------------------------------
--59--
TIME: 3.724508
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_27)
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_34 == #denum_3_27))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_3_27: $$boolean_type)
	(throw: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: goto [(dc = $$t)] 130 60
----------------------------------
in the ELSE branch
----------------------------------
--60--
TIME: 3.725137
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_27)
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_34 == #denum_3_27))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 62 61
----------------------------------
in the ELSE branch
----------------------------------
--61--
TIME: 3.725837
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_27)
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_34 == #denum_3_27))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_3_27: $$boolean_type)
	(throw: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: goto [(not (ce = de))] 130 62
----------------------------------
in the THEN branch
----------------------------------
--130--
TIME: 3.726387
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_27)
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_34 == #denum_3_27))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: goto [throw] 131 126
----------------------------------
in the ELSE branch
----------------------------------
--126--
TIME: 3.727043
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_27)
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_34 == #denum_3_27))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(#denum_3_27: $$boolean_type)
	(throw: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#ed: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#ec: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--127--
TIME: 3.727478
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_34)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$f)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_34)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(t2: $$f)
	(cc: $$f)
	(ce: #denum_3_27)
	(dc: $$f)
	(dv: #dval_34)
Pure Formulae: 	
	(! (#dval_34 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_34 == #denum_3_27))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dconf_3_27: $$boolean_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_34: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#denum_34: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#ed: $$boolean_type)
	(#ec: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_34: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 3.728967
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 3.729209
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 3.730925
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_3_28: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 3.731282
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_3_28: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 3.731875
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_3_28: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [(l-nth(desc, 0.) = "d")] 15 22
----------------------------------
in the THEN branch
----------------------------------
--15--
TIME: 3.732309
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_3_28: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: de := l-nth(desc, 3.)
----------------------------------
----------------------------------
--16--
TIME: 3.732643
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_35)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_3_28: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: dc := l-nth(desc, 4.)
----------------------------------
----------------------------------
--17--
TIME: 3.733098
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_35)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_3_28: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: dv := l-nth(desc, 1.)
----------------------------------
----------------------------------
--18--
TIME: 3.733466
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_35)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(dv: #dval_35)
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_3_28: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: dw := l-nth(desc, 2.)
----------------------------------
----------------------------------
--19--
TIME: 3.733823
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_35)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(dv: #dval_35)
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
	(dw: $$t)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dwrit_3_28: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(dc: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(dw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: dg := $$empty
----------------------------------
----------------------------------
--20--
TIME: 3.734251
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: ds := $$empty
----------------------------------
----------------------------------
--21--
TIME: 3.734720
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto 36
----------------------------------
----------------------------------
--36--
TIME: 3.735171
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [((((((de = $$empty) and (dc = $$empty)) and (dv = $$empty)) and (dw = $$empty)) and (dg = $$empty)) and (ds = $$empty))] 124 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 3.735914
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [(l-nth(current, 0.) = "d")] 38 47
----------------------------------
in the THEN branch
----------------------------------
--38--
TIME: 3.736469
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [((dg = $$empty) and (ds = $$empty))] 39 56
----------------------------------
in the THEN branch
----------------------------------
--39--
TIME: 3.737100
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: t1 := "i__sameValue"(dc, l-nth(current, 4.)) 
----------------------------------
----------------------------------
--40--
TIME: 3.738157
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [t1] 41 56
----------------------------------
in the THEN branch
----------------------------------
--41--
TIME: 3.738752
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: t2 := "i__sameValue"(de, l-nth(current, 3.)) 
----------------------------------
----------------------------------
--42--
TIME: 3.739987
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [t2] 43 56
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 3.740543
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: t3 := "i__sameValue"(dw, l-nth(current, 2.)) 
----------------------------------
----------------------------------
--44--
TIME: 3.742002
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [t3] 45 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 3.742650
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 3.743082
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dconf_3_28: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 3.743592
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the THEN branch
----------------------------------
--59--
TIME: 3.744135
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [(dc = $$t)] 130 60
----------------------------------
in the ELSE branch
----------------------------------
--60--
TIME: 3.744806
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 62 61
----------------------------------
in the ELSE branch
----------------------------------
--61--
TIME: 3.745431
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [(not (ce = de))] 130 62
----------------------------------
in the ELSE branch
----------------------------------
--62--
TIME: 3.746136
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: ct := l-nth(current, 0.)
----------------------------------
----------------------------------
--63--
TIME: 3.746614
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_35)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: cvg := l-nth(current, 1.)
----------------------------------
----------------------------------
--64--
TIME: 3.747222
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_35)
	(cvg: #dval_3_28)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: cws := l-nth(current, 2.)
----------------------------------
----------------------------------
--65--
TIME: 3.747719
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_35)
	(cvg: #dval_3_28)
Pure Formulae: 	
	(! (#dval_35 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: gd := "i__isGenericDescriptor"(desc) 
----------------------------------
----------------------------------
--66--
TIME: 3.749080
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_35)
	(cvg: #dval_3_28)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [gd] 101 67
----------------------------------
in the ELSE branch
----------------------------------
--67--
TIME: 3.749811
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_35)
	(cvg: #dval_3_28)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: cdd := "i__isDataDescriptor"(current) 
----------------------------------
----------------------------------
--68--
TIME: 3.751190
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_35)
	(cvg: #dval_3_28)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_35 == $$empty))
	(! (#dval_3_28 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(cdd: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: ddd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--69--
TIME: 3.752536
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_35)
	(cvg: #dval_3_28)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_28 == $$empty))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [(not (cdd = ddd))] 70 92
----------------------------------
in the ELSE branch
----------------------------------
--92--
TIME: 3.753245
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_35)
	(cvg: #dval_3_28)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_28 == $$empty))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dwrit_35: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cdd = $$t)] 93 98
----------------------------------
in the THEN branch
----------------------------------
--93--
TIME: 3.754249
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_35)
	(cvg: #dval_3_28)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_28 == $$empty))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 94 101
----------------------------------
in the THEN branch
----------------------------------
--94--
TIME: 3.755427
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_35)
	(cvg: #dval_3_28)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_28 == $$empty))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dwrit_35: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [((cws = $$f) and (dw = $$t))] 130 95
----------------------------------
in the THEN branch
----------------------------------
--130--
TIME: 3.756662
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_35)
	(cvg: #dval_3_28)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_28 == $$empty))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_3_28: $$boolean_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_3_28: $$boolean_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
CMD: goto [throw] 131 126
----------------------------------
in the THEN branch
----------------------------------
--131--
TIME: 3.757684
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_35)
	(cvg: #dval_3_28)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_28 == $$empty))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dwrit_35: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: xerr := "TypeError"() 
----------------------------------
----------------------------------
--132--
TIME: 3.759046
STATE:
Heap: 
	_$l_46 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$t)
	(xret: $$t)
	(xerr: _$l_46)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_35)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_35)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_35)
	(cvg: #dval_3_28)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_28 == $$empty))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_35: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(xerr: $$object_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#dconf_35: $$boolean_type)
	(de: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dconf_3_28: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dwrit_35: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 3.761166
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(l: $$object_type)
	(#denum_36: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 3.761435
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(l: $$object_type)
	(#denum_36: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 3.763074
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_36: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 3.763461
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_36: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 3.764080
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_36: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(l-nth(desc, 0.) = "d")] 15 22
----------------------------------
in the THEN branch
----------------------------------
--15--
TIME: 3.764545
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_36: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: de := l-nth(desc, 3.)
----------------------------------
----------------------------------
--16--
TIME: 3.764901
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_36)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_36: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dc := l-nth(desc, 4.)
----------------------------------
----------------------------------
--17--
TIME: 3.765284
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_36)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_36: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dv := l-nth(desc, 1.)
----------------------------------
----------------------------------
--18--
TIME: 3.765678
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_36)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(dv: #dval_36)
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_36: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dw := l-nth(desc, 2.)
----------------------------------
----------------------------------
--19--
TIME: 3.766058
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_36)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(dv: #dval_36)
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
	(dw: $$t)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_36: $$boolean_type)
	(dw: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: dg := $$empty
----------------------------------
----------------------------------
--20--
TIME: 3.766492
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: ds := $$empty
----------------------------------
----------------------------------
--21--
TIME: 3.766991
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto 36
----------------------------------
----------------------------------
--36--
TIME: 3.767443
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto [((((((de = $$empty) and (dc = $$empty)) and (dv = $$empty)) and (dw = $$empty)) and (dg = $$empty)) and (ds = $$empty))] 124 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 3.768147
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto [(l-nth(current, 0.) = "d")] 38 47
----------------------------------
in the THEN branch
----------------------------------
--38--
TIME: 3.768679
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto [((dg = $$empty) and (ds = $$empty))] 39 56
----------------------------------
in the THEN branch
----------------------------------
--39--
TIME: 3.769231
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: t1 := "i__sameValue"(dc, l-nth(current, 4.)) 
----------------------------------
----------------------------------
--40--
TIME: 3.770279
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto [t1] 41 56
----------------------------------
in the THEN branch
----------------------------------
--41--
TIME: 3.770868
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: t2 := "i__sameValue"(de, l-nth(current, 3.)) 
----------------------------------
----------------------------------
--42--
TIME: 3.772124
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto [t2] 43 56
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 3.772675
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: t3 := "i__sameValue"(dw, l-nth(current, 2.)) 
----------------------------------
----------------------------------
--44--
TIME: 3.774463
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto [t3] 45 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 3.775284
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 3.775818
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 3.776302
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the THEN branch
----------------------------------
--59--
TIME: 3.793469
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto [(dc = $$t)] 130 60
----------------------------------
in the ELSE branch
----------------------------------
--60--
TIME: 3.794318
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 62 61
----------------------------------
in the ELSE branch
----------------------------------
--61--
TIME: 3.795249
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto [(not (ce = de))] 130 62
----------------------------------
in the ELSE branch
----------------------------------
--62--
TIME: 3.795912
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: ct := l-nth(current, 0.)
----------------------------------
----------------------------------
--63--
TIME: 3.796372
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_36)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: cvg := l-nth(current, 1.)
----------------------------------
----------------------------------
--64--
TIME: 3.797030
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_36)
	(cvg: #dval_3_29)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: cws := l-nth(current, 2.)
----------------------------------
----------------------------------
--65--
TIME: 3.797542
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_36)
	(cvg: #dval_3_29)
Pure Formulae: 	
	(! (#dval_36 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: gd := "i__isGenericDescriptor"(desc) 
----------------------------------
----------------------------------
--66--
TIME: 3.799415
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_36)
	(cvg: #dval_3_29)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: goto [gd] 101 67
----------------------------------
in the ELSE branch
----------------------------------
--67--
TIME: 3.800128
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_36)
	(cvg: #dval_3_29)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_36: $$boolean_type)
Preds: 
CMD: cdd := "i__isDataDescriptor"(current) 
----------------------------------
----------------------------------
--68--
TIME: 3.801741
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_36)
	(cvg: #dval_3_29)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_36 == $$empty))
	(! (#dval_3_29 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_36: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: ddd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--69--
TIME: 3.803459
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_36)
	(cvg: #dval_3_29)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_29 == $$empty))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dwrit_36: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(not (cdd = ddd))] 70 92
----------------------------------
in the ELSE branch
----------------------------------
--92--
TIME: 3.804230
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_36)
	(cvg: #dval_3_29)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_29 == $$empty))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_36: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cdd = $$t)] 93 98
----------------------------------
in the THEN branch
----------------------------------
--93--
TIME: 3.805049
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_36)
	(cvg: #dval_3_29)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_29 == $$empty))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dwrit_36: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 94 101
----------------------------------
in the THEN branch
----------------------------------
--94--
TIME: 3.805714
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_36)
	(cvg: #dval_3_29)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_29 == $$empty))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_36: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [((cws = $$f) and (dw = $$t))] 130 95
----------------------------------
in the THEN branch
----------------------------------
--130--
TIME: 3.806591
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_36)
	(cvg: #dval_3_29)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_29 == $$empty))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dwrit_36: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [throw] 131 126
----------------------------------
in the ELSE branch
----------------------------------
--126--
TIME: 3.807386
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_36)
	(cvg: #dval_3_29)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_29 == $$empty))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(#dconf_3_29: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#denum_36: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#dwrit_36: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: xret := $$f
----------------------------------
----------------------------------
--127--
TIME: 3.807909
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$t)
	(dg: $$empty)
	(throw: $$f)
	(xret: $$f)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$f)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_36)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_36)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_36)
	(cvg: #dval_3_29)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_29 == $$empty))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(dw: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#dwrit_3_29: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(#denum_36: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dwrit_36: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 3.809308
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(l: $$object_type)
	(#dconf_37: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 3.809513
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(l: $$object_type)
	(#dconf_37: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 3.812073
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_37: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 3.812410
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_37: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 3.812912
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_37: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(l-nth(desc, 0.) = "d")] 15 22
----------------------------------
in the THEN branch
----------------------------------
--15--
TIME: 3.813311
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_37: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: de := l-nth(desc, 3.)
----------------------------------
----------------------------------
--16--
TIME: 3.813678
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_37)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_37: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: dc := l-nth(desc, 4.)
----------------------------------
----------------------------------
--17--
TIME: 3.813994
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_37)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_37: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: dv := l-nth(desc, 1.)
----------------------------------
----------------------------------
--18--
TIME: 3.814342
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_37)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(dv: #dval_37)
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_37: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: dw := l-nth(desc, 2.)
----------------------------------
----------------------------------
--19--
TIME: 3.814662
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(de: #denum_37)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(dv: #dval_37)
	(dc: $$f)
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
	(dw: #dwrit_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(de: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_37: $$boolean_type)
	(dw: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: dg := $$empty
----------------------------------
----------------------------------
--20--
TIME: 3.815093
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: ds := $$empty
----------------------------------
----------------------------------
--21--
TIME: 3.815515
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto 36
----------------------------------
----------------------------------
--36--
TIME: 3.815906
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [((((((de = $$empty) and (dc = $$empty)) and (dv = $$empty)) and (dw = $$empty)) and (dg = $$empty)) and (ds = $$empty))] 124 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 3.816697
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(l-nth(current, 0.) = "d")] 38 47
----------------------------------
in the THEN branch
----------------------------------
--38--
TIME: 3.817257
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [((dg = $$empty) and (ds = $$empty))] 39 56
----------------------------------
in the THEN branch
----------------------------------
--39--
TIME: 3.817843
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: t1 := "i__sameValue"(dc, l-nth(current, 4.)) 
----------------------------------
----------------------------------
--40--
TIME: 3.818975
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [t1] 41 56
----------------------------------
in the THEN branch
----------------------------------
--41--
TIME: 3.819630
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: t2 := "i__sameValue"(de, l-nth(current, 3.)) 
----------------------------------
----------------------------------
--42--
TIME: 3.822039
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [t2] 43 56
----------------------------------
in the THEN branch
----------------------------------
--43--
TIME: 3.823069
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: t3 := "i__sameValue"(dw, l-nth(current, 2.)) 
----------------------------------
I found the model: 

(define-fun |#dval_37| () Extended_JSIL_Literal
  (Set (_ as-array k!809)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dwrit_37| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#dval_3_30| () Extended_JSIL_Literal
  (Set (_ as-array k!810)))
(define-fun k!809 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!810 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_37| () Extended_JSIL_Literal
  (Set (_ as-array k!817)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dwrit_37| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dval_3_30| () Extended_JSIL_Literal
  (Set (_ as-array k!818)))
(define-fun k!817 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!818 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
----------------------------------
--44--
TIME: 3.886785
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [t3] 45 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 3.887472
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 3.887932
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 3.888367
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the THEN branch
----------------------------------
--59--
TIME: 3.888983
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(dc = $$t)] 130 60
----------------------------------
in the ELSE branch
----------------------------------
--60--
TIME: 3.889630
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 62 61
----------------------------------
in the ELSE branch
----------------------------------
--61--
TIME: 3.890310
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(not (ce = de))] 130 62
----------------------------------
in the ELSE branch
----------------------------------
--62--
TIME: 3.890934
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: ct := l-nth(current, 0.)
----------------------------------
----------------------------------
--63--
TIME: 3.891445
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: cvg := l-nth(current, 1.)
----------------------------------
----------------------------------
--64--
TIME: 3.892036
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
	(cvg: #dval_3_30)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: cws := l-nth(current, 2.)
----------------------------------
----------------------------------
--65--
TIME: 3.892998
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
	(cvg: #dval_3_30)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: gd := "i__isGenericDescriptor"(desc) 
----------------------------------
----------------------------------
--66--
TIME: 3.895516
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
	(cvg: #dval_3_30)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [gd] 101 67
----------------------------------
in the ELSE branch
----------------------------------
--67--
TIME: 3.896296
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
	(cvg: #dval_3_30)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: cdd := "i__isDataDescriptor"(current) 
----------------------------------
----------------------------------
--68--
TIME: 3.897922
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_37 == $$empty))
	(! (#dval_3_30 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: ddd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--69--
TIME: 3.899497
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(not (cdd = ddd))] 70 92
----------------------------------
in the ELSE branch
----------------------------------
--92--
TIME: 3.900265
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cdd = $$t)] 93 98
----------------------------------
in the THEN branch
----------------------------------
--93--
TIME: 3.900949
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 94 101
----------------------------------
in the THEN branch
----------------------------------
--94--
TIME: 3.901582
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [((cws = $$f) and (dw = $$t))] 130 95
----------------------------------
in the ELSE branch
----------------------------------
--95--
TIME: 3.902398
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [((cws = $$f) and (not (dv = $$empty)))] 96 101
----------------------------------
in the ELSE branch
----------------------------------
--101--
TIME: 3.903132
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: re := de
----------------------------------
----------------------------------
--102--
TIME: 3.903672
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: rc := dc
----------------------------------
----------------------------------
--103--
TIME: 3.904219
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 104 105
----------------------------------
in the ELSE branch
----------------------------------
--105--
TIME: 3.904953
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(dc = $$empty)] 106 107
----------------------------------
in the ELSE branch
----------------------------------
--107--
TIME: 3.905650
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(ct = "d")] 108 116
----------------------------------
in the THEN branch
----------------------------------
--108--
TIME: 3.906284
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: rv := dv
----------------------------------
----------------------------------
--109--
TIME: 3.906785
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rw := dw
----------------------------------
----------------------------------
--110--
TIME: 3.907535
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(dv = $$empty)] 111 112
----------------------------------
in the ELSE branch
----------------------------------
--112--
TIME: 3.908251
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dw = $$empty)] 113 114
----------------------------------
in the ELSE branch
----------------------------------
--114--
TIME: 3.909372
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: [l, prop] := {{ "d", rv, rw, re, rc }}
----------------------------------
----------------------------------
--115--
TIME: 3.909851
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 124
----------------------------------
----------------------------------
--124--
TIME: 3.910608
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--125--
TIME: 3.911122
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 127
----------------------------------
----------------------------------
--127--
TIME: 3.911913
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$f)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dwrit_37 == $$t))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
--44--
TIME: 3.913542
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [t3] 45 56
----------------------------------
in the THEN branch
----------------------------------
--45--
TIME: 3.914112
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: t4 := "i__sameValue"(dv, l-nth(current, 1.)) 
----------------------------------
I found the model: 

(define-fun |#dval_37| () Extended_JSIL_Literal
  (Set (_ as-array k!830)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_30| () Extended_JSIL_Literal
  (Set (_ as-array k!829)))
(define-fun k!829 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!830 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_37| () Extended_JSIL_Literal
  (Set (_ as-array k!838)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_30| () Extended_JSIL_Literal
  (Set (_ as-array k!837)))
(define-fun k!837 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun k!838 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_37| () Extended_JSIL_Literal
  (Set (_ as-array k!845)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_30| () Extended_JSIL_Literal
  (Set (_ as-array k!845)))
(define-fun k!845 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_37| () Extended_JSIL_Literal
  (Set (_ as-array k!853)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_30| () Extended_JSIL_Literal
  (Set (_ as-array k!852)))
(define-fun k!853 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!852 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_37| () Extended_JSIL_Literal
  (Set (_ as-array k!861)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_30| () Extended_JSIL_Literal
  (Set (_ as-array k!860)))
(define-fun k!861 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!860 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_37| () Extended_JSIL_Literal
  (Set (_ as-array k!869)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_30| () Extended_JSIL_Literal
  (Set (_ as-array k!868)))
(define-fun k!869 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!868 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#dval_37| () Extended_JSIL_Literal
  (Set (_ as-array k!876)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_30| () Extended_JSIL_Literal
  (Set (_ as-array k!877)))
(define-fun k!877 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!876 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
----------------------------------
--46--
TIME: 4.100797
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [t4] 124 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 4.104407
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 4.105173
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 4.105643
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
in the THEN branch
----------------------------------
--59--
TIME: 4.106278
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(dc = $$t)] 130 60
----------------------------------
in the ELSE branch
----------------------------------
--60--
TIME: 4.107393
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 62 61
----------------------------------
in the ELSE branch
----------------------------------
--61--
TIME: 4.108356
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(not (ce = de))] 130 62
----------------------------------
in the ELSE branch
----------------------------------
--62--
TIME: 4.109044
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: ct := l-nth(current, 0.)
----------------------------------
----------------------------------
--63--
TIME: 4.109614
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: cvg := l-nth(current, 1.)
----------------------------------
----------------------------------
--64--
TIME: 4.110121
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
	(cvg: #dval_3_30)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: cws := l-nth(current, 2.)
----------------------------------
----------------------------------
--65--
TIME: 4.110607
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
	(cvg: #dval_3_30)
Pure Formulae: 	
	(! (#dval_37 == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: gd := "i__isGenericDescriptor"(desc) 
----------------------------------
----------------------------------
--66--
TIME: 4.112373
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
	(cvg: #dval_3_30)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [gd] 101 67
----------------------------------
in the ELSE branch
----------------------------------
--67--
TIME: 4.113087
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
	(cvg: #dval_3_30)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: cdd := "i__isDataDescriptor"(current) 
----------------------------------
----------------------------------
--68--
TIME: 4.114711
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_37 == $$empty))
	(! (#dval_3_30 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: ddd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--69--
TIME: 4.116178
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(not (cdd = ddd))] 70 92
----------------------------------
in the ELSE branch
----------------------------------
--92--
TIME: 4.116961
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cdd = $$t)] 93 98
----------------------------------
in the THEN branch
----------------------------------
--93--
TIME: 4.117618
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 94 101
----------------------------------
in the THEN branch
----------------------------------
--94--
TIME: 4.118323
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [((cws = $$f) and (dw = $$t))] 130 95
----------------------------------
in the ELSE branch
----------------------------------
--95--
TIME: 4.119483
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [((cws = $$f) and (not (dv = $$empty)))] 96 101
----------------------------------
in the ELSE branch
----------------------------------
--101--
TIME: 4.120273
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: re := de
----------------------------------
----------------------------------
--102--
TIME: 4.120852
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: rc := dc
----------------------------------
----------------------------------
--103--
TIME: 4.121394
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 104 105
----------------------------------
in the ELSE branch
----------------------------------
--105--
TIME: 4.122175
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(dc = $$empty)] 106 107
----------------------------------
in the ELSE branch
----------------------------------
--107--
TIME: 4.122894
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(ct = "d")] 108 116
----------------------------------
in the THEN branch
----------------------------------
--108--
TIME: 4.123581
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: rv := dv
----------------------------------
----------------------------------
--109--
TIME: 4.124165
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rw := dw
----------------------------------
----------------------------------
--110--
TIME: 4.124672
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: goto [(dv = $$empty)] 111 112
----------------------------------
in the ELSE branch
----------------------------------
--112--
TIME: 4.125505
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dw = $$empty)] 113 114
----------------------------------
in the ELSE branch
----------------------------------
--114--
TIME: 4.126237
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: [l, prop] := {{ "d", rv, rw, re, rc }}
----------------------------------
----------------------------------
--115--
TIME: 4.126826
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_37, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 124
----------------------------------
----------------------------------
--124--
TIME: 4.127377
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_37, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--125--
TIME: 4.127944
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_37, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#enum: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(t4: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(t3: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(de: $$boolean_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_37: $$boolean_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 127
----------------------------------
----------------------------------
--127--
TIME: 4.128484
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_37, $$t, #denum_37, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: #dwrit_37)
	(dg: $$empty)
	(throw: #throw)
	(rw: #dwrit_37)
	(re: #denum_37)
	(xret: $$t)
	(rv: #dval_37)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(t4: $$f)
	(desc: #desc)
	(cws: $$t)
	(t3: $$t)
	(prop: #prop)
	(t1: $$t)
	(de: #denum_37)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(t2: $$t)
	(rc: $$f)
	(cc: $$f)
	(ce: #denum_37)
	(dc: $$f)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #dval_37)
	(cvg: #dval_3_30)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_37 == #dval_3_30))
	(! (#dval_3_30 == $$empty))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, $$t, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_37 == $$t)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(dw: $$boolean_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(rw: $$boolean_type)
	(#enum: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(extensible: $$boolean_type)
	(t4: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(t3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#denum_3_30: $$boolean_type)
	(t1: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(l: $$object_type)
	(de: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(current: $$list_type)
	(t2: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(#dwrit_3_30: $$boolean_type)
	(dc: $$boolean_type)
	(ct: $$string_type)
	(#denum_37: $$boolean_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of o__defineOwnProperty
----------------------------------
--0--
TIME: 4.134774
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dec: $$boolean_type)
	(l: $$object_type)
	(#denum_3_31: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_31: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--1--
TIME: 4.134954
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dec: $$boolean_type)
	(l: $$object_type)
	(#denum_3_31: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_31: $$boolean_type)
Preds: 
CMD: current := "getOwnProperty"(l, prop) with 128
----------------------------------
----------------------------------
--2--
TIME: 4.136130
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dec: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_31: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_31: $$boolean_type)
Preds: 
CMD: extensible := [l, "@extensible"]
----------------------------------
----------------------------------
--3--
TIME: 4.136407
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dec: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_31: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_31: $$boolean_type)
Preds: 
CMD: goto [(current = $$undefined)] 4 14
----------------------------------
in the ELSE branch
----------------------------------
--14--
TIME: 4.136827
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dec: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_31: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_31: $$boolean_type)
Preds: 
CMD: goto [(l-nth(desc, 0.) = "d")] 15 22
----------------------------------
in the ELSE branch
----------------------------------
--22--
TIME: 4.137295
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dec: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_31: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_31: $$boolean_type)
Preds: 
CMD: goto [(l-nth(desc, 0.) = "a")] 23 30
----------------------------------
in the ELSE branch
----------------------------------
--30--
TIME: 4.137740
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(extensible: #ext)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(current: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dec: $$boolean_type)
	(extensible: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_31: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_31: $$boolean_type)
Preds: 
CMD: de := l-nth(desc, 1.)
----------------------------------
----------------------------------
--31--
TIME: 4.138052
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
Preds: 
CMD: dc := l-nth(desc, 2.)
----------------------------------
----------------------------------
--32--
TIME: 4.138416
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(dc: $$empty)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$empty_type)
Preds: 
CMD: dv := l-nth(desc, 3.)
----------------------------------
----------------------------------
--33--
TIME: 4.138732
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$empty_type)
Preds: 
CMD: dw := l-nth(desc, 4.)
----------------------------------
----------------------------------
--34--
TIME: 4.139209
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(throw: #throw)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$empty_type)
Preds: 
CMD: dg := l-nth(desc, 5.)
----------------------------------
----------------------------------
--35--
TIME: 4.139549
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$empty_type)
Preds: 
CMD: ds := l-nth(desc, 6.)
----------------------------------
----------------------------------
--36--
TIME: 4.139949
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$empty_type)
Preds: 
CMD: goto [((((((de = $$empty) and (dc = $$empty)) and (dv = $$empty)) and (dw = $$empty)) and (dg = $$empty)) and (ds = $$empty))] 124 37
----------------------------------
in the ELSE branch
----------------------------------
--37--
TIME: 4.140686
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$empty_type)
Preds: 
CMD: goto [(l-nth(current, 0.) = "d")] 38 47
----------------------------------
in the THEN branch
----------------------------------
--38--
TIME: 4.141166
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$empty_type)
Preds: 
CMD: goto [((dg = $$empty) and (ds = $$empty))] 39 56
----------------------------------
in the THEN branch
----------------------------------
--39--
TIME: 4.141662
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$empty_type)
Preds: 
CMD: t1 := "i__sameValue"(dc, l-nth(current, 4.)) 
----------------------------------
----------------------------------
--40--
TIME: 4.142780
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$empty_type)
Preds: 
CMD: goto [t1] 41 56
----------------------------------
in the ELSE branch
----------------------------------
--56--
TIME: 4.143288
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(dc: $$empty_type)
Preds: 
CMD: cc := l-nth(current, 4.)
----------------------------------
----------------------------------
--57--
TIME: 4.143726
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(dc: $$empty_type)
Preds: 
CMD: ce := l-nth(current, 3.)
----------------------------------
----------------------------------
--58--
TIME: 4.144131
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
Preds: 
CMD: goto [(cc = $$f)] 59 62
----------------------------------
I found the model: 

(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!888)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#dconf_3_31| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_31| () Extended_JSIL_Literal
  (Set (_ as-array k!889)))
(define-fun k!889 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!888 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
I found the model: 

(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!896)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#dconf_3_31| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_31| () Extended_JSIL_Literal
  (Set (_ as-array k!897)))
(define-fun k!897 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 2.0)) 20.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    15.0))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!896 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0)))
Could NOT determine the branch.
----------------------------------
--59--
TIME: 4.187766
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
Preds: 
CMD: goto [(dc = $$t)] 130 60
----------------------------------
in the ELSE branch
----------------------------------
--60--
TIME: 4.191806
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
Preds: 
CMD: goto [(de = $$empty)] 62 61
----------------------------------
in the THEN branch
----------------------------------
--62--
TIME: 4.192333
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
Preds: 
CMD: ct := l-nth(current, 0.)
----------------------------------
----------------------------------
--63--
TIME: 4.192827
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
Preds: 
CMD: cvg := l-nth(current, 1.)
----------------------------------
----------------------------------
--64--
TIME: 4.193263
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
	(cvg: #dval_3_31)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
Preds: 
CMD: cws := l-nth(current, 2.)
----------------------------------
----------------------------------
--65--
TIME: 4.193673
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
	(cvg: #dval_3_31)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
Preds: 
CMD: gd := "i__isGenericDescriptor"(desc) 
----------------------------------
----------------------------------
--66--
TIME: 4.195723
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
	(cvg: #dval_3_31)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
Preds: 
CMD: goto [gd] 101 67
----------------------------------
in the ELSE branch
----------------------------------
--67--
TIME: 4.196302
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
	(cvg: #dval_3_31)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
Preds: 
CMD: cdd := "i__isDataDescriptor"(current) 
----------------------------------
----------------------------------
--68--
TIME: 4.197525
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#gval == $$empty))
	(! (#dval_3_31 == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(cdd: $$boolean_type)
Preds: 
CMD: ddd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--69--
TIME: 4.199364
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(not (cdd = ddd))] 70 92
----------------------------------
in the ELSE branch
----------------------------------
--92--
TIME: 4.199986
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cdd = $$t)] 93 98
----------------------------------
in the THEN branch
----------------------------------
--93--
TIME: 4.200483
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 94 101
----------------------------------
in the THEN branch
----------------------------------
--94--
TIME: 4.201011
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [((cws = $$f) and (dw = $$t))] 130 95
----------------------------------
in the ELSE branch
----------------------------------
--95--
TIME: 4.201609
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [((cws = $$f) and (not (dv = $$empty)))] 96 101
----------------------------------
in the ELSE branch
----------------------------------
--101--
TIME: 4.202260
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: re := de
----------------------------------
----------------------------------
--102--
TIME: 4.202783
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: $$empty)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$empty_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rc := dc
----------------------------------
----------------------------------
--103--
TIME: 4.203278
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: $$empty)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: $$empty)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(re: $$empty_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$empty_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 104 105
----------------------------------
in the THEN branch
----------------------------------
--104--
TIME: 4.203883
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: $$empty)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: $$empty)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$empty_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$empty_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: re := l-nth(current, 3.)
----------------------------------
----------------------------------
--105--
TIME: 4.204310
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_3_31)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: $$empty)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$empty_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dc = $$empty)] 106 107
----------------------------------
in the THEN branch
----------------------------------
--106--
TIME: 4.204925
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_3_31)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: $$empty)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$empty_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rc := l-nth(current, 4.)
----------------------------------
----------------------------------
--107--
TIME: 4.205403
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_3_31)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(ct = "d")] 108 116
----------------------------------
in the THEN branch
----------------------------------
--108--
TIME: 4.205976
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_3_31)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rv := dv
----------------------------------
----------------------------------
--109--
TIME: 4.206436
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rw := dw
----------------------------------
----------------------------------
--110--
TIME: 4.206865
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$empty)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(rw: $$empty_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dv = $$empty)] 111 112
----------------------------------
in the ELSE branch
----------------------------------
--112--
TIME: 4.207535
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$empty)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(rw: $$empty_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dw = $$empty)] 113 114
----------------------------------
in the THEN branch
----------------------------------
--113--
TIME: 4.208054
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$empty)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(rw: $$empty_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rw := l-nth(current, 2.)
----------------------------------
----------------------------------
--114--
TIME: 4.208514
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$t)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: [l, prop] := {{ "d", rv, rw, re, rc }}
----------------------------------
----------------------------------
--115--
TIME: 4.208976
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #gval, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$t)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(rw: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 124
----------------------------------
----------------------------------
--124--
TIME: 4.209396
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #gval, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$t)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--125--
TIME: 4.209807
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #gval, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$t)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(rw: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 127
----------------------------------
----------------------------------
--127--
TIME: 4.210338
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #gval, $$t, #denum_3_31, $$f }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$t)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, $$f }})
	(#dcc == $$f)
	(#dconf_3_31 == $$f)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
--62--
TIME: 4.211471
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
Preds: 
CMD: ct := l-nth(current, 0.)
----------------------------------
----------------------------------
--63--
TIME: 4.211927
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
Preds: 
CMD: cvg := l-nth(current, 1.)
----------------------------------
----------------------------------
--64--
TIME: 4.212303
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
	(cvg: #dval_3_31)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
Preds: 
CMD: cws := l-nth(current, 2.)
----------------------------------
----------------------------------
--65--
TIME: 4.212748
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
	(cvg: #dval_3_31)
Pure Formulae: 	
	(! (#gval == $$empty))
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
Preds: 
CMD: gd := "i__isGenericDescriptor"(desc) 
----------------------------------
----------------------------------
--66--
TIME: 4.227230
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
	(cvg: #dval_3_31)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
Preds: 
CMD: goto [gd] 101 67
----------------------------------
in the ELSE branch
----------------------------------
--67--
TIME: 4.227840
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
	(cvg: #dval_3_31)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
Preds: 
CMD: cdd := "i__isDataDescriptor"(current) 
----------------------------------
----------------------------------
--68--
TIME: 4.229056
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#gval == $$empty))
	(! (#dval_3_31 == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(cdd: $$boolean_type)
Preds: 
CMD: ddd := "i__isDataDescriptor"(desc) 
----------------------------------
----------------------------------
--69--
TIME: 4.230877
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(not (cdd = ddd))] 70 92
----------------------------------
in the ELSE branch
----------------------------------
--92--
TIME: 4.231449
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cdd = $$t)] 93 98
----------------------------------
in the THEN branch
----------------------------------
--93--
TIME: 4.231973
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(cc = $$f)] 94 101
----------------------------------
in the ELSE branch
----------------------------------
--101--
TIME: 4.232541
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: re := de
----------------------------------
----------------------------------
--102--
TIME: 4.232998
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: $$empty)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$empty_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rc := dc
----------------------------------
----------------------------------
--103--
TIME: 4.233470
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: $$empty)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: $$empty)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(re: $$empty_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$empty_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(de = $$empty)] 104 105
----------------------------------
in the THEN branch
----------------------------------
--104--
TIME: 4.234042
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: $$empty)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: $$empty)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$empty_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$empty_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: re := l-nth(current, 3.)
----------------------------------
----------------------------------
--105--
TIME: 4.234745
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_3_31)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: $$empty)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$empty_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dc = $$empty)] 106 107
----------------------------------
in the THEN branch
----------------------------------
--106--
TIME: 4.235310
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_3_31)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: $$empty)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$empty_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rc := l-nth(current, 4.)
----------------------------------
----------------------------------
--107--
TIME: 4.236099
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_3_31)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(ct = "d")] 108 116
----------------------------------
in the THEN branch
----------------------------------
--108--
TIME: 4.236650
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_3_31)
	(xret: $$t)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rv := dv
----------------------------------
----------------------------------
--109--
TIME: 4.237118
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rw := dw
----------------------------------
----------------------------------
--110--
TIME: 4.237819
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$empty)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(rw: $$empty_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dv = $$empty)] 111 112
----------------------------------
in the ELSE branch
----------------------------------
--112--
TIME: 4.238486
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$empty)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(rw: $$empty_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto [(dw = $$empty)] 113 114
----------------------------------
in the THEN branch
----------------------------------
--113--
TIME: 4.239291
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$empty)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(rw: $$empty_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: rw := l-nth(current, 2.)
----------------------------------
----------------------------------
--114--
TIME: 4.239751
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$t)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: [l, prop] := {{ "d", rv, rw, re, rc }}
----------------------------------
----------------------------------
--115--
TIME: 4.240170
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #gval, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$t)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(rw: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 124
----------------------------------
----------------------------------
--124--
TIME: 4.240876
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #gval, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$t)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: xret := $$t
----------------------------------
----------------------------------
--125--
TIME: 4.241339
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #gval, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$t)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(#prop: $$string_type)
	(dg: $$empty_type)
	(throw: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dcc: $$boolean_type)
	(rw: $$boolean_type)
	(#dec: $$boolean_type)
	(xret: $$boolean_type)
	(re: $$boolean_type)
	(#ext: $$boolean_type)
	(ds: $$empty_type)
	(#denum_3_31: $$boolean_type)
	(extensible: $$boolean_type)
	(gd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(t1: $$boolean_type)
	(l: $$object_type)
	(de: $$empty_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(rc: $$boolean_type)
	(#dcur: $$list_type)
	(cc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: goto 127
----------------------------------
----------------------------------
--127--
TIME: 4.241742
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #gval, $$t, #denum_3_31, #dconf_3_31 }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(dw: $$empty)
	(dg: $$empty)
	(throw: #throw)
	(rw: $$t)
	(re: #denum_3_31)
	(xret: $$t)
	(rv: #gval)
	(ds: $$empty)
	(extensible: #ext)
	(gd: $$f)
	(desc: #desc)
	(cws: $$t)
	(prop: #prop)
	(t1: $$f)
	(de: $$empty)
	(l: _$l_#l)
	(current: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(rc: #dconf_3_31)
	(cc: #dconf_3_31)
	(ce: #denum_3_31)
	(dc: $$empty)
	(ct: \"d\")
	(ddd: $$t)
	(dv: #gval)
	(cvg: #dval_3_31)
	(cdd: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dconf_3_31 == $$f))
	(! (#dval_3_31 == $$empty))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(dw: $$empty_type)
	(dg: $$empty_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(rw: $$boolean_type)
	(re: $$boolean_type)
	(xret: $$boolean_type)
	(#dec: $$boolean_type)
	(#ext: $$boolean_type)
	(extensible: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(ds: $$empty_type)
	(gd: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(cws: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(t1: $$boolean_type)
	(de: $$empty_type)
	(l: $$object_type)
	(current: $$list_type)
	(#dconf_3_31: $$boolean_type)
	(#desc: $$list_type)
	(cc: $$boolean_type)
	(#dcur: $$list_type)
	(rc: $$boolean_type)
	(ce: $$boolean_type)
	(dc: $$empty_type)
	(ct: $$string_type)
	(ddd: $$boolean_type)
	(cdd: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc o__defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 4.247069
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 4.247148
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 4.247321
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
----------------------------------
--6--
TIME: 4.247754
STATE:
Heap: 
	_$l_47 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: _$l_47)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$object_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 4.248115
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 4.248190
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 4.248392
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
----------------------------------
--5--
TIME: 4.248806
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 4.250327
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_9 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(#desc == {{ \"d\", #dval_9, #dwrit_9, #denum_9, #dconf_9 }})
Gamma: 	
	(#desc: $$list_type)
	(#dwrit_9: $$boolean_type)
	(#prop: $$string_type)
	(#denum_9: $$boolean_type)
	(l: $$object_type)
	(#dconf_9: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 4.250429
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_9 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(#desc == {{ \"d\", #dval_9, #dwrit_9, #denum_9, #dconf_9 }})
Gamma: 	
	(#desc: $$list_type)
	(#dwrit_9: $$boolean_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(#denum_9: $$boolean_type)
	(l: $$object_type)
	(#dconf_9: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 4.250687
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_9 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(#desc == {{ \"d\", #dval_9, #dwrit_9, #denum_9, #dconf_9 }})
Gamma: 	
	(#desc: $$list_type)
	(#dwrit_9: $$boolean_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(#denum_9: $$boolean_type)
	(l: $$object_type)
	(#dconf_9: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
I found the model: 

(define-fun |#dval_9| () Extended_JSIL_Literal
  (Set (_ as-array k!907)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun k!907 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
I found the model: 

(define-fun |#dval_9| () Extended_JSIL_Literal
  (Set (_ as-array k!913)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!913 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
----------------------------------
--5--
TIME: 4.308905
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (#prop: {{ \"d\", #dval_9, #dwrit_9, #denum_9, #dconf_9 }}), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dval_9 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#desc == {{ \"d\", #dval_9, #dwrit_9, #denum_9, #dconf_9 }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(desc: $$list_type)
	(#desc: $$list_type)
	(#dwrit_9: $$boolean_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(#denum_9: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_9: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 4.312765
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (#prop: {{ \"d\", #dval_3_9, #dwrit_3_9, #denum_3_9, $$t }}), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_9 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_10 == $$empty))
	(#desc == {{ \"d\", #dval_10, #dwrit_10, #denum_10, #dconf_10 }})
	(#dcur == {{ \"d\", #dval_3_9, #dwrit_3_9, #denum_3_9, $$t }})
	(#dconf_3_9 == $$t)
Gamma: 	
	(#dwrit_10: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_10: $$boolean_type)
	(#denum_3_9: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_9: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_3_9: $$boolean_type)
	(#denum_10: $$boolean_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 4.312942
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (#prop: {{ \"d\", #dval_3_9, #dwrit_3_9, #denum_3_9, $$t }}), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_9 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_10 == $$empty))
	(#desc == {{ \"d\", #dval_10, #dwrit_10, #denum_10, #dconf_10 }})
	(#dcur == {{ \"d\", #dval_3_9, #dwrit_3_9, #denum_3_9, $$t }})
	(#dconf_3_9 == $$t)
Gamma: 	
	(#dwrit_10: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_10: $$boolean_type)
	(#denum_3_9: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_9: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_3_9: $$boolean_type)
	(class: $$string_type)
	(#denum_10: $$boolean_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 4.313310
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (#prop: {{ \"d\", #dval_3_9, #dwrit_3_9, #denum_3_9, $$t }}), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_9 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_10 == $$empty))
	(#desc == {{ \"d\", #dval_10, #dwrit_10, #denum_10, #dconf_10 }})
	(#dcur == {{ \"d\", #dval_3_9, #dwrit_3_9, #denum_3_9, $$t }})
	(#dconf_3_9 == $$t)
Gamma: 	
	(#dwrit_10: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_10: $$boolean_type)
	(#denum_3_9: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_9: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_3_9: $$boolean_type)
	(class: $$string_type)
	(#denum_10: $$boolean_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
I found the model: 

(define-fun |#dval_10| () Extended_JSIL_Literal
  (Set (_ as-array k!920)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#dval_3_9| () Extended_JSIL_Literal
  (Set (_ as-array k!921)))
(define-fun k!921 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!920 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
I found the model: 

(define-fun |#dval_10| () Extended_JSIL_Literal
  (Set (_ as-array k!929)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dval_3_9| () Extended_JSIL_Literal
  (Set (_ as-array k!928)))
(define-fun k!929 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!928 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
I found the model: 

(define-fun |#dval_3_9| () Extended_JSIL_Literal
  (Set (_ as-array k!936)))
(define-fun |#dval_10| () Extended_JSIL_Literal
  (Set (_ as-array k!937)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!937 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!936 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
I found the model: 

(define-fun |#dval_3_9| () Extended_JSIL_Literal
  (Set (_ as-array k!944)))
(define-fun |#dval_10| () Extended_JSIL_Literal
  (Set (_ as-array k!945)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!945 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!944 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
----------------------------------
--5--
TIME: 4.432987
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (#prop: {{ \"d\", #dval_10, #dwrit_10, #denum_10, #dconf_10 }}), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dval_3_9 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_10 == $$empty))
	(! (#cls == \"String\"))
	(#desc == {{ \"d\", #dval_10, #dwrit_10, #denum_10, #dconf_10 }})
	(#dcur == {{ \"d\", #dval_3_9, #dwrit_3_9, #denum_3_9, $$t }})
	(#dconf_3_9 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#dwrit_10: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dconf_10: $$boolean_type)
	(#denum_3_9: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_9: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_3_9: $$boolean_type)
	(class: $$string_type)
	(prop: $$string_type)
	(#denum_10: $$boolean_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 4.433719
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_10, #dwrit_3_10, #denum_3_10, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_10 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_11 == $$empty))
	(#dconf_11 == $$t)
	(#desc == {{ \"d\", #dval_11, #dwrit_11, #denum_11, $$t }})
	(#dcur == {{ \"d\", #dval_3_10, #dwrit_3_10, #denum_3_10, $$f }})
	(#dconf_3_10 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_11: $$boolean_type)
	(l: $$object_type)
	(#dwrit_3_10: $$boolean_type)
	(#denum_11: $$boolean_type)
	(#denum_3_10: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_11: $$boolean_type)
	(#dconf_3_10: $$boolean_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 4.433927
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_10, #dwrit_3_10, #denum_3_10, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_10 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_11 == $$empty))
	(#dconf_11 == $$t)
	(#desc == {{ \"d\", #dval_11, #dwrit_11, #denum_11, $$t }})
	(#dcur == {{ \"d\", #dval_3_10, #dwrit_3_10, #denum_3_10, $$f }})
	(#dconf_3_10 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(#dconf_11: $$boolean_type)
	(l: $$object_type)
	(#dwrit_3_10: $$boolean_type)
	(#denum_11: $$boolean_type)
	(#denum_3_10: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_11: $$boolean_type)
	(#dconf_3_10: $$boolean_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 4.434267
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_10, #dwrit_3_10, #denum_3_10, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_10 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_11 == $$empty))
	(#dconf_11 == $$t)
	(#desc == {{ \"d\", #dval_11, #dwrit_11, #denum_11, $$t }})
	(#dcur == {{ \"d\", #dval_3_10, #dwrit_3_10, #denum_3_10, $$f }})
	(#dconf_3_10 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(#dconf_11: $$boolean_type)
	(l: $$object_type)
	(#dwrit_3_10: $$boolean_type)
	(#denum_11: $$boolean_type)
	(#denum_3_10: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_11: $$boolean_type)
	(#dconf_3_10: $$boolean_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
I found the model: 

(define-fun |#dval_3_10| () Extended_JSIL_Literal
  (Set (_ as-array k!952)))
(define-fun |#dval_11| () Extended_JSIL_Literal
  (Set (_ as-array k!953)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!953 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!952 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
I found the model: 

(define-fun |#dval_3_10| () Extended_JSIL_Literal
  (Set (_ as-array k!960)))
(define-fun |#dval_11| () Extended_JSIL_Literal
  (Set (_ as-array k!961)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!961 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!960 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
I found the model: 

(define-fun |#dval_3_10| () Extended_JSIL_Literal
  (Set (_ as-array k!968)))
(define-fun |#dval_11| () Extended_JSIL_Literal
  (Set (_ as-array k!969)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!969 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!968 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
I found the model: 

(define-fun |#dval_3_10| () Extended_JSIL_Literal
  (Set (_ as-array k!977)))
(define-fun |#dval_11| () Extended_JSIL_Literal
  (Set (_ as-array k!976)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!977 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!976 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
----------------------------------
--6--
TIME: 4.561803
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_10, #dwrit_3_10, #denum_3_10, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
	_$l_48 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(throw: $$t)
	(xret: _$l_48)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dval_3_10 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_11 == $$empty))
	(! (#cls == \"String\"))
	(#dconf_11 == $$t)
	(#desc == {{ \"d\", #dval_11, #dwrit_11, #denum_11, $$t }})
	(#dcur == {{ \"d\", #dval_3_10, #dwrit_3_10, #denum_3_10, $$f }})
	(#dconf_3_10 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$object_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(class: $$string_type)
	(prop: $$string_type)
	(#dconf_11: $$boolean_type)
	(l: $$object_type)
	(#dwrit_3_10: $$boolean_type)
	(#denum_11: $$boolean_type)
	(#denum_3_10: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_11: $$boolean_type)
	(#dconf_3_10: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 4.562592
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_11, #dwrit_3_11, #denum_3_11, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_11 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_12 == $$empty))
	(#dconf_3_11 == $$f)
	(#desc == {{ \"d\", #dval_12, #dwrit_12, #denum_12, $$t }})
	(#dcur == {{ \"d\", #dval_3_11, #dwrit_3_11, #denum_3_11, $$f }})
	(#dconf_12 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_11: $$boolean_type)
	(#dconf_12: $$boolean_type)
	(#dwrit_3_11: $$boolean_type)
	(#dwrit_12: $$boolean_type)
	(l: $$object_type)
	(#dconf_3_11: $$boolean_type)
	(#denum_12: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 4.562820
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_11, #dwrit_3_11, #denum_3_11, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_11 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_12 == $$empty))
	(#dconf_3_11 == $$f)
	(#desc == {{ \"d\", #dval_12, #dwrit_12, #denum_12, $$t }})
	(#dcur == {{ \"d\", #dval_3_11, #dwrit_3_11, #denum_3_11, $$f }})
	(#dconf_12 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_11: $$boolean_type)
	(class: $$string_type)
	(#dconf_12: $$boolean_type)
	(#dwrit_3_11: $$boolean_type)
	(#dwrit_12: $$boolean_type)
	(l: $$object_type)
	(#dconf_3_11: $$boolean_type)
	(#denum_12: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 4.563169
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_11, #dwrit_3_11, #denum_3_11, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_11 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_12 == $$empty))
	(#dconf_3_11 == $$f)
	(#desc == {{ \"d\", #dval_12, #dwrit_12, #denum_12, $$t }})
	(#dcur == {{ \"d\", #dval_3_11, #dwrit_3_11, #denum_3_11, $$f }})
	(#dconf_12 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_11: $$boolean_type)
	(class: $$string_type)
	(#dconf_12: $$boolean_type)
	(#dwrit_3_11: $$boolean_type)
	(#dwrit_12: $$boolean_type)
	(l: $$object_type)
	(#dconf_3_11: $$boolean_type)
	(#denum_12: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
I found the model: 

(define-fun |#dval_12| () Extended_JSIL_Literal
  (Set (_ as-array k!985)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_11| () Extended_JSIL_Literal
  (Set (_ as-array k!984)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!985 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!984 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
I found the model: 

(define-fun |#dval_12| () Extended_JSIL_Literal
  (Set (_ as-array k!993)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_11| () Extended_JSIL_Literal
  (Set (_ as-array k!992)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!993 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!992 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
I found the model: 

(define-fun |#dval_12| () Extended_JSIL_Literal
  (Set (_ as-array k!1001)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_11| () Extended_JSIL_Literal
  (Set (_ as-array k!1000)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1001 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1000 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
I found the model: 

(define-fun |#dval_12| () Extended_JSIL_Literal
  (Set (_ as-array k!1009)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_11| () Extended_JSIL_Literal
  (Set (_ as-array k!1008)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1009 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1008 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 5.0) 5.0
    0.0))))
----------------------------------
--5--
TIME: 4.684347
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_11, #dwrit_3_11, #denum_3_11, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dval_3_11 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_12 == $$empty))
	(! (#cls == \"String\"))
	(#dconf_3_11 == $$f)
	(#desc == {{ \"d\", #dval_12, #dwrit_12, #denum_12, $$t }})
	(#dcur == {{ \"d\", #dval_3_11, #dwrit_3_11, #denum_3_11, $$f }})
	(#dconf_12 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_11: $$boolean_type)
	(class: $$string_type)
	(#dconf_12: $$boolean_type)
	(#dwrit_3_11: $$boolean_type)
	(#dwrit_12: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_3_11: $$boolean_type)
	(#denum_12: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 4.685129
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_12, #dwrit_3_12, #denum_3_12, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_12 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#denum_13 == #denum_3_12))
	(! (#dval_13 == $$empty))
	(#dconf_3_12 == $$f)
	(#desc == {{ \"d\", #dval_13, #dwrit_13, #denum_13, $$f }})
	(#dcur == {{ \"d\", #dval_3_12, #dwrit_3_12, #denum_3_12, $$f }})
	(#dconf_13 == $$f)
	(#ed == #denum_13)
	(#ec == #denum_3_12)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_3_12: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_12: $$boolean_type)
	(#ec: $$boolean_type)
	(l: $$object_type)
	(#dconf_13: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_3_12: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_13: $$boolean_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 4.685395
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_12, #dwrit_3_12, #denum_3_12, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_12 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#denum_13 == #denum_3_12))
	(! (#dval_13 == $$empty))
	(#dconf_3_12 == $$f)
	(#desc == {{ \"d\", #dval_13, #dwrit_13, #denum_13, $$f }})
	(#dcur == {{ \"d\", #dval_3_12, #dwrit_3_12, #denum_3_12, $$f }})
	(#dconf_13 == $$f)
	(#ed == #denum_13)
	(#ec == #denum_3_12)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_3_12: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_12: $$boolean_type)
	(class: $$string_type)
	(#ec: $$boolean_type)
	(l: $$object_type)
	(#dconf_13: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_3_12: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_13: $$boolean_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 4.685829
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_12, #dwrit_3_12, #denum_3_12, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_12 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#denum_13 == #denum_3_12))
	(! (#dval_13 == $$empty))
	(#dconf_3_12 == $$f)
	(#desc == {{ \"d\", #dval_13, #dwrit_13, #denum_13, $$f }})
	(#dcur == {{ \"d\", #dval_3_12, #dwrit_3_12, #denum_3_12, $$f }})
	(#dconf_13 == $$f)
	(#ed == #denum_13)
	(#ec == #denum_3_12)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_3_12: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_12: $$boolean_type)
	(class: $$string_type)
	(#ec: $$boolean_type)
	(l: $$object_type)
	(#dconf_13: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_3_12: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_13: $$boolean_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
I found the model: 

(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dval_3_12| () Extended_JSIL_Literal
  (Set (_ as-array k!1016)))
(define-fun |#dval_13| () Extended_JSIL_Literal
  (Set (_ as-array k!1017)))
(define-fun |#denum_13| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#denum_3_12| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun k!1017 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1016 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dval_3_12| () Extended_JSIL_Literal
  (Set (_ as-array k!1024)))
(define-fun |#dval_13| () Extended_JSIL_Literal
  (Set (_ as-array k!1025)))
(define-fun |#denum_13| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#denum_3_12| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun k!1025 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1024 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#dval_3_12| () Extended_JSIL_Literal
  (Set (_ as-array k!1032)))
(define-fun |#dval_13| () Extended_JSIL_Literal
  (Set (_ as-array k!1033)))
(define-fun |#denum_13| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#denum_3_12| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun k!1033 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1032 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#dval_3_12| () Extended_JSIL_Literal
  (Set (_ as-array k!1040)))
(define-fun |#dval_13| () Extended_JSIL_Literal
  (Set (_ as-array k!1041)))
(define-fun |#denum_13| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#denum_3_12| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun k!1041 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1040 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
----------------------------------
--6--
TIME: 4.813040
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_12, #dwrit_3_12, #denum_3_12, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
	_$l_49 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(throw: $$t)
	(xret: _$l_49)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dval_3_12 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_13 == #denum_3_12))
	(! (#dval_13 == $$empty))
	(! (#cls == \"String\"))
	(#dconf_3_12 == $$f)
	(#desc == {{ \"d\", #dval_13, #dwrit_13, #denum_13, $$f }})
	(#dcur == {{ \"d\", #dval_3_12, #dwrit_3_12, #denum_3_12, $$f }})
	(#dconf_13 == $$f)
	(#ed == #denum_13)
	(#ec == #denum_3_12)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$object_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#dconf_3_12: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_12: $$boolean_type)
	(class: $$string_type)
	(#ec: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_13: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_3_12: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_13: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 4.814077
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_13, #dwrit_3_13, #denum_3_13, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_13 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#denum_14 == #denum_3_13))
	(! (#dval_14 == $$empty))
	(#desc == {{ \"d\", #dval_14, #dwrit_14, #denum_14, $$f }})
	(#dcur == {{ \"d\", #dval_3_13, #dwrit_3_13, #denum_3_13, $$f }})
	(#dconf_14 == $$f)
	(#dconf_3_13 == $$f)
	(#ed == #denum_14)
	(#ec == #denum_3_13)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_13: $$boolean_type)
	(#dwrit_14: $$boolean_type)
	(#ec: $$boolean_type)
	(l: $$object_type)
	(#denum_14: $$boolean_type)
	(#dconf_14: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_3_13: $$boolean_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 4.814321
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_13, #dwrit_3_13, #denum_3_13, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_13 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#denum_14 == #denum_3_13))
	(! (#dval_14 == $$empty))
	(#desc == {{ \"d\", #dval_14, #dwrit_14, #denum_14, $$f }})
	(#dcur == {{ \"d\", #dval_3_13, #dwrit_3_13, #denum_3_13, $$f }})
	(#dconf_14 == $$f)
	(#dconf_3_13 == $$f)
	(#ed == #denum_14)
	(#ec == #denum_3_13)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_13: $$boolean_type)
	(class: $$string_type)
	(#dwrit_14: $$boolean_type)
	(#ec: $$boolean_type)
	(l: $$object_type)
	(#denum_14: $$boolean_type)
	(#dconf_14: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_3_13: $$boolean_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 4.814785
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_13, #dwrit_3_13, #denum_3_13, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_13 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#denum_14 == #denum_3_13))
	(! (#dval_14 == $$empty))
	(#desc == {{ \"d\", #dval_14, #dwrit_14, #denum_14, $$f }})
	(#dcur == {{ \"d\", #dval_3_13, #dwrit_3_13, #denum_3_13, $$f }})
	(#dconf_14 == $$f)
	(#dconf_3_13 == $$f)
	(#ed == #denum_14)
	(#ec == #denum_3_13)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_13: $$boolean_type)
	(class: $$string_type)
	(#dwrit_14: $$boolean_type)
	(#ec: $$boolean_type)
	(l: $$object_type)
	(#denum_14: $$boolean_type)
	(#dconf_14: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_3_13: $$boolean_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
I found the model: 

(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dval_3_13| () Extended_JSIL_Literal
  (Set (_ as-array k!1048)))
(define-fun |#dval_14| () Extended_JSIL_Literal
  (Set (_ as-array k!1049)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#denum_14| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#denum_3_13| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1049 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1048 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dval_3_13| () Extended_JSIL_Literal
  (Set (_ as-array k!1057)))
(define-fun |#dval_14| () Extended_JSIL_Literal
  (Set (_ as-array k!1056)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#denum_14| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#denum_3_13| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1057 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1056 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#dval_3_13| () Extended_JSIL_Literal
  (Set (_ as-array k!1065)))
(define-fun |#dval_14| () Extended_JSIL_Literal
  (Set (_ as-array k!1064)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#denum_14| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#denum_3_13| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1065 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1064 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#dval_3_13| () Extended_JSIL_Literal
  (Set (_ as-array k!1073)))
(define-fun |#dval_14| () Extended_JSIL_Literal
  (Set (_ as-array k!1072)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#denum_14| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#denum_3_13| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1073 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1072 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
----------------------------------
--5--
TIME: 4.958807
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_13, #dwrit_3_13, #denum_3_13, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dval_3_13 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#denum_14 == #denum_3_13))
	(! (#dval_14 == $$empty))
	(! (#cls == \"String\"))
	(#desc == {{ \"d\", #dval_14, #dwrit_14, #denum_14, $$f }})
	(#dcur == {{ \"d\", #dval_3_13, #dwrit_3_13, #denum_3_13, $$f }})
	(#dconf_14 == $$f)
	(#dconf_3_13 == $$f)
	(#ed == #denum_14)
	(#ec == #denum_3_13)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_13: $$boolean_type)
	(class: $$string_type)
	(#dwrit_14: $$boolean_type)
	(#ec: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_14: $$boolean_type)
	(#dconf_14: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_3_13: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 4.959847
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_14, $$f, #denum_15, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_14 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_15 == $$empty))
	(#dwrit_3_14 == $$f)
	(#desc == {{ \"d\", #dval_15, $$t, #denum_15, $$f }})
	(#dcur == {{ \"d\", #dval_3_14, $$f, #denum_15, $$f }})
	(#denum_3_14 == #denum_15)
	(#enum == #denum_15)
	(#dconf_15 == $$f)
	(#dconf_3_14 == $$f)
	(#dwrit_15 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_15: $$boolean_type)
	(#dconf_3_14: $$boolean_type)
	(#dwrit_15: $$boolean_type)
	(#dwrit_3_14: $$boolean_type)
	(l: $$object_type)
	(#denum_15: $$boolean_type)
	(#denum_3_14: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 4.960291
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_14, $$f, #denum_15, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_14 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_15 == $$empty))
	(#dwrit_3_14 == $$f)
	(#desc == {{ \"d\", #dval_15, $$t, #denum_15, $$f }})
	(#dcur == {{ \"d\", #dval_3_14, $$f, #denum_15, $$f }})
	(#denum_3_14 == #denum_15)
	(#enum == #denum_15)
	(#dconf_15 == $$f)
	(#dconf_3_14 == $$f)
	(#dwrit_15 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_15: $$boolean_type)
	(class: $$string_type)
	(#dconf_3_14: $$boolean_type)
	(#dwrit_15: $$boolean_type)
	(#dwrit_3_14: $$boolean_type)
	(l: $$object_type)
	(#denum_15: $$boolean_type)
	(#denum_3_14: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 4.960765
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_14, $$f, #denum_15, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_14 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_15 == $$empty))
	(#dwrit_3_14 == $$f)
	(#desc == {{ \"d\", #dval_15, $$t, #denum_15, $$f }})
	(#dcur == {{ \"d\", #dval_3_14, $$f, #denum_15, $$f }})
	(#denum_3_14 == #denum_15)
	(#enum == #denum_15)
	(#dconf_15 == $$f)
	(#dconf_3_14 == $$f)
	(#dwrit_15 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_15: $$boolean_type)
	(class: $$string_type)
	(#dconf_3_14: $$boolean_type)
	(#dwrit_15: $$boolean_type)
	(#dwrit_3_14: $$boolean_type)
	(l: $$object_type)
	(#denum_15: $$boolean_type)
	(#denum_3_14: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
I found the model: 

(define-fun |#dval_3_14| () Extended_JSIL_Literal
  (Set (_ as-array k!1080)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_15| () Extended_JSIL_Literal
  (Set (_ as-array k!1081)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!1081 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1080 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_14| () Extended_JSIL_Literal
  (Set (_ as-array k!1088)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_15| () Extended_JSIL_Literal
  (Set (_ as-array k!1089)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!1089 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1088 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_14| () Extended_JSIL_Literal
  (Set (_ as-array k!1096)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_15| () Extended_JSIL_Literal
  (Set (_ as-array k!1097)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1097 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1096 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_14| () Extended_JSIL_Literal
  (Set (_ as-array k!1104)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_15| () Extended_JSIL_Literal
  (Set (_ as-array k!1105)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1105 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1104 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
----------------------------------
--6--
TIME: 5.085929
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_14, $$f, #denum_15, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
	_$l_50 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(throw: $$t)
	(xret: _$l_50)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dval_3_14 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_15 == $$empty))
	(! (#cls == \"String\"))
	(#dwrit_3_14 == $$f)
	(#desc == {{ \"d\", #dval_15, $$t, #denum_15, $$f }})
	(#dcur == {{ \"d\", #dval_3_14, $$f, #denum_15, $$f }})
	(#denum_3_14 == #denum_15)
	(#enum == #denum_15)
	(#dconf_15 == $$f)
	(#dconf_3_14 == $$f)
	(#dwrit_15 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$object_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_15: $$boolean_type)
	(class: $$string_type)
	(#dconf_3_14: $$boolean_type)
	(#dwrit_15: $$boolean_type)
	(#dwrit_3_14: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_15: $$boolean_type)
	(#denum_3_14: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 5.086852
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_15, $$f, #denum_16, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_15 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_16 == $$empty))
	(#dconf_3_15 == $$f)
	(#dconf_16 == $$f)
	(#desc == {{ \"d\", #dval_16, $$t, #denum_16, $$f }})
	(#dcur == {{ \"d\", #dval_3_15, $$f, #denum_16, $$f }})
	(#denum_3_15 == #denum_16)
	(#dwrit_3_15 == $$f)
	(#enum == #denum_16)
	(#dwrit_16 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_15: $$boolean_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_15: $$boolean_type)
	(#dwrit_16: $$boolean_type)
	(#dconf_3_15: $$boolean_type)
	(#denum_16: $$boolean_type)
	(l: $$object_type)
	(#dconf_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 5.087415
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_15, $$f, #denum_16, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_15 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_16 == $$empty))
	(#dconf_3_15 == $$f)
	(#dconf_16 == $$f)
	(#desc == {{ \"d\", #dval_16, $$t, #denum_16, $$f }})
	(#denum_3_15 == #denum_16)
	(#dcur == {{ \"d\", #dval_3_15, $$f, #denum_16, $$f }})
	(#enum == #denum_16)
	(#dwrit_3_15 == $$f)
	(#dwrit_16 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_15: $$boolean_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_15: $$boolean_type)
	(#dwrit_16: $$boolean_type)
	(class: $$string_type)
	(#dconf_3_15: $$boolean_type)
	(#denum_16: $$boolean_type)
	(l: $$object_type)
	(#dconf_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 5.087883
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_15, $$f, #denum_16, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_15 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_16 == $$empty))
	(#dconf_3_15 == $$f)
	(#dconf_16 == $$f)
	(#desc == {{ \"d\", #dval_16, $$t, #denum_16, $$f }})
	(#dcur == {{ \"d\", #dval_3_15, $$f, #denum_16, $$f }})
	(#denum_3_15 == #denum_16)
	(#dwrit_3_15 == $$f)
	(#enum == #denum_16)
	(#dwrit_16 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_15: $$boolean_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_15: $$boolean_type)
	(#dwrit_16: $$boolean_type)
	(class: $$string_type)
	(#dconf_3_15: $$boolean_type)
	(#denum_16: $$boolean_type)
	(l: $$object_type)
	(#dconf_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
I found the model: 

(define-fun |#dval_16| () Extended_JSIL_Literal
  (Set (_ as-array k!1113)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_15| () Extended_JSIL_Literal
  (Set (_ as-array k!1112)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!1113 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1112 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_16| () Extended_JSIL_Literal
  (Set (_ as-array k!1121)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_15| () Extended_JSIL_Literal
  (Set (_ as-array k!1120)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!1121 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1120 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_16| () Extended_JSIL_Literal
  (Set (_ as-array k!1129)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_15| () Extended_JSIL_Literal
  (Set (_ as-array k!1128)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1129 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1128 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_16| () Extended_JSIL_Literal
  (Set (_ as-array k!1137)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_15| () Extended_JSIL_Literal
  (Set (_ as-array k!1136)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1137 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1136 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
----------------------------------
--5--
TIME: 5.212192
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_15, $$f, #denum_16, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dval_3_15 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_16 == $$empty))
	(! (#cls == \"String\"))
	(#dconf_3_15 == $$f)
	(#dconf_16 == $$f)
	(#desc == {{ \"d\", #dval_16, $$t, #denum_16, $$f }})
	(#dcur == {{ \"d\", #dval_3_15, $$f, #denum_16, $$f }})
	(#denum_3_15 == #denum_16)
	(#dwrit_3_15 == $$f)
	(#enum == #denum_16)
	(#dwrit_16 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#desc: $$list_type)
	(#denum_3_15: $$boolean_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_15: $$boolean_type)
	(#dwrit_16: $$boolean_type)
	(class: $$string_type)
	(#dconf_3_15: $$boolean_type)
	(#denum_16: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 5.213624
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_16, $$t, #denum_17, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_16 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_17 == $$empty))
	(#denum_3_16 == #denum_17)
	(#desc == {{ \"d\", #dval_17, #dwrit_17, #denum_17, $$f }})
	(#dcur == {{ \"d\", #dval_3_16, $$t, #denum_17, $$f }})
	(#dwrit_3_16 == $$t)
	(#enum == #denum_17)
	(#dconf_3_16 == $$f)
	(#dconf_17 == $$f)
Gamma: 	
	(#denum_3_16: $$boolean_type)
	(throw: $$boolean_type)
	(#denum_17: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_17: $$boolean_type)
	(#dconf_3_16: $$boolean_type)
	(#dconf_17: $$boolean_type)
	(l: $$object_type)
	(#dwrit_3_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 5.213921
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_16, $$t, #denum_17, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_16 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_17 == $$empty))
	(#denum_3_16 == #denum_17)
	(#desc == {{ \"d\", #dval_17, #dwrit_17, #denum_17, $$f }})
	(#dcur == {{ \"d\", #dval_3_16, $$t, #denum_17, $$f }})
	(#dwrit_3_16 == $$t)
	(#dconf_3_16 == $$f)
	(#enum == #denum_17)
	(#dconf_17 == $$f)
Gamma: 	
	(#denum_3_16: $$boolean_type)
	(throw: $$boolean_type)
	(#denum_17: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_17: $$boolean_type)
	(#dconf_3_16: $$boolean_type)
	(#dconf_17: $$boolean_type)
	(class: $$string_type)
	(l: $$object_type)
	(#dwrit_3_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 5.214466
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_16, $$t, #denum_17, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_16 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_17 == $$empty))
	(#denum_3_16 == #denum_17)
	(#desc == {{ \"d\", #dval_17, #dwrit_17, #denum_17, $$f }})
	(#dcur == {{ \"d\", #dval_3_16, $$t, #denum_17, $$f }})
	(#dwrit_3_16 == $$t)
	(#enum == #denum_17)
	(#dconf_3_16 == $$f)
	(#dconf_17 == $$f)
Gamma: 	
	(#denum_3_16: $$boolean_type)
	(throw: $$boolean_type)
	(#denum_17: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_17: $$boolean_type)
	(#dconf_3_16: $$boolean_type)
	(#dconf_17: $$boolean_type)
	(class: $$string_type)
	(l: $$object_type)
	(#dwrit_3_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
I found the model: 

(define-fun |#dval_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1144)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_16| () Extended_JSIL_Literal
  (Set (_ as-array k!1145)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!1145 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1144 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1152)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_16| () Extended_JSIL_Literal
  (Set (_ as-array k!1153)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!1153 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1152 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1160)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_16| () Extended_JSIL_Literal
  (Set (_ as-array k!1161)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1161 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1160 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1168)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval_3_16| () Extended_JSIL_Literal
  (Set (_ as-array k!1169)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1169 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1168 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
----------------------------------
--5--
TIME: 5.337444
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_17, #dwrit_17, #denum_17, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(xret: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dval_3_16 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_17 == $$empty))
	(! (#cls == \"String\"))
	(#denum_3_16 == #denum_17)
	(#desc == {{ \"d\", #dval_17, #dwrit_17, #denum_17, $$f }})
	(#dcur == {{ \"d\", #dval_3_16, $$t, #denum_17, $$f }})
	(#dwrit_3_16 == $$t)
	(#enum == #denum_17)
	(#dconf_3_16 == $$f)
	(#dconf_17 == $$f)
Gamma: 	
	(#denum_3_16: $$boolean_type)
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#denum_17: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_17: $$boolean_type)
	(#dconf_3_16: $$boolean_type)
	(#dconf_17: $$boolean_type)
	(class: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_3_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of defineOwnProperty
----------------------------------
--0--
TIME: 5.338316
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_17, $$t, #denum_3_17, #dconf_3_17 }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_17 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#gval == $$empty))
	(#dec == #denum_3_17)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_17, $$t, #denum_3_17, #dconf_3_17 }})
	(#dcc == #dconf_3_17)
	(#dwrit_3_17 == $$t)
Gamma: 	
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(l: $$object_type)
	(#denum_3_17: $$boolean_type)
	(#dconf_3_17: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_3_17: $$boolean_type)
Preds: 
CMD: class := [l, "@class"]
----------------------------------
----------------------------------
--1--
TIME: 5.338523
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_17, $$t, #denum_3_17, #dconf_3_17 }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_17 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#gval == $$empty))
	(#dec == #denum_3_17)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_17, $$t, #denum_3_17, #dconf_3_17 }})
	(#dcc == #dconf_3_17)
	(#dwrit_3_17 == $$t)
Gamma: 	
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(class: $$string_type)
	(#dec: $$boolean_type)
	(l: $$object_type)
	(#denum_3_17: $$boolean_type)
	(#dconf_3_17: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_3_17: $$boolean_type)
Preds: 
CMD: goto [(class = "Array")] 2 4
----------------------------------
in the ELSE branch
----------------------------------
--4--
TIME: 5.338870
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_17, $$t, #denum_3_17, #dconf_3_17 }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_17 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#gval == $$empty))
	(#dec == #denum_3_17)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_17, $$t, #denum_3_17, #dconf_3_17 }})
	(#dcc == #dconf_3_17)
	(#dwrit_3_17 == $$t)
Gamma: 	
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(class: $$string_type)
	(#dec: $$boolean_type)
	(l: $$object_type)
	(#denum_3_17: $$boolean_type)
	(#dconf_3_17: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_3_17: $$boolean_type)
Preds: 
CMD: xret := "o__defineOwnProperty"(l, prop, desc, throw) with 6
----------------------------------
I found the model: 

(define-fun |#dval_3_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1177)))
(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!1176)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1177 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1176 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1184)))
(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!1185)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!1185 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1184 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1192)))
(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!1193)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1193 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1192 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1201)))
(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!1200)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dconf_3_17| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1201 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1200 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1209)))
(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!1208)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1209 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1208 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1217)))
(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!1216)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!1217 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1216 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1225)))
(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!1224)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1225 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1224 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1233)))
(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!1232)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!1233 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1232 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1241)))
(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!1240)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun k!1241 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1240 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1248)))
(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!1249)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!1249 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1248 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#dval_3_17| () Extended_JSIL_Literal
  (Set (_ as-array k!1256)))
(define-fun |#gval| () Extended_JSIL_Literal
  (Set (_ as-array k!1257)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dconf_3_17| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun k!1257 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1256 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
----------------------------------
--5--
TIME: 5.682810
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #gval, $$t, #denum_3_17, #dconf_3_17 }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(desc: #desc)
	(class: #cls)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dval_3_17 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#gval == $$empty))
	(#dec == #denum_3_17)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_17, $$t, #denum_3_17, #dconf_3_17 }})
	(#dcc == #dconf_3_17)
	(#dwrit_3_17 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(class: $$string_type)
	(#dec: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#denum_3_17: $$boolean_type)
	(#dconf_3_17: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_3_17: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc defineOwnProperty
----------------------------------
----------------------------------
Symbolic execution of put
----------------------------------
--0--
TIME: 5.683690
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(throw: $$boolean_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: xret := "canPut"(l, prop) with 24
----------------------------------
----------------------------------
--1--
TIME: 5.683985
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$f)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [xret] 2 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 5.684539
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$f)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: xret := $$empty
----------------------------------
----------------------------------
--22--
TIME: 5.684658
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$empty)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$empty_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: goto [throw] 23 20
----------------------------------
in the THEN branch
----------------------------------
--23--
TIME: 5.684790
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$empty)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$empty_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: xret := "TypeError"() 
----------------------------------
----------------------------------
--24--
TIME: 5.685041
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
	_$l_51 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(throw: $$t)
	(xret: _$l_51)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc put
----------------------------------
----------------------------------
Symbolic execution of put
----------------------------------
--0--
TIME: 5.685401
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_19 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }})
	(#dwrit_19 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_19: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_19: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#dconf_19: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: xret := "canPut"(l, prop) with 24
----------------------------------
----------------------------------
--1--
TIME: 5.686038
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$f)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_19 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }})
	(#dwrit_19 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_19: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_19: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#dconf_19: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [xret] 2 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 5.686280
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$f)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_19 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }})
	(#dwrit_19 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_19: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_19: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#dconf_19: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: xret := $$empty
----------------------------------
----------------------------------
--22--
TIME: 5.687051
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$empty)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_19 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }})
	(#dwrit_19 == $$f)
Gamma: 	
	(#dwrit_19: $$boolean_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$empty_type)
	(#denum_19: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_19: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [throw] 23 20
----------------------------------
in the THEN branch
----------------------------------
--23--
TIME: 5.687307
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$empty)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_19 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }})
	(#dwrit_19 == $$f)
Gamma: 	
	(#dwrit_19: $$boolean_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$empty_type)
	(#denum_19: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_19: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: xret := "TypeError"() 
----------------------------------
----------------------------------
--24--
TIME: 5.687725
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
	_$l_52 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(throw: $$t)
	(xret: _$l_52)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_19 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }})
	(#dwrit_19 == $$f)
Gamma: 	
	(#dwrit_19: $$boolean_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$object_type)
	(#denum_19: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_19: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc put
----------------------------------
----------------------------------
Symbolic execution of put
----------------------------------
--0--
TIME: 5.688264
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_20 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }})
Gamma: 	
	(throw: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_20: $$boolean_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_20: $$boolean_type)
	(#denum_20: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: xret := "canPut"(l, prop) with 24
----------------------------------
----------------------------------
--1--
TIME: 5.689615
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$f)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_20 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_20: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_20: $$boolean_type)
	(#denum_20: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [xret] 2 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 5.689910
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$f)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_20 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_20: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_20: $$boolean_type)
	(#denum_20: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: xret := $$empty
----------------------------------
----------------------------------
--22--
TIME: 5.690115
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$empty)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_20 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dconf_20: $$boolean_type)
	(xret: $$empty_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dwrit_20: $$boolean_type)
	(#other: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#denum_20: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [throw] 23 20
----------------------------------
in the THEN branch
----------------------------------
--23--
TIME: 5.690379
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$empty)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_20 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dconf_20: $$boolean_type)
	(xret: $$empty_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dwrit_20: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(#denum_20: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: xret := "TypeError"() 
----------------------------------
----------------------------------
--24--
TIME: 5.691152
STATE:
Heap: 
	_$l_53 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: _$l_53)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_20 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dconf_20: $$boolean_type)
	(xret: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#dwrit_20: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(#denum_20: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc put
----------------------------------
----------------------------------
Symbolic execution of put
----------------------------------
--0--
TIME: 5.691722
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_21 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#dwrit_21 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }})
Gamma: 	
	(throw: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#dconf_21: $$boolean_type)
	(#denum_21: $$boolean_type)
	(#dwrit_21: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: xret := "canPut"(l, prop) with 24
----------------------------------
----------------------------------
--1--
TIME: 5.692802
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$f)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_21 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#dwrit_21 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_21: $$boolean_type)
	(#denum_21: $$boolean_type)
	(#dwrit_21: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [xret] 2 21
----------------------------------
in the ELSE branch
----------------------------------
--21--
TIME: 5.693108
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$f)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_21 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#dwrit_21 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }})
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf_21: $$boolean_type)
	(#denum_21: $$boolean_type)
	(#dwrit_21: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: xret := $$empty
----------------------------------
----------------------------------
--22--
TIME: 5.693315
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$empty)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_21 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#dwrit_21 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$empty_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#denum_21: $$boolean_type)
	(#dconf_21: $$boolean_type)
	(#dwrit_21: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [throw] 23 20
----------------------------------
in the THEN branch
----------------------------------
--23--
TIME: 5.693563
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: $$empty)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_21 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#dwrit_21 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$empty_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(#dconf_21: $$boolean_type)
	(#denum_21: $$boolean_type)
	(#dwrit_21: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: xret := "TypeError"() 
----------------------------------
----------------------------------
--24--
TIME: 5.693996
STATE:
Heap: 
	_$l_54 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(xret: _$l_54)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_21 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#dwrit_21 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }})
Gamma: 	
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(xret: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#lp: $$object_type)
	(#dconf_21: $$boolean_type)
	(#denum_21: $$boolean_type)
	(#dwrit_21: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc put
----------------------------------
----------------------------------
Symbolic execution of put
----------------------------------
--0--
TIME: 5.694545
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(#prop: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: xret := "canPut"(l, prop) with 24
----------------------------------
----------------------------------
--1--
TIME: 5.694861
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#prop: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: goto [xret] 2 21
----------------------------------
in the THEN branch
Unfold. Time: 5.694950
----------------------------------
--2--
TIME: 5.696124
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (\"@class\": #cls), (#prop: None), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: 
CMD: xret := "getOwnProperty"(l, prop) with 24
----------------------------------
----------------------------------
--3--
TIME: 5.696935
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@proto\": $$null), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$undefined)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: 
CMD: dd := "i__isDataDescriptor"(xret) 
----------------------------------
----------------------------------
--4--
TIME: 5.698039
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@proto\": $$null), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: 
CMD: goto [dd] 5 8
----------------------------------
in the ELSE branch
Fold. Time: 5.698415
----------------------------------
--8--
TIME: 5.699868
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: xret := "getProperty"(l, prop) with 24
----------------------------------
----------------------------------
--9--
TIME: 5.700606
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: ad := "i__isAccessorDescriptor"(xret) 
----------------------------------
----------------------------------
--10--
TIME: 5.701573
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(ad: $$boolean_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: goto [ad] 11 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 5.701989
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(ad: $$boolean_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#g_aux_4: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: desc := {{ "d", value, $$t, $$t, $$t }}
----------------------------------
Unfold. Time: 5.702149
----------------------------------
--17--
TIME: 5.703315
STATE:
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (\"@class\": #cls), (#prop: None), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$undefined)
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(ad: $$boolean_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: 
CMD: xret := "defineOwnProperty"(l, prop, desc, throw) with 24
----------------------------------
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
Fold. Time: 5.997857
----------------------------------
--18--
TIME: 6.008070
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$t)
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ #cls }})
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#g_aux_4: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
----------------------------------
--19--
TIME: 6.008430
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$t)
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ #cls }})
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#g_aux_3: $$list_type)
	(ad: $$boolean_type)
	(xret: $$boolean_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: xret := $$empty
----------------------------------
----------------------------------
--20--
TIME: 6.008929
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$empty)
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == {{ #cls }})
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$empty_type)
	(ad: $$boolean_type)
	(desc: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#g_aux_4: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
Verified one spec of proc put
----------------------------------
----------------------------------
Symbolic execution of put
----------------------------------
--0--
TIME: 6.010535
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#llpv: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: xret := "canPut"(l, prop) with 24
----------------------------------
----------------------------------
--1--
TIME: 6.011274
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#llpv: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [xret] 2 21
----------------------------------
in the THEN branch
Unfold. Time: 6.011469
----------------------------------
--2--
TIME: 6.012650
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (\"@proto\": #lp), (#prop: None), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: xret := "getOwnProperty"(l, prop) with 24
----------------------------------
----------------------------------
--3--
TIME: 6.013758
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@proto\": #lp), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$undefined)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: dd := "i__isDataDescriptor"(xret) 
----------------------------------
----------------------------------
--4--
TIME: 6.014704
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@proto\": #lp), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: goto [dd] 5 8
----------------------------------
in the ELSE branch
Fold. Time: 6.015154
----------------------------------
--8--
TIME: 6.016419
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: xret := "getProperty"(l, prop) with 24
----------------------------------
----------------------------------
--9--
TIME: 6.017337
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: ad := "i__isAccessorDescriptor"(xret) 
----------------------------------
----------------------------------
--10--
TIME: 6.020078
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(ad: $$boolean_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [ad] 11 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 6.020672
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$undefined_type)
	(ad: $$boolean_type)
	(#lltf: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#g_aux_4: $$list_type)
	(#pv: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: desc := {{ "d", value, $$t, $$t, $$t }}
----------------------------------
Unfold. Time: 6.020893
----------------------------------
--17--
TIME: 6.022490
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (\"@proto\": #lp), (#prop: None), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$undefined)
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(ad: $$boolean_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: xret := "defineOwnProperty"(l, prop, desc, throw) with 24
----------------------------------
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
Fold. Time: 6.310037
----------------------------------
--18--
TIME: 6.316841
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$t)
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(throw: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(ad: $$boolean_type)
	(desc: $$list_type)
	(#lltf: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#g_aux_4: $$list_type)
	(#pv: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv)), Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
----------------------------------
--19--
TIME: 6.317405
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$t)
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#g_aux_3: $$list_type)
	(ad: $$boolean_type)
	(xret: $$boolean_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv)), Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: xret := $$empty
----------------------------------
----------------------------------
--20--
TIME: 6.318105
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$empty)
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == $$undefined)
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(throw: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$empty_type)
	(ad: $$boolean_type)
	(desc: $$list_type)
	(#lltf: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#g_aux_4: $$list_type)
	(#pv: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv)), Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
I found the model: 

(define-fun |#lp| () Extended_JSIL_Literal
  (Elem (Loc 2)))
(define-fun |_$l_#l| () Extended_JSIL_Literal
  (Set (_ as-array k!1347)))
(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1346)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 3)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1346 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Loc 2))) ObjectType
  (ite (= x!0 (Elem (String 3))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType)))))))
(define-fun k!1347 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
Verified one spec of proc put
----------------------------------
----------------------------------
Symbolic execution of put
----------------------------------
--0--
TIME: 6.350526
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#value == $$empty))
	(! (#dval == $$empty))
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: xret := "canPut"(l, prop) with 24
----------------------------------
----------------------------------
--1--
TIME: 6.351100
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#value == $$empty))
	(! (#dval == $$empty))
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [xret] 2 21
----------------------------------
in the THEN branch
Unfold. Time: 6.351233
----------------------------------
--2--
TIME: 6.363440
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: {{ \"d\", #dval, $$t, #denum, #dconf }}), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == {{ \"d\", #dval, $$t, #denum, #dconf }})
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#denum: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: 
CMD: xret := "getOwnProperty"(l, prop) with 24
----------------------------------
----------------------------------
--3--
TIME: 6.365692
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval, $$t, #denum, #dconf }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: {{ \"d\", #dval, $$t, #denum, #dconf }})
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (#cls == \"String\"))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == {{ \"d\", #dval, $$t, #denum, #dconf }})
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#ext: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#denum: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: 
CMD: dd := "i__isDataDescriptor"(xret) 
----------------------------------
----------------------------------
--4--
TIME: 6.366634
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval, $$t, #denum, #dconf }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: {{ \"d\", #dval, $$t, #denum, #dconf }})
	(value: #value)
	(dd: $$t)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval == $$empty))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == {{ \"d\", #dval, $$t, #denum, #dconf }})
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#ext: $$boolean_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#denum: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: 
CMD: goto [dd] 5 8
----------------------------------
in the THEN branch
----------------------------------
--5--
TIME: 6.367039
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval, $$t, #denum, #dconf }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: {{ \"d\", #dval, $$t, #denum, #dconf }})
	(value: #value)
	(dd: $$t)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval == $$empty))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == {{ \"d\", #dval, $$t, #denum, #dconf }})
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#ext: $$boolean_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#denum: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: 
CMD: desc := {{ "g", $$empty, $$empty, value, $$empty, $$empty, $$empty }}
----------------------------------
----------------------------------
--6--
TIME: 6.367320
STATE:
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval, $$t, #denum, #dconf }}), (\"@class\": #cls), (\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: {{ \"d\", #dval, $$t, #denum, #dconf }})
	(value: #value)
	(desc: {{ \"g\", $$empty, $$empty, #value, $$empty, $$empty, $$empty }})
	(dd: $$t)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval == $$empty))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_1 == {{ \"d\", #dval, $$t, #denum, #dconf }})
	(#g_aux_0 == {{ #cls }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(throw: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#denum: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: 
CMD: xret := "defineOwnProperty"(l, prop, desc, throw) with 24
----------------------------------
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1358)))
(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1359)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1358 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!1359 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1366)))
(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1367)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1366 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!1367 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1375)))
(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1374)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1374 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!1375 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1383)))
(define-fun |#dconf| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1382)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1382 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!1383 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1391)))
(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1390)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1390 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!1391 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1398)))
(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1399)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1398 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!1399 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1407)))
(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1406)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1406 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!1407 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1415)))
(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1414)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1414 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!1415 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1423)))
(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1422)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1422 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!1423 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1431)))
(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1430)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1430 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!1431 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1439)))
(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1438)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1438 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType))))))
(define-fun k!1439 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
Fold. Time: 6.710741
----------------------------------
--7--
TIME: 6.711517
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(value: #value)
	(desc: {{ \"g\", $$empty, $$empty, #value, $$empty, $$empty, $$empty }})
	(dd: $$t)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval == $$empty))
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == {{ \"d\", #dval, $$t, #denum, #dconf }})
	(#g_aux_0 == {{ #cls }})
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(throw: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#denum: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, #denum, #dconf }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: goto 19
----------------------------------
----------------------------------
--19--
TIME: 6.711870
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(value: #value)
	(desc: {{ \"g\", $$empty, $$empty, #value, $$empty, $$empty, $$empty }})
	(dd: $$t)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval == $$empty))
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == {{ \"d\", #dval, $$t, #denum, #dconf }})
	(#g_aux_0 == {{ #cls }})
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(throw: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(desc: $$list_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#denum: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, #denum, #dconf }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: xret := $$empty
----------------------------------
----------------------------------
--20--
TIME: 6.712297
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$empty)
	(value: #value)
	(desc: {{ \"g\", $$empty, $$empty, #value, $$empty, $$empty, $$empty }})
	(dd: $$t)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval == $$empty))
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == {{ \"\" }})
	(#g_aux_2 == {{ _$l_#l }})
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == {{ \"d\", #dval, $$t, #denum, #dconf }})
	(#g_aux_0 == {{ #cls }})
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == {{ $$f }})
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#dconf: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#g_aux_3: $$list_type)
	(xret: $$empty_type)
	(#ext: $$boolean_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#g_aux_4: $$list_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#denum: $$boolean_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, #denum, #dconf }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
Verified one spec of proc put
----------------------------------
----------------------------------
Symbolic execution of put
----------------------------------
--0--
TIME: 6.713266
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: xret := "canPut"(l, prop) with 24
----------------------------------
I found the model: 

(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 0)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
    20.0)))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 0))) StringType
    BooleanType)))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0)))
----------------------------------
--1--
TIME: 6.748900
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dcval == $$empty))
Gamma: 	
	(throw: $$boolean_type)
	(xret: $$boolean_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [xret] 2 21
----------------------------------
in the THEN branch
Unfold. Time: 6.749061
----------------------------------
--2--
TIME: 6.767860
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (\"@proto\": #lp), (#prop: None), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dcval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#dcconf: $$boolean_type)
	(xret: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: xret := "getOwnProperty"(l, prop) with 24
----------------------------------
----------------------------------
--3--
TIME: 6.769080
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@proto\": #lp), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$undefined)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dcval == $$empty))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#dcconf: $$boolean_type)
	(xret: $$undefined_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: dd := "i__isDataDescriptor"(xret) 
----------------------------------
----------------------------------
--4--
TIME: 6.770104
STATE:
Heap: 
	_$l_#l |-> [(#prop: None), (\"@class\": #cls), (\"@proto\": #lp), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dcval == $$empty))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#dcconf: $$boolean_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: goto [dd] 5 8
----------------------------------
in the ELSE branch
Fold. Time: 6.770608
----------------------------------
--8--
TIME: 6.772003
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: $$undefined)
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dcval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#dcconf: $$boolean_type)
	(xret: $$undefined_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: xret := "getProperty"(l, prop) with 24
----------------------------------
----------------------------------
--9--
TIME: 6.773062
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(xret: {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dcval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(#dcconf: $$boolean_type)
	(xret: $$list_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: ad := "i__isAccessorDescriptor"(xret) 
----------------------------------
----------------------------------
--10--
TIME: 6.776292
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dcval == $$empty))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(ad: $$boolean_type)
	(#dcconf: $$boolean_type)
	(xret: $$list_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [ad] 11 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 6.776861
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(value: #value)
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dcval == $$empty))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(ad: $$boolean_type)
	(#dcconf: $$boolean_type)
	(xret: $$list_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: desc := {{ "d", value, $$t, $$t, $$t }}
----------------------------------
Unfold. Time: 6.777090
----------------------------------
--17--
TIME: 6.778689
STATE:
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (\"@proto\": #lp), (#prop: None), (\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#dcval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_1 == {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$list_type)
	(#dcconf: $$boolean_type)
	(ad: $$boolean_type)
	(#lltf: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#g_aux_4: $$list_type)
	(#pv: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: xret := "defineOwnProperty"(l, prop, desc, throw) with 24
----------------------------------
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Set (_ as-array k!1455)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun k!1455 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Set (_ as-array k!1461)))
(define-fun k!1461 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#value| () Extended_JSIL_Literal
  (Elem Empty))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Set (_ as-array k!1467)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun k!1467 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Set (_ as-array k!1473)))
(define-fun k!1473 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Set (_ as-array k!1479)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun k!1479 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Set (_ as-array k!1485)))
(define-fun k!1485 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Set (_ as-array k!1491)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun k!1491 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Set (_ as-array k!1497)))
(define-fun k!1497 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Set (_ as-array k!1503)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun k!1503 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
I found the model: 

(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#throw| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Set (_ as-array k!1509)))
(define-fun k!1509 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
Fold. Time: 7.090651
----------------------------------
--18--
TIME: 7.094872
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$t)
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dcval == $$empty))
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(throw: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#dcconf: $$boolean_type)
	(ad: $$boolean_type)
	(#lltf: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#g_aux_4: $$list_type)
	(#pv: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv)), Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
----------------------------------
--19--
TIME: 7.095379
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$t)
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dcval == $$empty))
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(throw: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#tf: $$boolean_type)
	(#g_aux_3: $$list_type)
	(xret: $$boolean_type)
	(#dcconf: $$boolean_type)
	(ad: $$boolean_type)
	(#lltf: $$list_type)
	(#throw: $$boolean_type)
	(dd: $$boolean_type)
	(desc: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(#cls: $$string_type)
	(#g_aux_4: $$list_type)
	(#pv: $$string_type)
	(l: $$object_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv)), Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: xret := $$empty
----------------------------------
----------------------------------
--20--
TIME: 7.096045
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(ad: $$f)
	(xret: $$empty)
	(value: #value)
	(desc: {{ \"d\", #value, $$t, $$t, $$t }})
	(dd: $$f)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dcval == $$empty))
	(! (#cls == \"Array\"))
	(! (#value == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#g_aux_4 == (\"\" :: (#pv :: #llpv)))
	(#g_aux_2 == (_$l_#l :: (#lp :: #lllp)))
	(#g_aux_new_4 == {{ \"\" }})
	(#g_aux_new_1 == {{ #cls }})
	(#g_aux_1 == {{ \"d\", #dcval, $$t, #dcenum, #dcconf }})
	(#g_aux_0 == (#cls :: (#pcls :: #ocls)))
	(#g_aux_new_3 == {{ $$f }})
	(#g_aux_3 == ($$f :: (#tf :: #lltf)))
Gamma: 	
	(#g_aux_0: $$list_type)
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(throw: $$boolean_type)
	(#tf: $$boolean_type)
	(#g_aux_new_3: $$list_type)
	(#g_aux_3: $$list_type)
	(ad: $$boolean_type)
	(#dcconf: $$boolean_type)
	(xret: $$empty_type)
	(desc: $$list_type)
	(dd: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#g_aux_4: $$list_type)
	(#cls: $$string_type)
	(prop: $$string_type)
	(#g_aux_2: $$list_type)
	(l: $$object_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#g_aux_new_4: $$list_type)
	(#g_aux_new_1: $$list_type)
	(#ocls: $$list_type)
	(#g_aux_1: $$list_type)
Preds: Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv)), Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
I found the model: 

(define-fun |#lp| () Extended_JSIL_Literal
  (Elem (Loc 2)))
(define-fun |_$l_#l| () Extended_JSIL_Literal
  (Set (_ as-array k!1522)))
(define-fun |#value| () Extended_JSIL_Literal
  (Set (_ as-array k!1520)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 8855)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 3)))
(define-fun |#dcval| () Extended_JSIL_Literal
  (Set (_ as-array k!1521)))
(define-fun k!1521 ((x!0 JSIL_Literal)) Bool
  (ite (= x!0 (Bool false)) true
    false))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 8855.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1522 ((x!0 JSIL_Literal)) Bool
  (ite (= x!0 Undefined) true
    false))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Loc 2))) ObjectType
  (ite (= x!0 (Elem (String 3))) StringType
  (ite (= x!0 (Elem (String 8855))) StringType
    BooleanType)))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1520 ((x!0 JSIL_Literal)) Bool
  (ite (= x!0 Undefined) false
    true))
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 4.0) 6.0
    0.0))))
Verified one spec of proc put
----------------------------------
----------------------------------
Symbolic execution of hasProperty
----------------------------------
--0--
TIME: 7.125406
STATE:
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #gp_aux_0, #gp_aux_1, #gp_aux_2, #gp_aux_3, #gp_aux_4)
CMD: xret := "getProperty"(l, prop) with 2
----------------------------------
----------------------------------
--1--
TIME: 7.125655
STATE:
Heap: 
	
Store: 	
	(xret: #gp_aux_1)
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #gp_aux_0, #gp_aux_1, #gp_aux_2, #gp_aux_3, #gp_aux_4)
CMD: xret := (not (xret = $$undefined))
----------------------------------
Verified one spec of proc hasProperty
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.125901
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 7.125999
STATE:
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 
CMD: xret := "ReferenceError"() 
----------------------------------
----------------------------------
--17--
TIME: 7.127817
STATE:
Heap: 
	_$l_55 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_55)
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(v: $$undefined_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.128062
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 7.128162
STATE:
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 
CMD: xret := "ReferenceError"() 
----------------------------------
----------------------------------
--17--
TIME: 7.128373
STATE:
Heap: 
	_$l_56 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_56)
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(v: $$null_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.128536
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 7.128603
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: xret := "ReferenceError"() 
----------------------------------
----------------------------------
--17--
TIME: 7.128799
STATE:
Heap: 
	_$l_57 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_57)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(v: $$number_type)
	(_lvar_v: $$number_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.128971
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 7.129038
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: xret := "ReferenceError"() 
----------------------------------
----------------------------------
--17--
TIME: 7.130421
STATE:
Heap: 
	_$l_58 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_58)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(v: $$boolean_type)
	(_lvar_v: $$boolean_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.130615
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 7.130683
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: xret := "ReferenceError"() 
----------------------------------
----------------------------------
--17--
TIME: 7.130879
STATE:
Heap: 
	_$l_59 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_59)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(v: $$string_type)
	(_lvar_v: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.131052
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(_lvar_v: $$object_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the ELSE branch
----------------------------------
--16--
TIME: 7.131119
STATE:
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(_lvar_v: $$object_type)
Preds: 
CMD: xret := "ReferenceError"() 
----------------------------------
----------------------------------
--17--
TIME: 7.131313
STATE:
Heap: 
	_$l_60 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_60)
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(v: $$object_type)
	(_lvar_v: $$object_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.131557
STATE:
Heap: 
	_$l_#obj |-> [(#field: #oldvalue), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
Preds: 
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.131652
STATE:
Heap: 
	_$l_#obj |-> [(#field: #oldvalue), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
Preds: 
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.131741
STATE:
Heap: 
	_$l_#obj |-> [(#field: #oldvalue), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
Preds: 
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.131789
STATE:
Heap: 
	_$l_#obj |-> [(#field: #oldvalue), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(w: #w)
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.131847
STATE:
Heap: 
	_$l_#obj |-> [(#field: #oldvalue), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(w: #w)
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.131965
STATE:
Heap: 
	_$l_#obj |-> [(#field: #oldvalue), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(w: #w)
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.132497
STATE:
Heap: 
	_$l_#obj |-> [(#field: #oldvalue), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.132646
STATE:
Heap: 
	_$l_#obj |-> [(#field: #oldvalue), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 7.132791
STATE:
Heap: 
	_$l_#obj |-> [(#field: #oldvalue), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: goto [(rbase = $lg)] 11 13
----------------------------------
in the ELSE branch
----------------------------------
--13--
TIME: 7.132945
STATE:
Heap: 
	_$l_#obj |-> [(#field: #oldvalue), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: [rbase, rfield] := w
----------------------------------
----------------------------------
--14--
TIME: 7.133059
STATE:
Heap: 
	_$l_#obj |-> [(#field: #w), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(rfield: #field)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#obj)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(rbase: $$object_type)
Preds: 
CMD: xret := $$empty
----------------------------------
----------------------------------
--15--
TIME: 7.133170
STATE:
Heap: 
	_$l_#obj |-> [(#field: #w), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #field)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#obj)
	(v: {{ \"v\", _$l_#obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(rfield: $$string_type)
	(xret: $$empty_type)
	(prim: $$boolean_type)
	(rbase: $$object_type)
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
Preds: 
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.133458
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.133546
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.133629
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.133677
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.133729
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.134042
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.134559
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.134752
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the THEN branch
----------------------------------
--8--
TIME: 7.134874
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
----------------------------------
--17--
TIME: 7.135225
STATE:
Heap: 
	_$l_61 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_61)
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: _lvar_878)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(xret: $$object_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.135807
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_22 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_22 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.135961
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_22 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_22 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.136108
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_22 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_22 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.136212
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_22 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_22 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.136349
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_22 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_22 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.136540
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_22 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_22 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.137367
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_22 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_22 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.137602
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_22 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_22 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the THEN branch
----------------------------------
--8--
TIME: 7.137841
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_22 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_22 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
----------------------------------
--17--
TIME: 7.138619
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
	_$l_62 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_62)
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: _lvar_881)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_22 == $$empty))
	(#dwrit_22 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }})
Gamma: 	
	(xret: $$object_type)
	(v: $$list_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.139190
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_23: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.139369
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_23: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.139549
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_23: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.139768
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_23: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.139886
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dwrit_23: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.140105
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dwrit_23: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.141019
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dwrit_23: $$boolean_type)
	(prim: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.141287
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dwrit_23: $$boolean_type)
	(prim: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the THEN branch
----------------------------------
--8--
TIME: 7.141511
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dwrit_23: $$boolean_type)
	(prim: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
I found the model: 

(define-fun |#dwrit_23| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#dval_23| () Extended_JSIL_Literal
  (Set (_ as-array k!1528)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    1.0))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType)))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1528 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
    0.0))
----------------------------------
--17--
TIME: 7.157994
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
	_$l_63 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_63)
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: _lvar_886)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_23 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }})
Gamma: 	
	(xret: $$object_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dwrit_23: $$boolean_type)
	(prim: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.160155
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }})
	(#dwrit_24 == $$f)
Gamma: 	
	(#dconf_24: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.160352
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }})
	(#dwrit_24 == $$f)
Gamma: 	
	(#dconf_24: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.160641
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }})
	(#dwrit_24 == $$f)
Gamma: 	
	(#dconf_24: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.160764
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }})
	(#dwrit_24 == $$f)
Gamma: 	
	(#dconf_24: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.160903
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }})
	(#dwrit_24 == $$f)
Gamma: 	
	(#dconf_24: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.161174
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }})
	(#dwrit_24 == $$f)
Gamma: 	
	(#dconf_24: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.162092
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }})
	(#dwrit_24 == $$f)
Gamma: 	
	(#dconf_24: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.162403
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }})
	(#dwrit_24 == $$f)
Gamma: 	
	(#dconf_24: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the THEN branch
----------------------------------
--8--
TIME: 7.162658
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#dval_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }})
	(#dwrit_24 == $$f)
Gamma: 	
	(#dconf_24: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
----------------------------------
--17--
TIME: 7.163701
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
	_$l_64 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_64)
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: _lvar_891)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_24 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }})
	(#dwrit_24 == $$f)
Gamma: 	
	(xret: $$object_type)
	(#dconf_24: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(rbase: $$object_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.164312
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.164398
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.164480
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.164526
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.164583
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.164690
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.165035
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.165178
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 7.165317
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: goto [(rbase = $lg)] 11 13
----------------------------------
in the THEN branch
----------------------------------
--11--
TIME: 7.165435
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
----------------------------------
--17--
TIME: 7.165817
STATE:
Heap: 
	_$l_65 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_65)
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: _lvar_897)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(xret: $$object_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.166164
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_25: $$boolean_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.166308
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_25: $$boolean_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.166478
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_25: $$boolean_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.166567
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_25: $$boolean_type)
	(rbase: $$object_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.166658
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dconf_25: $$boolean_type)
	(rbase: $$object_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.166841
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dconf_25: $$boolean_type)
	(rbase: $$object_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.167310
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dconf_25: $$boolean_type)
	(rbase: $$object_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.167534
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dconf_25: $$boolean_type)
	(rbase: $$object_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 7.167754
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dconf_25: $$boolean_type)
	(rbase: $$object_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $lg)] 11 13
----------------------------------
in the THEN branch
----------------------------------
--11--
TIME: 7.167972
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dconf_25: $$boolean_type)
	(rbase: $$object_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
----------------------------------
--17--
TIME: 7.168632
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
	_$l_66 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_66)
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: _lvar_900)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_25 == $$empty))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(xret: $$object_type)
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dconf_25: $$boolean_type)
	(rbase: $$object_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.169196
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.169361
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.169518
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.169618
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(rbase: $$object_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.169756
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(rbase: $$object_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.169958
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(rbase: $$object_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.170471
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(rbase: $$object_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.170724
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(rbase: $$object_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 7.173012
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(rbase: $$object_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $lg)] 11 13
----------------------------------
in the THEN branch
----------------------------------
--11--
TIME: 7.173260
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(rbase: $$object_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
I found the model: 

(define-fun |#dval_26| () Extended_JSIL_Literal
  (Set (_ as-array k!1534)))
(define-fun |#dwrit_26| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    1.0))
(define-fun k!1534 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType)))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
    0.0))
----------------------------------
--17--
TIME: 7.191035
STATE:
Heap: 
	_$l_67 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_67)
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: _lvar_905)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_26 == $$empty))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(xret: $$object_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(rbase: $$object_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.191745
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.191943
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.192116
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.192228
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.192490
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.192734
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.193303
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.193583
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 7.193873
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $lg)] 11 13
----------------------------------
in the THEN branch
----------------------------------
--11--
TIME: 7.194103
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(rbase: $lg)
Pure Formulae: 	
	(! (#dval_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
----------------------------------
--17--
TIME: 7.195133
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
	_$l_68 |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_68)
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: _lvar_910)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#dval_27 == $$empty))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(xret: $$object_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.195721
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.195835
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.195941
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.196000
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.196070
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.196235
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.196827
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.197036
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the THEN branch
----------------------------------
--8--
TIME: 7.197179
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
----------------------------------
--9--
TIME: 7.197951
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(#prop: $$string_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: goto 14
----------------------------------
----------------------------------
--14--
TIME: 7.198080
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(#prop: $$string_type)
	(rfield: $$string_type)
	(xret: $$empty_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: xret := $$empty
----------------------------------
----------------------------------
--15--
TIME: 7.198198
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(#prop: $$string_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.198644
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.198784
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.198916
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.199098
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.199185
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.199354
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.200058
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.200317
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the THEN branch
----------------------------------
--8--
TIME: 7.200500
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
----------------------------------
--9--
TIME: 7.201493
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(#tf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(rbase: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: goto 14
----------------------------------
----------------------------------
--14--
TIME: 7.201688
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(#tf: $$boolean_type)
	(rfield: $$string_type)
	(xret: $$empty_type)
	(prim: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(rbase: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: xret := $$empty
----------------------------------
----------------------------------
--15--
TIME: 7.201844
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(#tf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(rbase: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: skip
----------------------------------
I found the model: 

(define-fun |#lp| () Extended_JSIL_Literal
  (Elem (Loc 2)))
(define-fun |_$l_#l| () Extended_JSIL_Literal
  (Set (_ as-array k!1539)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 3)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Loc 2))) ObjectType
  (ite (= x!0 (Elem (String 3))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType)))))))
(define-fun k!1539 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.231885
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), $$undefined, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.232005
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), $$undefined, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.232116
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), $$undefined, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.233764
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), $$undefined, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.233871
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), $$undefined, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.234024
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), $$undefined, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.235001
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), $$undefined, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.235185
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), $$undefined, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 7.235363
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), $$undefined, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(rbase = $lg)] 11 13
----------------------------------
in the THEN branch
----------------------------------
--11--
TIME: 7.235530
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), $$undefined, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
----------------------------------
--12--
TIME: 7.236808
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: $lg)
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(#tf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#lltf: $$list_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(rbase: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ $lg }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: goto 14
----------------------------------
----------------------------------
--14--
TIME: 7.236954
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: $lg)
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(#tf: $$boolean_type)
	(rfield: $$string_type)
	(xret: $$empty_type)
	(prim: $$boolean_type)
	(#lltf: $$list_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(rbase: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ $lg }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: xret := $$empty
----------------------------------
----------------------------------
--15--
TIME: 7.237094
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: $lg)
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(#tf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#lltf: $$list_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(rbase: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ $lg }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: skip
----------------------------------
I found the model: 

(define-fun |#lp| () Extended_JSIL_Literal
  (Elem (Loc 2)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    1.0))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Loc 2))) ObjectType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
    0.0))
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.255338
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.255507
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.256273
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.256360
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.256448
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.256655
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.259015
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.259264
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the THEN branch
----------------------------------
--8--
TIME: 7.259456
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1551)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1550)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1550 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun k!1551 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1559)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1558)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1558 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun k!1559 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1567)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1566)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1566 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool false))) BooleanType
  (ite (= x!0 (Elem (Bool true))) BooleanType
    StringType))))))
(define-fun k!1567 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1575)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1574)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1574 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun k!1575 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1583)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1582)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1582 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun k!1583 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1591)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 2)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1590)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun k!1590 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Bool true))) BooleanType
  (ite (= x!0 (Elem (Bool false))) BooleanType
    StringType))))))
(define-fun k!1591 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
  (ite (= x!0 1.0) 1.0
    0.0))))
----------------------------------
--9--
TIME: 7.442344
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
Gamma: 	
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(#ext: $$boolean_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#denum: $$boolean_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: goto 14
----------------------------------
----------------------------------
--14--
TIME: 7.442523
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
Gamma: 	
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(rfield: $$string_type)
	(xret: $$empty_type)
	(prim: $$boolean_type)
	(#ext: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#denum: $$boolean_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: xret := $$empty
----------------------------------
----------------------------------
--15--
TIME: 7.442672
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
Gamma: 	
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(#ext: $$boolean_type)
	(prim: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#denum: $$boolean_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.443601
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.443721
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.443841
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.443911
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.443978
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.444154
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.444522
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.444694
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 7.444862
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto [(rbase = $lg)] 11 13
----------------------------------
in the THEN branch
----------------------------------
--11--
TIME: 7.445019
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1599)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1598)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    1.0))
(define-fun k!1598 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType)))))
(define-fun k!1599 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
    0.0))
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1607)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1606)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    1.0))
(define-fun k!1606 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType)))))
(define-fun k!1607 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
    0.0))
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1615)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1614)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool true)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    1.0))
(define-fun k!1614 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType)))))
(define-fun k!1615 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
    0.0))
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1622)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1623)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    1.0))
(define-fun k!1622 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType)))))
(define-fun k!1623 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
    0.0))
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1630)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1631)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    1.0))
(define-fun k!1630 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType)))))
(define-fun k!1631 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
    0.0))
I found the model: 

(define-fun |#dval| () Extended_JSIL_Literal
  (Set (_ as-array k!1638)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 2437)))
(define-fun |#w| () Extended_JSIL_Literal
  (Set (_ as-array k!1639)))
(define-fun |#ext| () Extended_JSIL_Literal
  (Elem (Bool false)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 2437.0) (= x!1 0.0)) 0.0
    1.0))
(define-fun k!1638 ((x!0 JSIL_Literal)) Bool
  true)
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (String 2437))) StringType
    BooleanType)))))
(define-fun k!1639 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
    0.0))
----------------------------------
--12--
TIME: 7.550184
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: $lg)
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
Gamma: 	
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(#ext: $$boolean_type)
	(prim: $$boolean_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#denum: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: goto 14
----------------------------------
----------------------------------
--14--
TIME: 7.550313
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: $lg)
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
Gamma: 	
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(rfield: $$string_type)
	(xret: $$empty_type)
	(prim: $$boolean_type)
	(#ext: $$boolean_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#denum: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: xret := $$empty
----------------------------------
----------------------------------
--15--
TIME: 7.550434
STATE:
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: $lg)
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
Gamma: 	
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(#ext: $$boolean_type)
	(prim: $$boolean_type)
	(rbase: $$object_type)
	(v: $$list_type)
	(#denum: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
CMD: skip
----------------------------------
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.555997
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.556184
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.556758
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.556872
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.557006
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.557263
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.558214
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.558457
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the THEN branch
----------------------------------
--8--
TIME: 7.558692
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(rbase: $$object_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
----------------------------------
--9--
TIME: 7.560168
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(#tf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(#dcconf: $$boolean_type)
	(prim: $$boolean_type)
	(#lltf: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(rbase: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: goto 14
----------------------------------
----------------------------------
--14--
TIME: 7.560372
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(#tf: $$boolean_type)
	(#dcconf: $$boolean_type)
	(rfield: $$string_type)
	(xret: $$empty_type)
	(prim: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(rbase: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: xret := $$empty
----------------------------------
----------------------------------
--15--
TIME: 7.560566
STATE:
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: _$l_#l)
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(#tf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(#dcconf: $$boolean_type)
	(prim: $$boolean_type)
	(#lltf: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(rbase: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: skip
----------------------------------
I found the model: 

(define-fun |#lp| () Extended_JSIL_Literal
  (Elem (Loc 2)))
(define-fun |_$l_#l| () Extended_JSIL_Literal
  (Set (_ as-array k!1644)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun |#cls| () Extended_JSIL_Literal
  (Elem (String 3)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1.0) (= x!1 0.0)) 1.0
  (ite (and (= x!0 5.0) (= x!1 4.0)) 24.0
  (ite (and (= x!0 5.0) (= x!1 3.0)) 13.0
  (ite (and (= x!0 5.0) (= x!1 0.0)) 25.0
  (ite (and (= x!0 4.0) (= x!1 5.0)) 15.0
  (ite (and (= x!0 4.0) (= x!1 4.0)) 11.0
  (ite (and (= x!0 4.0) (= x!1 3.0)) 12.0
  (ite (and (= x!0 4.0) (= x!1 1.0)) 17.0
  (ite (and (= x!0 4.0) (= x!1 0.0)) 23.0
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    20.0)))))))))))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Loc 2))) ObjectType
  (ite (= x!0 (Elem (String 3))) StringType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType)))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun k!1644 ((x!0 JSIL_Literal)) Bool
  false)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
  (ite (= x!0 5.0) 5.0
  (ite (= x!0 4.0) 6.0
    0.0))))
Verified one spec of proc i__putValue
----------------------------------
----------------------------------
Symbolic execution of i__putValue
----------------------------------
--0--
TIME: 7.588872
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(typeOf(v) = $$list_type)] 1 16
----------------------------------
in the THEN branch
----------------------------------
--1--
TIME: 7.589033
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [((l-nth(v, 0.) = "v") or (l-nth(v, 0.) = "o"))] 2 16
----------------------------------
in the THEN branch
----------------------------------
--2--
TIME: 7.589163
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: rbase := l-nth(v, 1.)
----------------------------------
----------------------------------
--3--
TIME: 7.589263
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: rfield := l-nth(v, 2.)
----------------------------------
----------------------------------
--4--
TIME: 7.589358
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(rbase = $$undefined)] 16 5
----------------------------------
in the ELSE branch
----------------------------------
--5--
TIME: 7.589729
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: prim := "i__isPrimitive"(rbase) 
----------------------------------
----------------------------------
--6--
TIME: 7.590139
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [prim] 18 7
----------------------------------
in the ELSE branch
----------------------------------
--7--
TIME: 7.590364
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(l-nth(v, 0.) = "o")] 8 10
----------------------------------
in the ELSE branch
----------------------------------
--10--
TIME: 7.590562
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: goto [(rbase = $lg)] 11 13
----------------------------------
in the THEN branch
----------------------------------
--11--
TIME: 7.590726
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(rfield: #prop)
	(prim: $$f)
	(w: #w)
	(rbase: $lg)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(rfield: $$string_type)
	(prim: $$boolean_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(rbase: $$object_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))
CMD: xret := "put"(rbase, rfield, w, $$t) with 17
----------------------------------
----------------------------------
--12--
TIME: 7.591965
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: $lg)
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(#tf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(#dcconf: $$boolean_type)
	(prim: $$boolean_type)
	(#lltf: $$list_type)
	(#throw: $$boolean_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(rbase: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ $lg }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: goto 14
----------------------------------
----------------------------------
--14--
TIME: 7.592134
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: $lg)
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(#tf: $$boolean_type)
	(#dcconf: $$boolean_type)
	(rfield: $$string_type)
	(xret: $$empty_type)
	(prim: $$boolean_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(rbase: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ $lg }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: xret := $$empty
----------------------------------
----------------------------------
--15--
TIME: 7.592355
STATE:
Heap: 
	$lg |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
	(rfield: #prop)
	(w: #w)
	(prim: $$f)
	(rbase: $lg)
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(#pcls: $$string_type)
	(#llpv: $$list_type)
	(#tf: $$boolean_type)
	(xret: $$empty_type)
	(rfield: $$string_type)
	(#dcconf: $$boolean_type)
	(prim: $$boolean_type)
	(#lltf: $$list_type)
	(#throw: $$boolean_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(rbase: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#ocls: $$list_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ $lg }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
CMD: skip
----------------------------------
I found the model: 

(define-fun |#lp| () Extended_JSIL_Literal
  (Elem (Loc 2)))
(define-fun |#prop| () Extended_JSIL_Literal
  (Elem (String 1236)))
(define-fun s-nth ((x!0 Real) (x!1 Real)) Real
  (ite (and (= x!0 1236.0) (= x!1 0.0)) 0.0
    1.0))
(define-fun typeof ((x!0 Extended_JSIL_Literal)) JSIL_Type
  (ite (= x!0 (Elem Undefined)) UndefinedType
  (ite (= x!0 (Elem Null)) NullType
  (ite (= x!0 (Elem Empty)) EmptyType
  (ite (= x!0 (Elem (Loc 2))) ObjectType
  (ite (= x!0 (Elem (String 1236))) StringType
    BooleanType))))))
(define-fun l-len ((x!0 JSIL_Literal_List)) Real
  0.0)
(define-fun s-len ((x!0 Real)) Real
  (ite (= x!0 1.0) 1.0
    0.0))
Verified one spec of proc i__putValue

Verified: 180.		Prunings: 2.

RESULTS
Proc copy_object  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(fields: #fields)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#f, 0.) == \"@\"))
	(! (#f == \"\"))
	(#fields == {{ #f }})
Gamma: 	
	(l: $$object_type)
	(#f: $$string_type)
	(#fields: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@proto\": $$null), (#f: #v), (default: None)]
	_$l_#l |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#f: $$string_type)
	(#fields: $$list_type)
Preds: 
;
 -- VERIFIED

Proc copy_object  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(fields: #fields)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#f1 == \"main\"))
	(! (s-nth(#f1, 0.) == \"@\"))
	(! (#f1 == \"\"))
	(#fields == {{ #f1, \"main\" }})
Gamma: 	
	(#f1: $$string_type)
	(l: $$object_type)
	(#fields: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@proto\": $$null), (\"main\": #v2), (#f1: #v1), (default: None)]
	_$l_#l |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
	(! (#f1 == \"main\"))
Gamma: 	
	(xret: $$object_type)
	(#f1: $$string_type)
	(#fields: $$list_type)
Preds: 
;
 -- VERIFIED

Proc copy_object_rec  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(fields: $$nil)
Pure Formulae: 	
Gamma: 	
	(fields: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #lt)
Pure Formulae: 	
Gamma: 	
Preds: 
;
 -- VERIFIED

Proc copy_object_rec  - Single Spec - normal

Precondition
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (#f: None), (default: $$unknown)]
	_$l_#lf |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(lf: _$l_#lf)
	(fields: #fields)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f, 0.) == \"@\"))
	(! (#f == \"\"))
	(#fields == {{ #f }})
Gamma: 	
	(lf: $$object_type)
	(#f: $$string_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (#f: #v), (default: $$unknown)]
	_$l_#lf |-> [(#f: #v), (default: $$unknown)]
Store: 	
	(xret: _$l_#lt)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#f: $$string_type)
	(#fields: $$list_type)
Preds: 
;
 -- VERIFIED

Proc copy_object_rec  - Single Spec - normal

Precondition
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (\"main\": None), (#f1: None), (default: $$unknown)]
	_$l_#lf |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(lf: _$l_#lf)
	(fields: #fields)
	(lt: _$l_#lt)
Pure Formulae: 	
	(! (s-nth(#f1, 0.) == \"@\"))
	(! (#f1 == \"\"))
	(#fields == {{ #f1, \"main\" }})
Gamma: 	
	(#f1: $$string_type)
	(lf: $$object_type)
	(#fields: $$list_type)
	(lt: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#lt |-> [(\"@proto\": $$null), (\"main\": #v2), (#f1: #v1), (default: $$unknown)]
	_$l_#lf |-> [(\"main\": #v2), (#f1: #v1), (default: $$unknown)]
Store: 	
	(xret: _$l_#lt)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#f1: $$string_type)
	(#fields: $$list_type)
Preds: 
;
 -- VERIFIED

Proc create_default_object  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(pr: #pr)
	(ext: $$undefined)
	(cl: $$undefined)
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#ext: $$undefined_type)
	(cl: $$undefined_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": #pr), (default: None)]
Store: 	
	(xret: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(xret: $$object_type)
	(#ext: $$undefined_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc create_default_object  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (\"@class\": #cl), (\"@proto\": #pr), (default: None)]
Store: 	
	(xret: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(#l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc create_default_object  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(pr: #pr)
	(ext: $$undefined)
	(cl: $$undefined)
	(l: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(ext: $$undefined_type)
	(#ext: $$undefined_type)
	(cl: $$undefined_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
	(l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": #pr), (default: None)]
Store: 	
	(xret: _$l_#l)
Pure Formulae: 	
	(#ext == $$undefined)
	(#cl == $$undefined)
Gamma: 	
	(xret: $$object_type)
	(#ext: $$undefined_type)
	(#l: $$object_type)
	(#cl: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc create_default_object  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(pr: #pr)
	(ext: #ext)
	(l: _$l_#l)
	(cl: #cl)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (\"@class\": #cl), (\"@proto\": #pr), (default: None)]
Store: 	
	(xret: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#ext: $$boolean_type)
	(#cl: $$string_type)
	(#l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc create_object_with_call_construct  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@proto\": $$null), (default: None)]
Store: 	
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@construct\": #construct), (\"@call\": #call), (\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: None)]
Store: 	
	(xret: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(#l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc create_object_with_call_construct  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(len: #len)
	(call: #call)
	(l: _$l_#l)
	(construct: $$empty)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(#l: $$object_type)
	(len: $$number_type)
	(call: $$string_type)
	(l: $$object_type)
	(#len: $$number_type)
	(construct: $$empty_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@call\": #call), (\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: None)]
Store: 	
	(xret: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc create_object_with_call_construct  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(default: None)]
Store: 	
	(l: _$l_#l)
	(construct: #construct)
	(len: #len)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@construct\": #construct), (\"@call\": #call), (\"length\": {{ \"d\", #len, $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: None)]
Store: 	
	(xret: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#construct: $$string_type)
	(#l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc create_function_object  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(xsc: #xsc)
	(construct: #construct)
	(params: #params)
	(call: #call)
Pure Formulae: 	
Gamma: 	
	(#call: $$string_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"prototype\": {{ \"d\", _$l_prototype, $$t, $$f, $$f }}), (\"arguments\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"caller\": {{ \"a\", $lthrow_type_error, $lthrow_type_error, $$f, $$f }}), (\"@construct\": #construct), (\"@call\": #call), (\"length\": {{ \"d\", (l-len #params), $$f, $$f, $$f }}), (\"@scope\": #xsc), (\"@extensible\": $$t), (\"@class\": \"Function\"), (\"@proto\": $lfun_proto), (default: None)]
	_$l_prototype |-> [(\"constructor\": {{ \"d\", _$l_xret, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Object\"), (\"@proto\": $lobj_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
	(prototype: _$l_prototype)
Pure Formulae: 	
	(#len == (l-len #params))
Gamma: 	
	(#call: $$string_type)
	(xret: $$object_type)
	(#len: $$number_type)
	(#params: $$list_type)
	(#construct: $$string_type)
	(#xsc: $$list_type)
	(prototype: $$object_type)
	(#l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc Error_construct  - Single Spec - normal

Precondition
Heap: 
	_$l_#vthis |-> [(\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(v: $$undefined)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(#vthis: $$object_type)
	(v: $$undefined_type)
	(vthis: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#vthis |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#vthis: $$object_type)
Preds: 
;
 -- VERIFIED

Proc Error_construct  - Single Spec - normal

Precondition
Heap: 
	_$l_#vthis |-> [(\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(v: #m)
	(vthis: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(#vthis: $$object_type)
	(#m: $$string_type)
	(vthis: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#vthis |-> [(\"message\": {{ \"d\", #m, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@class\": \"Error\"), (default: $$unknown)]
Store: 	
	(xret: _$l_#vthis)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#vthis: $$object_type)
	(#m: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: 0.)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toBoolean  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(! (#v == 0.))
Gamma: 	
	(#v: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v: $$number_type)
Preds: 
;
 -- VERIFIED

Proc TypeError_call  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc TypeError  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc ReferenceError_call  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc ReferenceError  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc SyntaxError_call  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lserr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc SyntaxError  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lserr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc setupInitialHeap  - Single Spec - normal

Precondition
Heap: 
	$lg |-> [(\"@extensible\": None), (\"@proto\": None), (\"@class\": None), (default: $$unknown)]
	$lerr |-> [(default: None)]
	$lfun_proto |-> [(default: None)]
	$lerr_proto |-> [(default: None)]
	$lobj_proto |-> [(default: None)]
Store: 	
Pure Formulae: 	
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	$lerr_proto |-> [(\"message\": {{ \"d\", \"\", $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@proto\": $lobj_proto), (\"@class\": \"Error\"), (default: None)]
	$lobj_proto |-> [(\"@extensible\": $$t), (\"@proto\": $$null), (\"@class\": \"Object\"), (default: None)]
	$lg |-> [(\"Error\": {{ \"d\", $lerr, $$t, $$f, $$t }}), (\"@extensible\": $$t), (\"@proto\": $lobj_proto), (\"@class\": \"Object\"), (default: $$unknown)]
	$lerr |-> [(\"prototype\": {{ \"d\", $lerr_proto, $$f, $$f, $$f }}), (\"@construct\": \"Error_construct\"), (\"@call\": \"Error_call\"), (\"length\": {{ \"d\", 1., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@proto\": $lfun_proto), (\"@class\": \"Function\"), (default: None)]
	$lfun_proto |-> [(\"@call\": \"FP_default\"), (\"length\": {{ \"d\", 0., $$f, $$f, $$f }}), (\"@scope\": $$empty), (\"@extensible\": $$t), (\"@proto\": $lobj_proto), (\"@class\": \"Function\"), (default: None)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
Preds: 
;
 -- VERIFIED

Proc i__strictEquality  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__strictEquality  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(_lvar_v: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(_lvar_v: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(_lvar_v: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(_lvar_v: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toNumber  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$t)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: 1.)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
Preds: 
;
 -- VERIFIED

Proc i__toNumber  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$f)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: 0.)
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
Preds: 
;
 -- VERIFIED

Proc i__toNumber  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
;
 -- VERIFIED

Proc i__toNumber  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: (string_to_num #v))
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__toPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc i__toPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$null_type)
Preds: 
;
 -- VERIFIED

Proc i__toPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
;
 -- VERIFIED

Proc i__toPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toPrimitive  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__abstractComparison  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 <# #v2)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
	(#v1 <# #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__abstractComparison  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__abstractComparison  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(leftFirst: #leftFirst)
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v2 <# #v1)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(#v2 <# #v1)
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
	(#leftFirst: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__abstractEquality  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v1: $$null)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$null_type)
	(v2: $$null_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__abstractEquality  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v1: _lvar_v1)
	(v2: $$null)
Pure Formulae: 	
Gamma: 	
	(v1: $$object_type)
	(v2: $$null_type)
	(_lvar_v2: $$null_type)
	(_lvar_v1: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toInteger  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: (num_to_int (string_to_num #v)))
Pure Formulae: 	
Gamma: 	
	(xret: $$number_type)
	(#v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__toString  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: (num_to_string #v))
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(#v: $$number_type)
Preds: 
;
 -- VERIFIED

Proc i__toString  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #v)
Pure Formulae: 	
Gamma: 	
	(xret: $$string_type)
	(#v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__isDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_18, #dwrit_18, #denum_18, #dconf_18 }})
Pure Formulae: 	
	(! (#dval_18 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(#dconf_18: $$boolean_type)
	(#denum_18: $$boolean_type)
	(#dwrit_18: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#dconf_18: $$boolean_type)
	(#denum_18: $$boolean_type)
	(#dwrit_18: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_5, #gconf_5, $$empty, $$empty, #gget_5, #gset_5 }})
Pure Formulae: 	
	(#gval_5 == $$empty)
	(#gwrit_5 == $$empty)
Gamma: 	
	(#gval_5: $$empty_type)
	(#gwrit_5: $$empty_type)
	(desc: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(#gval_5 == $$empty)
	(#gwrit_5 == $$empty)
Gamma: 	
	(#gval_5: $$empty_type)
	(xret: $$boolean_type)
	(#gwrit_5: $$empty_type)
Preds: 
;
 -- VERIFIED

Proc i__isDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_6, #gconf_6, #gval_6, #gwrit_6, #gget_6, #gset_6 }})
Pure Formulae: 	
	(! (#gval_6 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_7, #gconf_7, #gval_7, #gwrit_7, #gget_7, #gset_7 }})
Pure Formulae: 	
	(! (#gwrit_7 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isAccessorDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isAccessorDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_38, #dwrit_38, #denum_38, #dconf_38 }})
Pure Formulae: 	
	(! (#dval_38 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(#dconf_38: $$boolean_type)
	(#dwrit_38: $$boolean_type)
	(#denum_38: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#dconf_38: $$boolean_type)
	(#dwrit_38: $$boolean_type)
	(#denum_38: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isAccessorDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_8, #gconf_8, #gval_8, #gwrit_8, $$empty, $$empty }})
Pure Formulae: 	
	(#gset_8 == $$empty)
	(#gget_8 == $$empty)
Gamma: 	
	(#gset_8: $$empty_type)
	(desc: $$list_type)
	(#gget_8: $$empty_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(#gset_8 == $$empty)
	(#gget_8 == $$empty)
Gamma: 	
	(#gset_8: $$empty_type)
	(xret: $$boolean_type)
	(#gget_8: $$empty_type)
Preds: 
;
 -- VERIFIED

Proc i__isAccessorDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_9, #gconf_9, #gval_9, #gwrit_9, #gget_9, #gset_9 }})
Pure Formulae: 	
	(! (#gget_9 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isAccessorDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_10, #gconf_10, #gval_10, #gwrit_10, #gget_10, #gset_10 }})
Pure Formulae: 	
	(! (#gset_10 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isGenericDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: $$undefined)
Pure Formulae: 	
Gamma: 	
	(desc: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isGenericDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"d\", #dval_4, #dwrit_4, #denum_4, #dconf_4 }})
Pure Formulae: 	
	(! (#dval_4 == $$empty))
Gamma: 	
	(desc: $$list_type)
	(#dwrit_4: $$boolean_type)
	(#denum_4: $$boolean_type)
	(#dconf_4: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#dwrit_4: $$boolean_type)
	(#denum_4: $$boolean_type)
	(#dconf_4: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isGenericDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_0, #gconf_0, $$empty, $$empty, $$empty, $$empty }})
Pure Formulae: 	
	(#gset_0 == $$empty)
	(#gval_0 == $$empty)
	(#gwrit_0 == $$empty)
	(#gget_0 == $$empty)
Gamma: 	
	(#gwrit_0: $$empty_type)
	(#gset_0: $$empty_type)
	(desc: $$list_type)
	(#gval_0: $$empty_type)
	(#gget_0: $$empty_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
	(#gset_0 == $$empty)
	(#gval_0 == $$empty)
	(#gwrit_0 == $$empty)
	(#gget_0 == $$empty)
Gamma: 	
	(#gwrit_0: $$empty_type)
	(#gset_0: $$empty_type)
	(xret: $$boolean_type)
	(#gval_0: $$empty_type)
	(#gget_0: $$empty_type)
Preds: 
;
 -- VERIFIED

Proc i__isGenericDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_1, #gconf_1, #gval_1, #gwrit_1, #gget_1, #gset_1 }})
Pure Formulae: 	
	(! (#gval_1 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isGenericDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_2, #gconf_2, #gval_2, #gwrit_2, #gget_2, #gset_2 }})
Pure Formulae: 	
	(! (#gwrit_2 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isGenericDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_3, #gconf_3, #gval_3, #gwrit_3, #gget_3, #gset_3 }})
Pure Formulae: 	
	(! (#gget_3 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__isGenericDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: {{ \"g\", #genum_4, #gconf_4, #gval_4, #gwrit_4, #gget_4, #gset_4 }})
Pure Formulae: 	
	(! (#gset_4 == $$empty))
Gamma: 	
	(desc: $$list_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__toDataDescriptor  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(desc: #desc)
Pure Formulae: 	
	(! (#dval_8 == $$empty))
	(#desc == {{ \"d\", #dval_8, #dwrit_8, #denum_8, #dconf_8 }})
Gamma: 	
	(#desc: $$list_type)
	(#dwrit_8: $$boolean_type)
	(#dconf_8: $$boolean_type)
	(#denum_8: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #desc)
Pure Formulae: 	
Gamma: 	
	(#desc: $$list_type)
	(#dwrit_8: $$boolean_type)
	(#dconf_8: $$boolean_type)
	(#denum_8: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v1: $$undefined)
	(v2: $$undefined)
Pure Formulae: 	
	(#v2 == $$undefined)
	(#v1 == $$undefined)
Gamma: 	
	(#v1: $$undefined_type)
	(v1: $$undefined_type)
	(#v2: $$undefined_type)
	(v2: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
	(#v2 == $$undefined)
	(#v1 == $$undefined)
Gamma: 	
	(#v1: $$undefined_type)
	(xret: $$boolean_type)
	(#v2: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v1: $$null)
	(v2: $$null)
Pure Formulae: 	
	(#v2 == $$null)
	(#v1 == $$null)
Gamma: 	
	(#v1: $$null_type)
	(v1: $$null_type)
	(#v2: $$null_type)
	(v2: $$null_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
	(#v2 == $$null)
	(#v1 == $$null)
Gamma: 	
	(#v1: $$null_type)
	(xret: $$boolean_type)
	(#v2: $$null_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(#v1: $$boolean_type)
	(#v2: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$boolean_type)
	(#v2: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(#v1: $$string_type)
	(#v2: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$string_type)
	(#v2: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(#v1 == #v2)
Gamma: 	
	(#v1: $$object_type)
	(#v2: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$object_type)
	(#v2: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v1 == #v2))
Gamma: 	
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v2: #v2)
	(v1: #v1)
Pure Formulae: 	
	(! (#v2 == 0.))
	(#v1 == #v2)
Gamma: 	
	(#v1: $$number_type)
	(#v2: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v1: $$number_type)
	(#v2: $$number_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v2: 0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v2: -0.)
	(v1: 0.)
Pure Formulae: 	
Gamma: 	
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v2: 0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__sameValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v2: -0.)
	(v1: -0.)
Pure Formulae: 	
Gamma: 	
	(v2: $$number_type)
	(v1: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__checkAssignmentErrors  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__checkAssignmentErrors  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__checkAssignmentErrors  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(_lvar_v: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__checkAssignmentErrors  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(_lvar_v: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__checkAssignmentErrors  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(_lvar_v: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__checkAssignmentErrors  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(_lvar_v: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__checkAssignmentErrors  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(! (#prop == \"arguments\"))
	(! (#prop == \"eval\"))
	(#v == {{ \"v\", #l, #prop }})
Gamma: 	
	(#v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__checkAssignmentErrors  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"eval\" }})
Gamma: 	
	(#v: $$list_type)
	(#l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lserr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#v: $$list_type)
	(#l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__checkAssignmentErrors  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(#v == {{ \"v\", #l, \"arguments\" }})
Gamma: 	
	(#v: $$list_type)
	(#l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lserr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#v: $$list_type)
	(#l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__checkAssignmentErrors  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
	(#v == {{ \"o\", #base, #field }})
Gamma: 	
	(#base: $$object_type)
	(#v: $$list_type)
	(#field: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#base: $$object_type)
	(#v: $$list_type)
	(#field: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__checkObjectCoercible  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__checkObjectCoercible  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__checkObjectCoercible  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(_lvar_v: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
Preds: 
;
 -- VERIFIED

Proc i__checkObjectCoercible  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(_lvar_v: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
Preds: 
;
 -- VERIFIED

Proc i__checkObjectCoercible  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(_lvar_v: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
Preds: 
;
 -- VERIFIED

Proc i__checkObjectCoercible  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(_lvar_v: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
Preds: 
;
 -- VERIFIED

Proc i__isCallable  - Single Spec - normal

Precondition
Heap: 
	_$l_l |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(l: _$l_l)
Pure Formulae: 	
Gamma: 	
	(l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_l |-> [(\"@call\": None), (default: $$unknown)]
Store: 	
	(xret: $$f)
	(l: _$l_l)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__isCallable  - Single Spec - normal

Precondition
Heap: 
	_$l_l |-> [(\"@call\": #y), (default: $$unknown)]
Store: 	
	(l: _$l_l)
Pure Formulae: 	
	(! (#y == None))
Gamma: 	
	(l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_l |-> [(\"@call\": #y), (default: $$unknown)]
Store: 	
	(xret: $$t)
	(l: _$l_l)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc o__getOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: None), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(xret: $$undefined_type)
	(#l: $$object_type)
Preds: 
;
 -- VERIFIED

Proc o__getOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_34, #dwrit_3_34, #denum_3_34, #dconf_3_34 }}), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_34 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_34, #dwrit_3_34, #denum_3_34, #dconf_3_34 }})
Gamma: 	
	(#prop: $$string_type)
	(#dconf_3_34: $$boolean_type)
	(#dwrit_3_34: $$boolean_type)
	(l: $$object_type)
	(#dx: $$list_type)
	(#l: $$object_type)
	(#denum_3_34: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: None), (default: $$unknown)]
Store: 	
	(xret: None)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == None)
Gamma: 	
	(#dx: $$none_type)
	(#dwrit_3_34: $$boolean_type)
	(#prop: $$string_type)
	(xret: $$none_type)
	(#l: $$object_type)
	(#dconf_3_34: $$boolean_type)
	(#denum_3_34: $$boolean_type)
Preds: 
;
Post 1: 
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_35, #dwrit_3_35, #denum_3_35, #dconf_3_35 }}), (default: $$unknown)]
Store: 	
	(xret: #dx)
Pure Formulae: 	
	(! (#dval_3_35 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_35, #dwrit_3_35, #denum_3_35, #dconf_3_35 }})
Gamma: 	
	(#dwrit_3_35: $$boolean_type)
	(#prop: $$string_type)
	(#dconf_3_34: $$boolean_type)
	(#dwrit_3_34: $$boolean_type)
	(#dconf_3_35: $$boolean_type)
	(#denum_3_35: $$boolean_type)
	(#dx: $$list_type)
	(#l: $$object_type)
	(#denum_3_34: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc getOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: None), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: None), (default: $$unknown)]
Store: 	
	(xret: $$undefined)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#prop: $$string_type)
	(xret: $$undefined_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc getOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: {{ \"d\", #dval_3_2, #dwrit_3_2, #denum_3_2, #dconf_3_2 }}), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_2 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_2, #dwrit_3_2, #denum_3_2, #dconf_3_2 }})
Gamma: 	
	(#dwrit_3_2: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_2: $$boolean_type)
	(#dconf_3_2: $$boolean_type)
	(l: $$object_type)
	(#dx: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: None), (default: $$unknown)]
Store: 	
	(xret: None)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == None)
Gamma: 	
	(#dx: $$none_type)
	(#prop: $$string_type)
	(#dwrit_3_2: $$boolean_type)
	(xret: $$none_type)
	(#denum_3_2: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_2: $$boolean_type)
Preds: 
;
Post 1: 
Heap: 
	_$l_#l |-> [(\"@class\": #cls), (#prop: {{ \"d\", #dval_3_3, #dwrit_3_3, #denum_3_3, #dconf_3_3 }}), (default: $$unknown)]
Store: 	
	(xret: #dx)
Pure Formulae: 	
	(! (#cls == \"String\"))
	(! (#dval_3_3 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dx == {{ \"d\", #dval_3_3, #dwrit_3_3, #denum_3_3, #dconf_3_3 }})
Gamma: 	
	(#dwrit_3_2: $$boolean_type)
	(#dwrit_3_3: $$boolean_type)
	(#dconf_3_3: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_2: $$boolean_type)
	(#dconf_3_2: $$boolean_type)
	(#dx: $$list_type)
	(#denum_3_3: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc getProperty  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #gp_aux_0, #gp_aux_1, #gp_aux_2, #gp_aux_3, #gp_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #gp_aux_1)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #gp_aux_0, #gp_aux_1, #gp_aux_2, #gp_aux_3, #gp_aux_4)
;
 -- VERIFIED

Proc get  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(! (#dval_28 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }})
Gamma: 	
	(#dwrit_28: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_28: $$boolean_type)
	(#l: $$object_type)
	(#denum_28: $$boolean_type)
Preds: Pi(#l, #prop, #g_aux_0, {{ \"d\", #dval_28, #dwrit_28, #denum_28, #dconf_28 }}, #g_aux_2, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #desc_val)
Pure Formulae: 	
	(#desc_val == l-nth(#g_aux_1, 1.))
Gamma: 	
	(#dwrit_28: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_28: $$boolean_type)
	(#l: $$object_type)
	(#denum_28: $$boolean_type)
Preds: Pi(#l, #prop, #g_aux_0, #g_aux_1, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc get  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(#g_aux_1 == $$undefined)
Gamma: 	
	(#prop: $$string_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$undefined)
Pure Formulae: 	
	(#g_aux_1 == $$undefined)
Gamma: 	
	(#prop: $$string_type)
	(xret: $$undefined_type)
	(#l: $$object_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__getValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (#dval_39 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, {{ \"d\", #dval_39, #dwrit_39, #denum_39, #dconf_39 }}, #g_aux_2, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #desc_val)
Pure Formulae: 	
	(#desc_val == l-nth(#g_aux_1, 1.))
Gamma: 	
	(#dconf_39: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#dwrit_39: $$boolean_type)
	(#denum_39: $$boolean_type)
Preds: Pi(#obj, #field, #g_aux_0, #g_aux_1, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__getValue  - Single Spec - normal

Precondition
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#obj |-> [(#field: #value), (default: $$unknown)]
Store: 	
	(xret: #value)
Pure Formulae: 	
Gamma: 	
	(#obj: $$object_type)
	(#field: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__getValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (#dval_40 == $$empty))
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }})
Gamma: 	
	(#denum_40: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, {{ \"d\", #dval_40, #dwrit_40, #denum_40, #dconf_40 }}, #g_aux_2, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #desc_val)
Pure Formulae: 	
	(#desc_val == l-nth(#g_aux_1, 1.))
Gamma: 	
	(#denum_40: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#dconf_40: $$boolean_type)
	(#field: $$string_type)
	(#dwrit_40: $$boolean_type)
Preds: Pi($lg, #field, #g_aux_0, #g_aux_1, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__getValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: {{ \"o\", #obj, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(#obj: $$object_type)
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$undefined)
Pure Formulae: 	
	(#g_aux_1 == $$undefined)
Gamma: 	
	(xret: $$undefined_type)
	(#obj: $$object_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi(#obj, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__getValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: {{ \"v\", $lg, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(#g_aux_1 == $$undefined)
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$undefined)
Pure Formulae: 	
	(#g_aux_1 == $$undefined)
Gamma: 	
	(xret: $$undefined_type)
	(#field: $$string_type)
	(#g_aux_1: $$undefined_type)
Preds: Pi($lg, #field, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__getValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$null)
Pure Formulae: 	
Gamma: 	
	(xret: $$null_type)
Preds: 
;
 -- VERIFIED

Proc i__getValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__getValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$number_type)
Preds: 
;
 -- VERIFIED

Proc i__getValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc i__getValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #v)
Pure Formulae: 	
Gamma: 	
	(#v: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__getValue  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$undefined)
Pure Formulae: 	
Gamma: 	
	(xret: $$undefined_type)
Preds: 
;
 -- VERIFIED

Proc i__getValue  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(v: {{ \"o\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#field: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__getValue  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(v: {{ \"v\", $$undefined, #field }})
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
Gamma: 	
	(v: $$list_type)
	(#field: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#field: $$string_type)
Preds: 
;
 -- VERIFIED

Proc hasProperty  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #gp_aux_0, #gp_aux_1, #gp_aux_2, #gp_aux_3, #gp_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: (not (#gp_aux_1 = $$undefined)))
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #gp_aux_0, #gp_aux_1, #gp_aux_2, #gp_aux_3, #gp_aux_4)
;
 -- VERIFIED

Proc deleteProperty  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(#desc == $$undefined)
Gamma: 	
	(#prop: $$string_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#desc: $$undefined_type)
Preds: Pi(#l, #prop, #clsx, $$undefined, #gp_aux_2, #gp_aux_3, #gp_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
	(#desc == $$undefined)
Gamma: 	
	(#prop: $$string_type)
	(xret: $$boolean_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#desc: $$undefined_type)
Preds: Pi(#l, #prop, #clsx, $$undefined, #gp_aux_2, #gp_aux_3, #gp_aux_4)
;
 -- VERIFIED

Proc deleteProperty  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(! (#dval_5 == $$empty))
	(#dconf_5 == $$t)
	(#desc == {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }})
Gamma: 	
	(#dconf_5: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_5: $$boolean_type)
	(#denum_5: $$boolean_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #clsx, {{ \"d\", #dval_5, #dwrit_5, #denum_5, $$t }}, {{ #l }}, #gp_aux_3, #gp_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#dconf_5: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(#dwrit_5: $$boolean_type)
	(#denum_5: $$boolean_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #clsx, #desc, {{ #l }}, #gp_aux_3, #gp_aux_4)
;
 -- VERIFIED

Proc deleteProperty  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(throw: $$t)
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(! (#dval_6 == $$empty))
	(#desc == {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }})
	(#dconf_6 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(#dwrit_6: $$boolean_type)
	(#denum_6: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#dconf_6: $$boolean_type)
Preds: Pi(#l, #prop, #clsx, {{ \"d\", #dval_6, #dwrit_6, #denum_6, $$f }}, {{ #l }}, #gp_aux_3, #gp_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(#dwrit_6: $$boolean_type)
	(#denum_6: $$boolean_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#dconf_6: $$boolean_type)
Preds: Pi(#l, #prop, #clsx, #desc, {{ #l }}, #gp_aux_3, #gp_aux_4)
;
 -- VERIFIED

Proc deleteProperty  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(throw: $$f)
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(! (#dval_7 == $$empty))
	(#desc == {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }})
	(#dconf_7 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(#dwrit_7: $$boolean_type)
	(#denum_7: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#dconf_7: $$boolean_type)
Preds: Pi(#l, #prop, #clsx, {{ \"d\", #dval_7, #dwrit_7, #denum_7, $$f }}, {{ #l }}, #gp_aux_3, #gp_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(#dwrit_7: $$boolean_type)
	(#denum_7: $$boolean_type)
	(#clsx: $$list_type)
	(#l: $$object_type)
	(#dconf_7: $$boolean_type)
Preds: Pi(#l, #prop, #clsx, #desc, {{ #l }}, #gp_aux_3, #gp_aux_4)
;
 -- VERIFIED

Proc canPut  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
	(l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: #ext)
Pure Formulae: 	
Gamma: 	
	(#ext: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc canPut  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
	(! (#dval_41 == $$empty))
	(#writ == #dwrit_41)
	(#g_aux_1 == {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }})
Gamma: 	
	(#writ: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#dconf_41: $$boolean_type)
	(#dwrit_41: $$boolean_type)
	(#denum_41: $$boolean_type)
Preds: Pi(#l, #prop, #g_aux_0, {{ \"d\", #dval_41, #dwrit_41, #denum_41, #dconf_41 }}, {{ #l }}, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: #writ)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#writ: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#dconf_41: $$boolean_type)
	(#dwrit_41: $$boolean_type)
	(#denum_41: $$boolean_type)
Preds: Pi(#l, #prop, #g_aux_0, #g_aux_1, {{ #l }}, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc canPut  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_42 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }})
Gamma: 	
	(#dconf_42: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#dwrit_42: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#denum_42: $$boolean_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_42, #dwrit_42, #denum_42, #dconf_42 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: $$f)
Pure Formulae: 	
Gamma: 	
	(#dconf_42: $$boolean_type)
	(xret: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#dwrit_42: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#denum_42: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, #g_aux_1, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc canPut  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_43 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#writ == #dwrit_43)
	(#g_aux_1 == {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }})
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dwrit_43: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#writ: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#dconf_43: $$boolean_type)
	(l: $$object_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_43, #dwrit_43, #denum_43, #dconf_43 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(xret: #writ)
Pure Formulae: 	
Gamma: 	
	(#denum_43: $$boolean_type)
	(#dwrit_43: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#writ: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#dconf_43: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, #g_aux_1, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
	_$l_xerr |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xerr: _$l_xerr)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(#desc: $$list_type)
	(#prop: $$string_type)
	(xerr: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(#desc == {{ \"d\", #dval_29, #dwrit_29, #denum_29, #dconf_29 }})
Gamma: 	
	(#desc: $$list_type)
	(#dconf_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_29: $$boolean_type)
	(l: $$object_type)
	(#denum_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (#prop: #desc), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#desc: $$list_type)
	(#dconf_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_29: $$boolean_type)
	(#denum_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (#prop: {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }}), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_30 == $$empty))
	(#dconf_3_23 == $$t)
	(#desc == {{ \"d\", #dval_30, #dwrit_30, #denum_30, #dconf_30 }})
	(#dcur == {{ \"d\", #dval_3_23, #dwrit_3_23, #denum_3_23, $$t }})
Gamma: 	
	(#ext: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(l: $$object_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (#prop: #desc), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_3_23: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#denum_30: $$boolean_type)
	(#prop: $$string_type)
	(#denum_3_23: $$boolean_type)
	(#dwrit_3_23: $$boolean_type)
	(#dconf_30: $$boolean_type)
	(#dwrit_30: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_31 == $$empty))
	(#dconf_3_24 == $$f)
	(#desc == {{ \"d\", #dval_31, #dwrit_31, #denum_31, $$t }})
	(#dcur == {{ \"d\", #dval_3_24, #dwrit_3_24, #denum_3_24, $$f }})
	(#dconf_31 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(l: $$object_type)
	(#denum_3_24: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
	_$l_xerr |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xerr: _$l_xerr)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(xerr: $$object_type)
	(#dwrit_31: $$boolean_type)
	(#denum_31: $$boolean_type)
	(#dconf_31: $$boolean_type)
	(#dconf_3_24: $$boolean_type)
	(#denum_3_24: $$boolean_type)
	(#dwrit_3_24: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_32 == $$empty))
	(#dconf_3_25 == $$f)
	(#desc == {{ \"d\", #dval_32, #dwrit_32, #denum_32, $$t }})
	(#dcur == {{ \"d\", #dval_3_25, #dwrit_3_25, #denum_3_25, $$f }})
	(#dconf_32 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_3_25: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_32: $$boolean_type)
	(#prop: $$string_type)
	(#denum_32: $$boolean_type)
	(#dwrit_3_25: $$boolean_type)
	(#denum_3_25: $$boolean_type)
	(#dwrit_32: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#denum_33 == #denum_3_26))
	(! (#dval_33 == $$empty))
	(#desc == {{ \"d\", #dval_33, #dwrit_33, #denum_33, $$f }})
	(#dcur == {{ \"d\", #dval_3_26, #dwrit_3_26, #denum_3_26, $$f }})
	(#ed == #denum_33)
	(#dconf_3_26 == $$f)
	(#ec == #denum_3_26)
	(#dconf_33 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(#denum_33: $$boolean_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
	_$l_xerr |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xerr: _$l_xerr)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(#ext: $$boolean_type)
	(#dwrit_33: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(xerr: $$object_type)
	(#dconf_3_26: $$boolean_type)
	(#ec: $$boolean_type)
	(#denum_33: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#denum_3_26: $$boolean_type)
	(#cls: $$string_type)
	(#dwrit_3_26: $$boolean_type)
	(#ed: $$boolean_type)
	(#dconf_33: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#denum_34 == #denum_3_27))
	(! (#dval_34 == $$empty))
	(#dconf_3_27 == $$f)
	(#desc == {{ \"d\", #dval_34, #dwrit_34, #denum_34, $$f }})
	(#dcur == {{ \"d\", #dval_3_27, #dwrit_3_27, #denum_3_27, $$f }})
	(#dconf_34 == $$f)
	(#ed == #denum_34)
	(#ec == #denum_3_27)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(#dconf_3_27: $$boolean_type)
	(l: $$object_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#denum_34: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dwrit_34: $$boolean_type)
	(#prop: $$string_type)
	(#ec: $$boolean_type)
	(#dconf_3_27: $$boolean_type)
	(#denum_3_27: $$boolean_type)
	(#dwrit_3_27: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_34: $$boolean_type)
	(#ed: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_28 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_35 == $$empty))
	(#dwrit_3_28 == $$f)
	(#denum_3_28 == #denum_35)
	(#desc == {{ \"d\", #dval_35, $$t, #denum_35, $$f }})
	(#dcur == {{ \"d\", #dval_3_28, $$f, #denum_35, $$f }})
	(#enum == #denum_35)
	(#dconf_35 == $$f)
	(#dconf_3_28 == $$f)
	(#dwrit_35 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_35: $$boolean_type)
	(l: $$object_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
	_$l_xerr |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
Store: 	
	(xerr: _$l_xerr)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(#ext: $$boolean_type)
	(#dwrit_3_28: $$boolean_type)
	(#denum_3_28: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(xerr: $$object_type)
	(#dconf_35: $$boolean_type)
	(#denum_35: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_28: $$boolean_type)
	(#dwrit_35: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_29 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_36 == $$empty))
	(#dconf_36 == $$f)
	(#denum_3_29 == #denum_36)
	(#desc == {{ \"d\", #dval_36, $$t, #denum_36, $$f }})
	(#dcur == {{ \"d\", #dval_3_29, $$f, #denum_36, $$f }})
	(#dconf_3_29 == $$f)
	(#enum == #denum_36)
	(#dwrit_3_29 == $$f)
	(#dwrit_36 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(l: $$object_type)
	(#denum_36: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_29: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_36: $$boolean_type)
	(#dconf_36: $$boolean_type)
	(#denum_3_29: $$boolean_type)
	(#denum_36: $$boolean_type)
	(#enum: $$boolean_type)
	(#dwrit_3_29: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_30 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#dval_37 == $$empty))
	(#dconf_37 == $$f)
	(#desc == {{ \"d\", #dval_37, #dwrit_37, #denum_37, $$f }})
	(#dcur == {{ \"d\", #dval_3_30, $$t, #denum_37, $$f }})
	(#enum == #denum_37)
	(#denum_3_30 == #denum_37)
	(#dwrit_3_30 == $$t)
	(#dconf_3_30 == $$f)
Gamma: 	
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(l: $$object_type)
	(#dconf_37: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: #desc), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_30: $$boolean_type)
	(#denum_37: $$boolean_type)
	(#dconf_37: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_3_30: $$boolean_type)
	(#dwrit_37: $$boolean_type)
	(#dconf_3_30: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc o__defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_31 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#gval == $$empty))
	(#dwrit_3_31 == $$t)
	(#dec == #denum_3_31)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_31, $$t, #denum_3_31, #dconf_3_31 }})
	(#dcc == #dconf_3_31)
Gamma: 	
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dec: $$boolean_type)
	(l: $$object_type)
	(#denum_3_31: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_31: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #gval, $$t, #dec, #dcc }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dwrit_3_31: $$boolean_type)
	(#dec: $$boolean_type)
	(#denum_3_31: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_31: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$object_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
Gamma: 	
	(throw: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#desc: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (#prop: None), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_9 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(#desc == {{ \"d\", #dval_9, #dwrit_9, #denum_9, #dconf_9 }})
Gamma: 	
	(#desc: $$list_type)
	(#dwrit_9: $$boolean_type)
	(#prop: $$string_type)
	(#denum_9: $$boolean_type)
	(l: $$object_type)
	(#dconf_9: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (#prop: #desc), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#desc: $$list_type)
	(#dwrit_9: $$boolean_type)
	(#prop: $$string_type)
	(#denum_9: $$boolean_type)
	(#dconf_9: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (#prop: {{ \"d\", #dval_3_9, #dwrit_3_9, #denum_3_9, $$t }}), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_9 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_10 == $$empty))
	(#desc == {{ \"d\", #dval_10, #dwrit_10, #denum_10, #dconf_10 }})
	(#dcur == {{ \"d\", #dval_3_9, #dwrit_3_9, #denum_3_9, $$t }})
	(#dconf_3_9 == $$t)
Gamma: 	
	(#dwrit_10: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_10: $$boolean_type)
	(#denum_3_9: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_9: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_3_9: $$boolean_type)
	(#denum_10: $$boolean_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (#prop: #desc), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(#dwrit_10: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_10: $$boolean_type)
	(#denum_3_9: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#dconf_3_9: $$boolean_type)
	(#prop: $$string_type)
	(#dwrit_3_9: $$boolean_type)
	(#denum_10: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_10, #dwrit_3_10, #denum_3_10, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_10 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_11 == $$empty))
	(#dconf_11 == $$t)
	(#desc == {{ \"d\", #dval_11, #dwrit_11, #denum_11, $$t }})
	(#dcur == {{ \"d\", #dval_3_10, #dwrit_3_10, #denum_3_10, $$f }})
	(#dconf_3_10 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_11: $$boolean_type)
	(l: $$object_type)
	(#dwrit_3_10: $$boolean_type)
	(#denum_11: $$boolean_type)
	(#denum_3_10: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_11: $$boolean_type)
	(#dconf_3_10: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$object_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_11: $$boolean_type)
	(#dwrit_3_10: $$boolean_type)
	(#denum_11: $$boolean_type)
	(#denum_3_10: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_11: $$boolean_type)
	(#dconf_3_10: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_11, #dwrit_3_11, #denum_3_11, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_11 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"String\"))
	(! (#cls == \"Array\"))
	(! (#dval_12 == $$empty))
	(#dconf_3_11 == $$f)
	(#desc == {{ \"d\", #dval_12, #dwrit_12, #denum_12, $$t }})
	(#dcur == {{ \"d\", #dval_3_11, #dwrit_3_11, #denum_3_11, $$f }})
	(#dconf_12 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_11: $$boolean_type)
	(#dconf_12: $$boolean_type)
	(#dwrit_3_11: $$boolean_type)
	(#dwrit_12: $$boolean_type)
	(l: $$object_type)
	(#dconf_3_11: $$boolean_type)
	(#denum_12: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_11: $$boolean_type)
	(#dconf_12: $$boolean_type)
	(#dwrit_3_11: $$boolean_type)
	(#dwrit_12: $$boolean_type)
	(#dconf_3_11: $$boolean_type)
	(#denum_12: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_12, #dwrit_3_12, #denum_3_12, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_12 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#denum_13 == #denum_3_12))
	(! (#dval_13 == $$empty))
	(#dconf_3_12 == $$f)
	(#desc == {{ \"d\", #dval_13, #dwrit_13, #denum_13, $$f }})
	(#dcur == {{ \"d\", #dval_3_12, #dwrit_3_12, #denum_3_12, $$f }})
	(#dconf_13 == $$f)
	(#ed == #denum_13)
	(#ec == #denum_3_12)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#dconf_3_12: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_12: $$boolean_type)
	(#ec: $$boolean_type)
	(l: $$object_type)
	(#dconf_13: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_3_12: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_13: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$object_type)
	(#ext: $$boolean_type)
	(#dconf_3_12: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_12: $$boolean_type)
	(#ec: $$boolean_type)
	(#dconf_13: $$boolean_type)
	(#throw: $$boolean_type)
	(#dwrit_3_12: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_13: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_13, #dwrit_3_13, #denum_3_13, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_13 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#denum_14 == #denum_3_13))
	(! (#dval_14 == $$empty))
	(#desc == {{ \"d\", #dval_14, #dwrit_14, #denum_14, $$f }})
	(#dcur == {{ \"d\", #dval_3_13, #dwrit_3_13, #denum_3_13, $$f }})
	(#dconf_14 == $$f)
	(#dconf_3_13 == $$f)
	(#ed == #denum_14)
	(#ec == #denum_3_13)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_13: $$boolean_type)
	(#dwrit_14: $$boolean_type)
	(#ec: $$boolean_type)
	(l: $$object_type)
	(#denum_14: $$boolean_type)
	(#dconf_14: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_3_13: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#denum_3_13: $$boolean_type)
	(#dwrit_14: $$boolean_type)
	(#ec: $$boolean_type)
	(#denum_14: $$boolean_type)
	(#dconf_14: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dconf_3_13: $$boolean_type)
	(#ed: $$boolean_type)
	(#dwrit_3_13: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_14, $$f, #denum_15, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_14 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_15 == $$empty))
	(#dwrit_3_14 == $$f)
	(#desc == {{ \"d\", #dval_15, $$t, #denum_15, $$f }})
	(#dcur == {{ \"d\", #dval_3_14, $$f, #denum_15, $$f }})
	(#denum_3_14 == #denum_15)
	(#enum == #denum_15)
	(#dconf_15 == $$f)
	(#dconf_3_14 == $$f)
	(#dwrit_15 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_15: $$boolean_type)
	(#dconf_3_14: $$boolean_type)
	(#dwrit_15: $$boolean_type)
	(#dwrit_3_14: $$boolean_type)
	(l: $$object_type)
	(#denum_15: $$boolean_type)
	(#denum_3_14: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$object_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dconf_15: $$boolean_type)
	(#dconf_3_14: $$boolean_type)
	(#dwrit_15: $$boolean_type)
	(#dwrit_3_14: $$boolean_type)
	(#denum_15: $$boolean_type)
	(#denum_3_14: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_15, $$f, #denum_16, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_15 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_16 == $$empty))
	(#dconf_3_15 == $$f)
	(#dconf_16 == $$f)
	(#desc == {{ \"d\", #dval_16, $$t, #denum_16, $$f }})
	(#dcur == {{ \"d\", #dval_3_15, $$f, #denum_16, $$f }})
	(#denum_3_15 == #denum_16)
	(#dwrit_3_15 == $$f)
	(#enum == #denum_16)
	(#dwrit_16 == $$t)
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_15: $$boolean_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_15: $$boolean_type)
	(#dwrit_16: $$boolean_type)
	(#dconf_3_15: $$boolean_type)
	(#denum_16: $$boolean_type)
	(l: $$object_type)
	(#dconf_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: #dcur), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$f)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#denum_3_15: $$boolean_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_3_15: $$boolean_type)
	(#dwrit_16: $$boolean_type)
	(#dconf_3_15: $$boolean_type)
	(#denum_16: $$boolean_type)
	(#dconf_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_16, $$t, #denum_17, $$f }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: $$f)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_16 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#dval_17 == $$empty))
	(#denum_3_16 == #denum_17)
	(#desc == {{ \"d\", #dval_17, #dwrit_17, #denum_17, $$f }})
	(#dcur == {{ \"d\", #dval_3_16, $$t, #denum_17, $$f }})
	(#dwrit_3_16 == $$t)
	(#enum == #denum_17)
	(#dconf_3_16 == $$f)
	(#dconf_17 == $$f)
Gamma: 	
	(#denum_3_16: $$boolean_type)
	(throw: $$boolean_type)
	(#denum_17: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_17: $$boolean_type)
	(#dconf_3_16: $$boolean_type)
	(#dconf_17: $$boolean_type)
	(l: $$object_type)
	(#dwrit_3_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: #desc), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$t)
Pure Formulae: 	
	(! (#cls == \"String\"))
Gamma: 	
	(#denum_3_16: $$boolean_type)
	(#denum_17: $$boolean_type)
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dwrit_17: $$boolean_type)
	(#dconf_3_16: $$boolean_type)
	(#dconf_17: $$boolean_type)
	(#dwrit_3_16: $$boolean_type)
	(#enum: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: 
;
 -- VERIFIED

Proc defineOwnProperty  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #dval_3_17, $$t, #denum_3_17, #dconf_3_17 }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(desc: #desc)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_3_17 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#gval == $$empty))
	(#dec == #denum_3_17)
	(#desc == {{ \"g\", $$empty, $$empty, #gval, $$empty, $$empty, $$empty }})
	(#dcur == {{ \"d\", #dval_3_17, $$t, #denum_3_17, #dconf_3_17 }})
	(#dcc == #dconf_3_17)
	(#dwrit_3_17 == $$t)
Gamma: 	
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(l: $$object_type)
	(#denum_3_17: $$boolean_type)
	(#dconf_3_17: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_3_17: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(#prop: {{ \"d\", #gval, $$t, #dec, #dcc }}), (\"@extensible\": #ext), (\"@class\": #cls), (default: $$unknown)]
Store: 	
	(xret: $$t)
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#ext: $$boolean_type)
	(#desc: $$list_type)
	(#dcur: $$list_type)
	(#prop: $$string_type)
	(#dcc: $$boolean_type)
	(#dec: $$boolean_type)
	(#denum_3_17: $$boolean_type)
	(#dconf_3_17: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#dwrit_3_17: $$boolean_type)
Preds: 
;
 -- VERIFIED

Proc put  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
Gamma: 	
	(throw: $$boolean_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#prop: $$string_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, $$undefined, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc put  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_19 == $$empty))
	(#g_aux_1 == {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }})
	(#dwrit_19 == $$f)
Gamma: 	
	(throw: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_19: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dwrit_19: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#dconf_19: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_19, $$f, #denum_19, #dconf_19 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_19: $$boolean_type)
	(#dwrit_19: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#dconf_19: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, #g_aux_1, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc put  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_20 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }})
Gamma: 	
	(throw: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_20: $$boolean_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_20: $$boolean_type)
	(#denum_20: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_20, #dwrit_20, #denum_20, #dconf_20 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_20: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#dwrit_20: $$boolean_type)
	(#denum_20: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, #g_aux_1, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc put  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: $$t)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#dval_21 == $$empty))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#dwrit_21 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }})
Gamma: 	
	(throw: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(l: $$object_type)
	(#dconf_21: $$boolean_type)
	(#denum_21: $$boolean_type)
	(#dwrit_21: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, {{ \"d\", #dval_21, $$f, #denum_21, #dconf_21 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_21: $$boolean_type)
	(#denum_21: $$boolean_type)
	(#dwrit_21: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
Preds: Pi(_$l_#l, #prop, #g_aux_0, #g_aux_1, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc put  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(#prop: $$string_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(xret: $$empty_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
;
 -- VERIFIED

Proc put  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#llpv: $$list_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(#tf: $$boolean_type)
	(xret: $$empty_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
;
 -- VERIFIED

Proc put  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#value == $$empty))
	(! (#dval == $$empty))
Gamma: 	
	(throw: $$boolean_type)
	(#ext: $$boolean_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#dconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(xret: $$empty_type)
	(#ext: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum: $$boolean_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc put  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(throw: #throw)
	(value: #value)
	(prop: #prop)
	(l: _$l_#l)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
Gamma: 	
	(throw: $$boolean_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(prop: $$string_type)
	(l: $$object_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(#tf: $$boolean_type)
	(#dcconf: $$boolean_type)
	(xret: $$empty_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #value, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
;
 -- VERIFIED

Proc hasProperty  - Single Spec - normal

Precondition
Heap: 
	
Store: 	
	(prop: #prop)
	(l: #l)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #gp_aux_0, #gp_aux_1, #gp_aux_2, #gp_aux_3, #gp_aux_4)

Postconditions
Post 0: 
Heap: 
	
Store: 	
	(xret: (not (#gp_aux_1 = $$undefined)))
Pure Formulae: 	
Gamma: 	
	(xret: $$boolean_type)
	(#prop: $$string_type)
	(#l: $$object_type)
Preds: Pi(#l, #prop, #gp_aux_0, #gp_aux_1, #gp_aux_2, #gp_aux_3, #gp_aux_4)
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(v: $$undefined)
Pure Formulae: 	
Gamma: 	
	(v: $$undefined_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(v: $$null)
Pure Formulae: 	
Gamma: 	
	(v: $$null_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$number_type)
	(_lvar_v: $$number_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$boolean_type)
	(_lvar_v: $$boolean_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$string_type)
	(_lvar_v: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	
Store: 	
	(v: _lvar_v)
Pure Formulae: 	
Gamma: 	
	(v: $$object_type)
	(_lvar_v: $$object_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lrferr_proto), (default: None)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
Preds: 
;
 -- VERIFIED

Proc i__putValue  - Single Spec - normal

Precondition
Heap: 
	_$l_#obj |-> [(#field: #oldvalue), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", _$l_#obj, #field }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#field, 0.) == \"@\"))
	(! (#field == \"\"))
	(! (_$l_#obj == $lg))
Gamma: 	
	(v: $$list_type)
	(#obj: $$object_type)
	(#field: $$string_type)
Preds: 

Postconditions
Post 0: 
Heap: 
	_$l_#obj |-> [(#field: #w), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(xret: $$empty_type)
	(#obj: $$object_type)
	(#field: $$string_type)
Preds: 
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_22 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_22 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }})
Gamma: 	
	(v: $$list_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_22, $$f, #denum_22, #dconf_22 }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#dconf_22: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_22: $$boolean_type)
	(#dwrit_22: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, #g_aux_1, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_23 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_23: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_23, #dwrit_23, #denum_23, #dconf_23 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_23: $$boolean_type)
	(#dconf_23: $$boolean_type)
	(#denum_23: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
Preds: Pi(_$l_#l, #prop, #cls, #g_aux_1, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
Pure Formulae: 	
	(! (#dval_24 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == (_$l_#l :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }})
	(#dwrit_24 == $$f)
Gamma: 	
	(#dconf_24: $$boolean_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, {{ \"d\", #dval_24, $$f, #denum_24, #dconf_24 }}, (_$l_#l :: (#lp :: #other)), #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(#dconf_24: $$boolean_type)
	(xret: $$object_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_24: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$list_type)
	(#denum_24: $$boolean_type)
Preds: Pi(_$l_#l, #prop, #cls, #g_aux_1, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#prop: $$string_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, $$undefined, #g_aux_4, #g_aux_5, #g_aux_6)
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_25 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#dwrit_25 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }})
Gamma: 	
	(#dwrit_25: $$boolean_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_25: $$boolean_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_25, $$f, #denum_25, #dconf_25 }}, {{ $lg }}, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#dwrit_25: $$boolean_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dconf_25: $$boolean_type)
	(#denum_25: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, #g_aux_1, {{ $lg }}, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_26 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#g_aux_1 == {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_26, #dwrit_26, #denum_26, #dconf_26 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	$lg |-> [(\"@extensible\": $$f), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#dwrit_26: $$boolean_type)
	(#dconf_26: $$boolean_type)
	(#denum_26: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, #g_aux_1, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__putValue  - Single Spec - error

Precondition
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
Pure Formulae: 	
	(! (#dval_27 == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
	(#g_aux_2 == ($lg :: (#lp :: #other)))
	(#dwrit_27 == $$f)
	(#g_aux_1 == {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }})
Gamma: 	
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(v: $$list_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval_27, $$f, #denum_27, #dconf_27 }}, ($lg :: (#lp :: #other)), #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_xret |-> [(\"@extensible\": $$t), (\"@class\": \"Error\"), (\"@proto\": $lterr_proto), (default: None)]
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(xret: _$l_xret)
Pure Formulae: 	
Gamma: 	
	(xret: $$object_type)
	(#other: $$list_type)
	(#g_aux_2: $$list_type)
	(#dwrit_27: $$boolean_type)
	(#lp: $$object_type)
	(#g_aux_1: $$list_type)
	(#prop: $$string_type)
	(#denum_27: $$boolean_type)
	(#dconf_27: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, #g_aux_1, #g_aux_2, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__putValue  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(v: $$list_type)
	(#prop: $$string_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, $$undefined, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": $$null), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(xret: $$empty_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }})
;
 -- VERIFIED

Proc i__putValue  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), $$undefined, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(#tf: $$boolean_type)
	(xret: $$empty_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
;
 -- VERIFIED

Proc i__putValue  - Single Spec - normal

Precondition
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), $$undefined, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))

Postconditions
Post 0: 
Heap: 
	$lg |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(#tf: $$boolean_type)
	(xret: $$empty_type)
	(#lltf: $$list_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ $lg }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), $$undefined, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
;
 -- VERIFIED

Proc i__putValue  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(xret: $$empty_type)
	(#ext: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#denum: $$boolean_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, #denum, #dconf }}, {{ _$l_#l }}, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__putValue  - Single Spec - normal

Precondition
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#w == $$empty))
	(! (#dval == $$empty))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#ext: $$boolean_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#denum: $$boolean_type)
	(#dconf: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #dval, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)

Postconditions
Post 0: 
Heap: 
	$lg |-> [(\"@extensible\": #ext), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(#prop: $$string_type)
	(#dconf: $$boolean_type)
	(xret: $$empty_type)
	(#ext: $$boolean_type)
	(#denum: $$boolean_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, #denum, #dconf }}, {{ $lg }}, #g_aux_3, #g_aux_4)
;
 -- VERIFIED

Proc i__putValue  - Single Spec - normal

Precondition
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"o\", _$l_#l, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (#cls == \"Array\"))
	(! (#cls == \"String\"))
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
	(#l: $$object_type)
	(#cls: $$string_type)
Preds: Pi(_$l_#l, #prop, (#cls :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (_$l_#l :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))

Postconditions
Post 0: 
Heap: 
	_$l_#l |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(#tf: $$boolean_type)
	(#dcconf: $$boolean_type)
	(xret: $$empty_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#l: $$object_type)
	(#cls: $$string_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
Preds: Pi(_$l_#l, #prop, {{ #cls }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ _$l_#l }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
;
 -- VERIFIED

Proc i__putValue  - Single Spec - normal

Precondition
Heap: 
	$lg |-> [(\"@extensible\": $$t), (default: $$unknown)]
Store: 	
	(v: {{ \"v\", $lg, #prop }})
	(w: #w)
Pure Formulae: 	
	(! (s-nth(#prop, 0.) == \"@\"))
	(! (#prop == \"\"))
Gamma: 	
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#lllp: $$list_type)
	(v: $$list_type)
	(#prop: $$string_type)
	(#dcenum: $$boolean_type)
	(#ocls: $$list_type)
	(#pcls: $$string_type)
	(#tf: $$boolean_type)
	(#lltf: $$list_type)
	(#llpv: $$list_type)
	(#dcconf: $$boolean_type)
	(#throw: $$boolean_type)
Preds: Pi($lg, #prop, (\"Object\" :: (#pcls :: #ocls)), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, ($lg :: (#lp :: #lllp)), ($$f :: (#tf :: #lltf)), (\"\" :: (#pv :: #llpv)))

Postconditions
Post 0: 
Heap: 
	$lg |-> [(\"@extensible\": $$t), (\"@proto\": #lp), (default: $$unknown)]
Store: 	
	(xret: $$empty)
Pure Formulae: 	
Gamma: 	
	(#llpv: $$list_type)
	(#pcls: $$string_type)
	(#prop: $$string_type)
	(#tf: $$boolean_type)
	(#dcconf: $$boolean_type)
	(xret: $$empty_type)
	(#throw: $$boolean_type)
	(#lltf: $$list_type)
	(#pv: $$string_type)
	(#lp: $$object_type)
	(#dcenum: $$boolean_type)
	(#lllp: $$list_type)
	(#ocls: $$list_type)
Preds: Pi($lg, #prop, {{ \"Object\" }}, {{ \"d\", #w, $$t, $$t, $$t }}, {{ $lg }}, {{ $$f }}, {{ \"\" }}), Pi(#lp, #prop, (#pcls :: #ocls), {{ \"d\", #dcval, $$t, #dcenum, #dcconf }}, (#lp :: #lllp), (#tf :: #lltf), (#pv :: #llpv))
;
 -- VERIFIED

ALL Succeeded in 7.623099
