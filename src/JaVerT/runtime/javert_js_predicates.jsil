(********************
 **** JAVASCRIPT ****
 ********************)

pred JSObject (l) :
    types (l : Obj) *
	((l, "@proto") -> $lobj_proto) *
	((l, "@class") -> "Object") *
	((l, "@extensible") -> true);

pred DataProp (l, prop, v) :
    types (l : Obj, prop : Str) *
	((l, prop) -> {{ "d", v, true, true, true }}) *
	(! (v == empty));
	
pred DataPropGen (l, prop, v, writ, enum, conf) : 
	types (l : Obj, prop : Str) *
	((l, prop) -> {{ "d", v, writ, enum, conf }}) *
	(! (v == empty)) * types (writ : Bool, enum : Bool, conf : Bool);
	
pred DataPropConst (l, prop, v) :
    types (l : Obj, prop : Str) *
	((l, prop) -> {{ "d", v, false, false, false }}) *
	(! (v == empty));
	
pred EmptyProp (l, prop) :
	types (l : Obj, prop : Str) *
	((l, prop) -> None);
	
pred JSObjWithProto (l, proto) :
	types (l : Obj) *
	((l, "@proto") -> proto) *
	((l, "@class") -> "Object") *
	((l, "@extensible") -> true);
	
pred ErrorObjectWithMessage (l, m) :
  types (l : Obj) *
  ((l, "@proto") -> $lerr_proto) * ((l, "@class") -> "Error") *
  ((l, "@extensible") -> true) *
  ((l, "message") -> {{"d", m, true, false, true}});

pred EmptyProp (l, prop) : 
	((l, prop) -> None); 

pred EmptyProps (l, props) : 
	empty_fields (l : -u- (props, -{ "@proto", "@extensible", "@class"}-)); 

pred FunctionObject (l, fid, sc, proto) : 
	((l, "@proto") -> $lfun_proto) * 
	((l, "@class") -> "Function") *
	((l, "@extensible") -> true) * 
	((l, "@call") -> fid) * 
	((l, "@construct") -> fid) *
	((l, "@scope")     -> sc) * 
	((l, "length")     -> #ignore1) *
	((l, "arguments")  -> #ignore2) *
	((l, "caller")     -> #ignore3) *
	((l, "prototype")  -> {{ "d", proto, true, false, false }}) *
	types(sc : List, fid: Str) *
	empty_fields(l : -{ "@proto", "@class", "@extensible", "@scope", "length", "@call", "@construct", "arguments", "caller", "prototype" }- ); 
