proc defaultValue(l, hint) {
			pass := 0;
            goto [hint = "String"] sinit ninit;
    sinit:  goto [pass = 2] throw s;
        s:  pass := pass + 1; 
            toStr := "get" (l, "toString");
            xS := "isCallable" (toStr);
            goto [xS] str n;
    str:    st := toStr (l);
            ipst := "isPrimitive" (st);
            goto [ipst] prim_s ninit;
    prim_s: xret := st;
            goto rlab;
    ninit:  goto [pass = 2] throw n;
    n:      pass := pass + 1;
            valOf := "get" (l, "valueOf");
            xV := "isCallable" (valOf);
            goto [xV] val s;
    val:    vl := valOf (l);
            ipvl := "isPrimitive" (vl);
            goto [ipvl] prim_n sinit;
    prim_n: xret := vl;
    rlab:   skip;
    throw:  xerr := "TypeError" ();
    elab:   skip
}
with
{
    ret: xret, rlab;
    err: xerr, elab;
}